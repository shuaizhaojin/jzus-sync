%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Visio-route.pdf
%%Creator: Adobe Acrobat 9.1.2
%%For: shang
%%CreationDate: 2018/6/22, 23:51:34
%%BoundingBox: 0 0 285 171
%%HiResBoundingBox: 0 0 284.1401 170.1001
%%CropBox: 0 0 284.1401 170.1001
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1031 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2018-06-22T23:49:42+08:00"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   xmp:ModifyDate="2018-06-22T23:49:42+08:00"
   pdf:Producer="Acrobat Distiller 9.0.0 (Windows)"
   xmpMM:DocumentID="uuid:2bad2f8d-a77a-418c-8d2e-93723fb5e6db"
   xmpMM:InstanceID="uuid:cce89e63-8c74-4ae8-b247-ea7bb385cf99">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Visio-route.vsd</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>shang</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
/0 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 168 
/Lookup <~
I/rL3K)k??M#d5LNWAqVPlUgaS,iQhT`G)mV#^MqWrW/"YQ4\'[/g4,\H)X0]E%s3_#XK8`;oo<a8l5?
bQ.YCcN*tFciF(GK)k<>L&gcEM?*ANNr](XQ2ppbS,iQhT`G)mWrW/"YQ4\'[K-=-\cDa1]`A'4_#XK8
`;oo<aT2>@bQ.YCcN*tFd/a1HL]I)JM#d5LN<&hUOoYL^QiR-dScJcjU&b2nV?$VrX8r8#Z2jn)[fHF.
\cDa1^&\05_>sT9`;oo<aT2>@cN*tFd/a1HNr]"VOoYI]Q2ppbRfNHgTE+ulU]CDpVuZhtXoSJ%ZN1"*
\,cO/])_j2^B"96_>sT9`W6#=aT2>@blIbDciF(Gd/a1HPQ:^`QiR-dT)elkV?$VrWrW/"[/g4,\H)X0
]E%s3^]=B7_uTf;`rQ,>b5hPBc2dkEciF(GdK':IRK3?fSH/ZiTE+ulV?$VrWW<&!ZN1"*[fHF.])_j2
_>sT9a8l5?bQ.YCc2dkEciF(GdK':IU&b2nU]CDp^B"96_Z9]:`W6#=aT2>@blIbDd/a1HdfBCJV#^Mq
W;uquX8r8#XoSJ%Z2jn)\H)X0^&\05`;oo<a8l5?b5hPBc2dkEe,]LLWrW/"])_j2_#XK8_uTf;`rQ,>
dfBCJe,]LLZN1"*[/g4,[fHF.aT2>@ciF(GZiL++a8l5?aoMGAblIbDcN*tFciF(GdK':I\,cO/`;oo<
a8l5?bQ.YCcN*tFe,]LL]E%s3^]=B7_#XK8aoMGAd/a1Hb5hPBdfBCJ_uTf;`;oo<blIbDciF(GcN*tF
d/a1Hb5hPBcN*tFdfBCJc2dkEc2dkEdK':IciF(GdfBCJ~>
>>
/CSD add_res
/1 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 166 
/Lookup <~
HiW@1K)k<>L]I)JN<&hUPQ:^`RK3?fTE+ulU]CDpWW<&!Y5nS&[/g4,\H)X0]E%s3^]=B7_uTf;a8l5?
bQ.YCcN*tFciF(GJcP0<K`LWCM#d5LNWAtWPlUgaS,iQhT`G)mV#^MqYQ4\'[/g4,_#XK8`;oo<a8l5?
bQ.YCLB-uIMu`\SOT>C]QiR-dSH/ZiT`G)mV?$VrX8r8#YlOe([K-=-\cDa1]`A'4_#XK8`;oo<a8l5?
bQ.YCcN*tFd/a1HN<&bSNWAqVOT>@\Q2ppbT)elkUB(;oVuZhtXT8A$Z2jn)[fHF.])_j2^B"96_>sT9
`;oo<aT2>@blIbDcN*tFd/a1HP5tU_RfNHgT)elkU&b2nV#^MqWrW/"Y5nS&ZiL++\,cO/]E%s3^B"96
_Z9]:`rQ,>aoMGAblIbDciF(Gd/a1HW;uquXT8A$[K-=-\cDa1_#XK8_uTf;a8l5?b5hPBc2dkEciF(G
dK':IU]CDpV?$VrW;uquXT8A$\H)X0]E%s3^B"96_>sT9`W6#=bQ.YCdfBCJVuZhtWrW/"XoSJ%^&\05
`;oo<a8l5?b5hPBblIbDd/a1He,]LLZN1"*[/g4,_uTf;`W6#=cN*tFciF(GdK':Ie,]LLYQ4\'[fHF.
\H)X0aT2>@c2dkEciF(Ge,]LLZN1"*ZiL++\cDa1]E%s3^B"96_>sT9`rQ,>aT2>@ciF(Ge,]LL\,cO/
]E%s3c2dkEdfBCJ])_j2d/a1HdfBCJ^]=B7_uTf;`;oo<bQ.YCd/a1H_uTf;`rQ,>b5hPBciF(G`rQ,>
blIbDdfBCJciF(Gd/a1Hd/a1HdfBCJd/a1H~>
>>
/CSD add_res
/2 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 181 
/Lookup <~
I/rL3K)k??M#d5LNr]"VPlUgaS,iQhT`G)mV#^MqWrW/"YQ4\'[/g4,\H)X0]E%s3_#XK8`;oo<a8l5?
bQ.YCcN*tFciF(GK)k<>K`LZDM?*ANNr](XQ2ppbS,iQhV#^MqWrW/"[K-=-\cDa1]`A'4_#XK8aT2>@
LB-uIM#d5LN<&bSOoYI]QiR-dSH/ZiU&b2nV?$VrX8r8#YlOe([K-=-\cDa1]`A'4_>sT9`;oo<bQ.YC
cN*tFd/a1HN<&bSRfNHgTE+ulUB(;oVuZhtXoSJ%ZN1"*[fHF.])_j2^B"96_>sT9`;oo<aT2>@blIbD
cN*tFd/a1HPQ:^`T)elkU&b2nWrW/"YQ4\'[/g4,\H)X0]E%s3^B"96_Z9]:`rQ,>aoMGAblIbDciF(G
d/a1HRK3?fS,iQhTE+ulW;uqu[fHF.\cDa1_uTf;a8l5?b5hPBc2dkEciF(GdK':ITE+ulU&b2nU]CDp
V?$VrWW<&!XT8A$\H)X0]E%s3_Z9]:`W6#=aT2>@bQ.YCcN*tFdfBCJV#^MqVuZhtXoSJ%Z2jn)\,cO/
])_j2^&\05_#XK8b5hPBc2dkEciF(Ge,]LLX8r8#XT8A$ZN1"*_uTf;`W6#=aT2>@ciF(GdK':Ie,]LL
YlOe([fHF.])_j2^]=B7_Z9]:`W6#=bQ.YCciF(Ge,]LLZN1"*ZN1"*ZiL++\H)X0]E%s3^B"96_>sT9
a8l5?aT2>@bQ.YCcN*tFciF(Ge,]LL\,cO/\H)X0\cDa1^]=B7_>sT9c2dkEe,]LL]E%s3]`A'4^&\05
_uTf;c2dkEdfBCJ^B"96`;oo<a8l5?aoMGAbQ.YC_uTf;`rQ,>ciF(G`rQ,>blIbDcN*tFd/a1HdfBCJ
blIbDd/a1HdfBCJciF(Gd/a1HdK':I~>
>>
/CSD add_res
/3 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 169 
/Lookup <~
I/rL3K)k??M#d5LNWAqVPlUgaS,iQhT`G)mV#^MqWrW/"YQ4\'[/g4,\cDa1]`A'4_#XK8`;oo<a8l5?
bQ.YCcN*tFd/a1HJcP0<K`LZDM#d8MNr](XQ2ppbS,iQhT`G)mWrW/"YQ4\'[K-=-\cDa1]`A'4_#XK8
`;oo<aT2>@bQ.YCcN*tFLB-uIM#d5LN<&hUOoYI]QiR-dScJcjU&b2nV?$VrX8r8#YlOe([K-=-\cDa1
^&\05_>sT9`;oo<aT2>@d/a1HN<&bSNr]"VRfNHgTE+ulU]CDpVuZhtXoSJ%ZN1"*\,cO/])_j2^B"96
_>sT9`W6#=aT2>@blIbDcN*tFd/a1HP5tU_RfNHgT)elkU&b2nV?$VrWrW/"[/g4,\H)X0]E%s3^]=B7
_uTf;`rQ,>b5hPBc2dkEciF(GdK':IRK3?fS,iQhSH/ZiV?$VrWW<&!ZN1"*[fHF.])_j2_>sT9a8l5?
bQ.YCc2dkEciF(GdK':ITE+ulU&b2n\H)X0^B"96_Z9]:aT2>@blIbDd/a1HdfBCJU]CDpXoSJ%Z2jn)
[/g4,\H)X0])_j2^&\05_>sT9`;oo<a8l5?b5hPBc2dkEe,]LLX8r8#_#XK8_uTf;`rQ,>ciF(GdfBCJ
e,]LLYQ4\'YlOe([fHF.aT2>@ciF(GZiL++[fHF.\H)X0]E%s3^B"96a8l5?aoMGAciF(G\,cO/^]=B7
a8l5?e,]LL]E%s3]`A'4^&\05_uTf;a8l5?aoMGA^]=B7`;oo<c2dkEd/a1HdfBCJblIbD`rQ,>aoMGA
blIbDd/a1Hb5hPBcN*tFdfBCJc2dkEcN*tFdK':IciF(GdK':I~>
>>
/CSD add_res
/4 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 176 
/Lookup <~
I/rL3K)k??L]I,KNWAqVPlUgaS,iQhTE+ulV#^MqWW<&!YQ4\'[/g4,\H)X0]`A'4^]=B7_uTf;a8l5?
bQ.YCc2dkEciF(GJH5*<K`LZDM#d8MNr](XT`G)mV#^MqWrW/"YQ4\'[/g4,\H)X0]`A'4_#XK8_uTf;
a8l5?cN*tFciF(GLB-oGM#d5LN<&bSOoYI]QiR-dSH/ZiU&b2nV?$VrX8r8#YlOe([/g4,\cDa1]`A'4
_#XK8`;oo<a8l5?bQ.YCcN*tFOoYL^Q2ppbRfNHgT)elkU]CDpVuZhtXT8A$Z2jn)[fHF.\cDa1^&\05
_>sT9`;oo<aT2>@bQ.YCcN*tFd/a1HP5tU_PQ:^`QiR-dT)elkU&b2nV#^MqY5nS&ZiL++\,cO/])_j2
^B"96_>sT9`W6#=aoMGAblIbDcN*tFd/a1HRK3?fRfNHgW;uquXT8A$[K-=-a8l5?b5hPBc2dkEciF(G
dK':ITE+ulT`G)mUB(;oV#^MqW;uqu\H)X0]E%s3^B"96`;oo<aT2>@cN*tFdK':IU]CDpVuZhtWrW/"
])_j2_#XK8a8l5?aoMGAblIbDcN*tFdfBCJXT8A$Y5nS&\,cO/]E%s3^]=B7_uTf;aT2>@dK':Ie,]LL
ZN1"*]`A'4^B"96_Z9]:`;oo<b5hPBc2dkEciF(GdfBCJe,]LLZiL++\cDa1]E%s3_uTf;`rQ,>aT2>@
ciF(Ge,]LL[fHF.\,cO/c2dkEciF(G])_j2]E%s3`rQ,>bQ.YCd/a1HdfBCJ_>sT9_uTf;`rQ,>b5hPB
`rQ,>aoMGAbQ.YCciF(Gd/a1HdK':Ib5hPBdK':Ic2dkEd/a1HdfBCJciF(GciF(Gd/a1Hd/a1HdfBCJ
dfBCJ~>
>>
/CSD add_res
/5 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 183 
/Lookup <~
IK8U4K)k??M#d5LNr]"VPlUgaS,iQhT`G)mV#^MqWrW/"YQ4\'[/g4,\H)X0]E%s3_#XK8`;oo<a8l5?
bQ.YCcN*tFciF(GK)k<>L&gcEM?*ANNr](XQ2ppbS,iQhV#^MqWrW/"[K-=-\cDa1]`A'4_#XK8aT2>@
LB-uIM#d5LN<&hUOoYL^QiR-dSH/ZiU&b2nV?$VrX8r8#YlOe([K-=-\cDa1^&\05_>sT9`;oo<aT2>@
bQ.YCcN*tFd/a1HNr]"VOoYI]QN7$cS,iQhTE+ulU]CDpVuZhtXT8A$ZN1"*[fHF.])_j2^B"96_>sT9
`W6#=aT2>@blIbDcN*tFd/a1HPQ:^`Q2ppbQiR-dT)elkU&b2nV?$VrWrW/"YQ4\'[/g4,\H)X0]E%s3
^B"96_Z9]:`rQ,>aoMGAblIbDciF(Gd/a1HRfNHgScJcjV?$VrWW<&!XoSJ%[fHF.\cDa1_uTf;a8l5?
bQ.YCc2dkEciF(GdK':ITE+ulU]CDp\H)X0_Z9]:`W6#=aT2>@bQ.YCcN*tFd/a1HdfBCJV#^MqW;uqu
X8r8#XoSJ%Z2jn)[/g4,\,cO/])_j2^&\05_#XK8b5hPBc2dkEciF(Ge,]LLWW<&!X8r8#ZN1"*\H)X0
_uTf;`W6#=aT2>@ciF(GdfBCJe,]LLYlOe(Z2jn)ZN1"*[/g4,[fHF.^]=B7_uTf;aT2>@bQ.YCciF(G
e,]LLZiL++^B"96`rQ,>aoMGAbQ.YCcN*tFciF(Ge,]LL\,cO/^]=B7_>sT9`rQ,>aT2>@c2dkEciF(G
e,]LL])_j2]E%s3^&\05^]=B7_#XK8`;oo<c2dkEdfBCJa8l5?`;oo<`;oo<blIbDcN*tFblIbDcN*tF
d/a1HdfBCJb5hPBbQ.YCciF(Gd/a1HdfBCJdK':I~>
>>
/CSD add_res
/6 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 163 
/Lookup <~
HiW@1K)k<>L]I)JN<&hUPQ:^`RK3?fTE+ulU]CDpWW<&!Y5nS&ZiL++\H)X0]E%s3^]=B7_uTf;a8l5?
bQ.YCcN*tFciF(GJcP0<K`LWCM#d5LNr]%WPlUgaS,iQhT`G)mV#^MqYQ4\'[/g4,_#XK8`;oo<a8l5?
bQ.YCMu`\SOoYI]QiR-dSH/ZiU&b2nV?$VrX8r8#YlOe([K-=-\cDa1]`A'4_#XK8`;oo<aT2>@bQ.YC
cN*tFd/a1HNWAqVQ2ppbRfNHgTE+ulUB(;oVuZhtXT8A$ZN1"*[fHF.])_j2^B"96_>sT9`;oo<aT2>@
blIbDcN*tFd/a1HT)elkU&b2nV?$VrWrW/"\H)X0]E%s3^B"96_Z9]:`rQ,>aoMGAblIbDciF(Gd/a1H
V#^MqW;uquXoSJ%Z2jn)[fHF.\cDa1_#XK8`;oo<a8l5?bQ.YCc2dkEciF(GdK':IU]CDpW;uquXT8A$
\H)X0]E%s3^B"96_Z9]:`W6#=dfBCJV#^MqWrW/"[/g4,\,cO/])_j2^&\05b5hPBblIbDciF(Ge,]LL
X8r8#YQ4\'[/g4,]`A'4_uTf;`W6#=aT2>@ciF(GdK':Ie,]LLaT2>@c2dkEd/a1He,]LLZN1"*ZN1"*
]E%s3^B"96`rQ,>aT2>@cN*tFciF(Ge,]LL\,cO/\cDa1]E%s3_>sT9c2dkEciF(GdfBCJ])_j2]`A'4
^&\05_uTf;c2dkE`;oo<`rQ,>aoMGAbQ.YC_uTf;ciF(Ga8l5?dfBCJb5hPBbQ.YCbQ.YCd/a1HdfBCJ
dK':IciF(Gd/a1HdK':I~>
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -170.1 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
7.62939e-6 0 mo
7.62939e-6 170.1 li
284.14 170.1 li
284.14 0 li
cp
clp
[1 0 0 1 -91.86 0 ]ct
92.16 35.82 mo
148.86 35.82 li
144.6 40.08 li
96.42 40.08 li
92.16 35.82 li
false sop
.309636 .246586 .25098 3.0518e-5 cmyk
ef
.24 lw
0 lc
0 lj
2 ml
[] 0 dsh
false sadj
92.16 35.82 mo
148.86 35.82 li
.750179 .679652 .670191 .901488 cmyk
@
96.42 40.08 mo
144.6 40.08 li
@
148.86 35.82 mo
148.86 72.9 li
144.6 68.64 li
144.6 40.08 li
148.86 35.82 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
148.86 35.82 mo
148.86 72.9 li
.750179 .679652 .670191 .901488 cmyk
@
144.6 40.08 mo
144.6 68.64 li
@
148.86 72.9 mo
92.16 72.9 li
96.42 68.64 li
144.6 68.64 li
148.86 72.9 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
148.86 72.9 mo
92.16 72.9 li
.750179 .679652 .670191 .901488 cmyk
@
144.6 68.64 mo
96.42 68.64 li
@
92.16 72.9 mo
92.16 35.82 li
96.42 40.08 li
96.42 68.64 li
92.16 72.9 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
92.16 72.9 mo
92.16 35.82 li
.750179 .679652 .670191 .901488 cmyk
@
96.42 68.64 mo
96.42 40.08 li
@
110.4 73.08 mo
120.96 73.08 li
120.96 68.52 li
110.4 68.52 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
1 lc
1 lj
10 ml
120.96 73.08 mo
110.4 73.08 li
110.4 68.52 li
120.96 68.52 li
cp
@
111.84 72.9 mo
110.4 72.9 li
110.4 68.64 li
111.84 68.64 li
cp
110.4 72.9 mo
cp
120.96 72.9 mo
119.52 72.9 mo
120.96 72.9 li
120.96 68.64 li
119.52 68.64 li
cp
ef
110.4 72.9 mo
110.4 68.64 li
111.84 68.64 li
111.84 70.08 li
.750179 .679652 .670191 .901488 cmyk
@
111.84 71.52 mo
111.84 72.9 li
110.4 72.9 li
@
120.96 72.9 mo
120.96 68.64 li
119.52 68.64 li
119.52 70.08 li
@
119.52 71.52 mo
119.52 72.9 li
120.96 72.9 li
@
111.84 70.08 mo
112.38 70.08 li
112.38 71.52 li
111.84 71.52 li
cp
119.52 70.08 mo
119.52 70.08 mo
118.98 70.08 li
118.98 71.52 li
119.52 71.52 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
111.84 70.08 mo
112.38 70.08 li
112.38 71.52 li
111.84 71.52 li
.750179 .679652 .670191 .901488 cmyk
@
119.52 70.08 mo
118.98 70.08 li
118.98 71.52 li
119.52 71.52 li
@
110.4 72.9 mo
110.4 68.64 li
@
120.96 72.9 mo
120.96 68.64 li
@
119.52 68.64 mo
119.52 64.38 116.1 60.96 111.84 60.96 cv
@
111.84 68.64 mo
113.22 68.64 li
113.22 60.96 li
111.84 60.96 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
111.84 60.96 mo
113.22 60.96 li
113.22 68.64 li
111.84 68.64 li
cp
.750179 .679652 .670191 .901488 cmyk
@
113.22 60.96 mo
cp
@
148.86 35.88 mo
205.56 35.88 li
201.3 40.14 li
153.12 40.14 li
148.86 35.88 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
0 lc
0 lj
2 ml
148.86 35.88 mo
205.56 35.88 li
.750179 .679652 .670191 .901488 cmyk
@
153.12 40.14 mo
201.3 40.14 li
@
205.56 35.88 mo
205.56 72.96 li
201.3 68.7 li
201.3 40.14 li
205.56 35.88 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
205.56 35.88 mo
205.56 72.96 li
.750179 .679652 .670191 .901488 cmyk
@
201.3 40.14 mo
201.3 68.7 li
@
205.56 72.96 mo
148.86 72.96 li
153.12 68.7 li
201.3 68.7 li
205.56 72.96 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
205.56 72.96 mo
148.86 72.96 li
.750179 .679652 .670191 .901488 cmyk
@
201.3 68.7 mo
153.12 68.7 li
@
148.86 72.96 mo
148.86 35.88 li
153.12 40.14 li
153.12 68.7 li
148.86 72.96 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
148.86 72.96 mo
148.86 35.88 li
.750179 .679652 .670191 .901488 cmyk
@
153.12 68.7 mo
153.12 40.14 li
@
205.56 35.82 mo
262.2 35.82 li
258 40.08 li
209.76 40.08 li
205.56 35.82 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
205.56 35.82 mo
262.2 35.82 li
.750179 .679652 .670191 .901488 cmyk
@
209.76 40.08 mo
258 40.08 li
@
262.2 35.82 mo
262.2 72.9 li
258 68.64 li
258 40.08 li
262.2 35.82 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
262.2 35.82 mo
262.2 72.9 li
.750179 .679652 .670191 .901488 cmyk
@
258 40.08 mo
258 68.64 li
@
262.2 72.9 mo
205.56 72.9 li
209.76 68.64 li
258 68.64 li
262.2 72.9 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
262.2 72.9 mo
205.56 72.9 li
.750179 .679652 .670191 .901488 cmyk
@
258 68.64 mo
209.76 68.64 li
@
205.56 72.9 mo
205.56 35.82 li
209.76 40.08 li
209.76 68.64 li
205.56 72.9 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
205.56 72.9 mo
205.56 35.82 li
.750179 .679652 .670191 .901488 cmyk
@
209.76 68.64 mo
209.76 40.08 li
@
262.2 35.88 mo
318.9 35.88 li
314.64 40.14 li
266.46 40.14 li
262.2 35.88 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
262.2 35.88 mo
318.9 35.88 li
.750179 .679652 .670191 .901488 cmyk
@
266.46 40.14 mo
314.64 40.14 li
@
318.9 35.88 mo
318.9 72.96 li
314.64 68.7 li
314.64 40.14 li
318.9 35.88 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
318.9 35.88 mo
318.9 72.96 li
.750179 .679652 .670191 .901488 cmyk
@
314.64 40.14 mo
314.64 68.7 li
@
318.9 72.96 mo
262.2 72.96 li
266.46 68.7 li
314.64 68.7 li
318.9 72.96 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
318.9 72.96 mo
262.2 72.96 li
.750179 .679652 .670191 .901488 cmyk
@
314.64 68.7 mo
266.46 68.7 li
@
262.2 72.96 mo
262.2 35.88 li
266.46 40.14 li
266.46 68.7 li
262.2 72.96 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
262.2 72.96 mo
262.2 35.88 li
.750179 .679652 .670191 .901488 cmyk
@
266.46 68.7 mo
266.46 40.14 li
@
318.9 35.82 mo
375.6 35.82 li
371.34 40.08 li
323.16 40.08 li
318.9 35.82 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
318.9 35.82 mo
375.6 35.82 li
.750179 .679652 .670191 .901488 cmyk
@
323.16 40.08 mo
371.34 40.08 li
@
375.6 35.82 mo
375.6 72.9 li
371.34 68.64 li
371.34 40.08 li
375.6 35.82 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
375.6 35.82 mo
375.6 72.9 li
.750179 .679652 .670191 .901488 cmyk
@
371.34 40.08 mo
371.34 68.64 li
@
375.6 72.9 mo
318.9 72.9 li
323.16 68.64 li
371.34 68.64 li
375.6 72.9 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
375.6 72.9 mo
318.9 72.9 li
.750179 .679652 .670191 .901488 cmyk
@
371.34 68.64 mo
323.16 68.64 li
@
318.9 72.9 mo
318.9 35.82 li
323.16 40.08 li
323.16 68.64 li
318.9 72.9 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
318.9 72.9 mo
318.9 35.82 li
.750179 .679652 .670191 .901488 cmyk
@
323.16 68.64 mo
323.16 40.08 li
@
375.6 169.86 mo
318.9 169.86 li
323.16 165.6 li
371.34 165.6 li
375.6 169.86 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
375.6 169.86 mo
318.9 169.86 li
.750179 .679652 .670191 .901488 cmyk
@
371.34 165.6 mo
323.16 165.6 li
@
318.9 169.86 mo
318.9 132.06 li
323.16 136.32 li
323.16 165.6 li
318.9 169.86 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
318.9 169.86 mo
318.9 132.06 li
.750179 .679652 .670191 .901488 cmyk
@
323.16 165.6 mo
323.16 136.32 li
@
318.9 132.06 mo
375.6 132.06 li
371.34 136.32 li
323.16 136.32 li
318.9 132.06 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
318.9 132.06 mo
375.6 132.06 li
.750179 .679652 .670191 .901488 cmyk
@
323.16 136.32 mo
371.34 136.32 li
@
375.6 132.06 mo
375.6 169.86 li
371.34 165.6 li
371.34 136.32 li
375.6 132.06 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
375.6 132.06 mo
375.6 169.86 li
.750179 .679652 .670191 .901488 cmyk
@
371.34 136.32 mo
371.34 165.6 li
@
346.8 136.86 mo
357.36 136.86 li
357.36 132.3 li
346.8 132.3 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
1 lc
1 lj
10 ml
346.8 132.3 mo
357.36 132.3 li
357.36 136.86 li
346.8 136.86 li
cp
@
355.92 132.42 mo
357.36 132.42 li
357.36 136.68 li
355.92 136.68 li
cp
357.36 132.42 mo
cp
346.8 132.42 mo
348.24 132.42 mo
346.8 132.42 li
346.8 136.68 li
348.24 136.68 li
cp
ef
357.36 132.42 mo
357.36 136.68 li
355.92 136.68 li
355.92 135.24 li
.750179 .679652 .670191 .901488 cmyk
@
355.92 133.86 mo
355.92 132.42 li
357.36 132.42 li
@
346.8 132.42 mo
346.8 136.68 li
348.24 136.68 li
348.24 135.24 li
@
348.24 133.86 mo
348.24 132.42 li
346.8 132.42 li
@
355.92 135.24 mo
355.38 135.24 li
355.38 133.86 li
355.92 133.86 li
cp
348.24 135.24 mo
348.24 135.24 mo
348.78 135.24 li
348.78 133.86 li
348.24 133.86 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
355.92 135.24 mo
355.38 135.24 li
355.38 133.86 li
355.92 133.86 li
.750179 .679652 .670191 .901488 cmyk
@
348.24 135.24 mo
348.78 135.24 li
348.78 133.86 li
348.24 133.86 li
@
357.36 132.42 mo
357.36 136.68 li
@
346.8 132.42 mo
346.8 136.68 li
@
348.24 136.68 mo
348.24 140.94 351.66 144.42 355.92 144.42 cv
@
354.54 144.42 mo
355.92 144.42 li
355.92 136.68 li
354.54 136.68 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
355.92 144.42 mo
354.54 144.42 li
354.54 136.68 li
355.92 136.68 li
cp
.750179 .679652 .670191 .901488 cmyk
@
354.54 144.42 mo
cp
@
318.9 169.44 mo
262.2 169.44 li
266.46 165.18 li
314.64 165.18 li
318.9 169.44 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
0 lc
0 lj
2 ml
318.9 169.44 mo
262.2 169.44 li
.750179 .679652 .670191 .901488 cmyk
@
314.64 165.18 mo
266.46 165.18 li
@
262.2 169.44 mo
262.2 132.36 li
266.46 136.62 li
266.46 165.18 li
262.2 169.44 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
262.2 169.44 mo
262.2 132.36 li
.750179 .679652 .670191 .901488 cmyk
@
266.46 165.18 mo
266.46 136.62 li
@
262.2 132.36 mo
318.9 132.36 li
314.64 136.62 li
266.46 136.62 li
262.2 132.36 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
262.2 132.36 mo
318.9 132.36 li
.750179 .679652 .670191 .901488 cmyk
@
266.46 136.62 mo
314.64 136.62 li
@
318.9 132.36 mo
318.9 169.44 li
314.64 165.18 li
314.64 136.62 li
318.9 132.36 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
318.9 132.36 mo
318.9 169.44 li
.750179 .679652 .670191 .901488 cmyk
@
314.64 136.62 mo
314.64 165.18 li
@
262.2 169.56 mo
205.56 169.56 li
209.76 165.3 li
258 165.3 li
262.2 169.56 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
262.2 169.56 mo
205.56 169.56 li
.750179 .679652 .670191 .901488 cmyk
@
258 165.3 mo
209.76 165.3 li
@
205.56 169.56 mo
205.56 132.48 li
209.76 136.74 li
209.76 165.3 li
205.56 169.56 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
205.56 169.56 mo
205.56 132.48 li
.750179 .679652 .670191 .901488 cmyk
@
209.76 165.3 mo
209.76 136.74 li
@
205.56 132.48 mo
262.2 132.48 li
258 136.74 li
209.76 136.74 li
205.56 132.48 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
205.56 132.48 mo
262.2 132.48 li
.750179 .679652 .670191 .901488 cmyk
@
209.76 136.74 mo
258 136.74 li
@
262.2 132.48 mo
262.2 169.56 li
258 165.3 li
258 136.74 li
262.2 132.48 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
262.2 132.48 mo
262.2 169.56 li
.750179 .679652 .670191 .901488 cmyk
@
258 136.74 mo
258 165.3 li
@
205.56 169.44 mo
148.86 169.44 li
153.12 165.18 li
201.3 165.18 li
205.56 169.44 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
205.56 169.44 mo
148.86 169.44 li
.750179 .679652 .670191 .901488 cmyk
@
201.3 165.18 mo
153.12 165.18 li
@
148.86 169.44 mo
148.86 132.36 li
153.12 136.62 li
153.12 165.18 li
148.86 169.44 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
148.86 169.44 mo
148.86 132.36 li
.750179 .679652 .670191 .901488 cmyk
@
153.12 165.18 mo
153.12 136.62 li
@
148.86 132.36 mo
205.56 132.36 li
201.3 136.62 li
153.12 136.62 li
148.86 132.36 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
148.86 132.36 mo
205.56 132.36 li
.750179 .679652 .670191 .901488 cmyk
@
153.12 136.62 mo
201.3 136.62 li
@
205.56 132.36 mo
205.56 169.44 li
201.3 165.18 li
201.3 136.62 li
205.56 132.36 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
205.56 132.36 mo
205.56 169.44 li
.750179 .679652 .670191 .901488 cmyk
@
201.3 136.62 mo
201.3 165.18 li
@
148.86 169.56 mo
92.16 169.56 li
96.42 165.3 li
144.6 165.3 li
148.86 169.56 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
148.86 169.56 mo
92.16 169.56 li
.750179 .679652 .670191 .901488 cmyk
@
144.6 165.3 mo
96.42 165.3 li
@
92.16 169.56 mo
92.16 132.48 li
96.42 136.74 li
96.42 165.3 li
92.16 169.56 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
92.16 169.56 mo
92.16 132.48 li
.750179 .679652 .670191 .901488 cmyk
@
96.42 165.3 mo
96.42 136.74 li
@
92.16 132.48 mo
148.86 132.48 li
144.6 136.74 li
96.42 136.74 li
92.16 132.48 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
92.16 132.48 mo
148.86 132.48 li
.750179 .679652 .670191 .901488 cmyk
@
96.42 136.74 mo
144.6 136.74 li
@
148.86 132.48 mo
148.86 169.56 li
144.6 165.3 li
144.6 136.74 li
148.86 132.48 li
.309636 .246586 .25098 3.0518e-5 cmyk
ef
148.86 132.48 mo
148.86 169.56 li
.750179 .679652 .670191 .901488 cmyk
@
144.6 136.74 mo
144.6 165.3 li
@
gsave
124.68 52.44 mo
124.68 50.16 122.82 48.3 120.48 48.3 cv
118.2 48.3 116.34 50.16 116.34 52.44 cv
116.34 54.78 118.2 56.64 120.48 56.64 cv
122.82 56.64 124.68 54.78 124.68 52.44 cv
eclp
gsave
129.36 48.24 mo
129.36 41.04 123.48 35.16 116.28 35.16 cv
109.02 35.16 103.2 41.04 103.2 48.24 cv
103.2 55.44 109.02 61.32 116.28 61.32 cv
123.48 61.32 129.36 55.44 129.36 48.24 cv
eclp
116.16 57 mo
125.28 57 li
125.28 48.12 li
116.16 48.12 li
cp
gsave
/7 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 183 
/Lookup <~
GlZ\$IK8C.K`L?;M?)uCNr\_NPlURZRfNEfTE+ulU]CDpW;uquXT8A$Z2jn)[/g4,\H)X0]`A'4^]=B7
_Z9]:`W6#=aT2>@IK8=,JcOp5L&gK=MZE,EO9"kPQ2p^\TE+ulV#^MqXoSJ%Z2jn)[K-=-\H)X0_#XK8
KE139L&gH<M#clBN<&GJOoY.TQN6j^SH/ZiT`G)mV#^MqW;uquXoSJ%Z2jn)[K-=-\H)X0]`A'4_#XK8
_uTf;`rQ,>aT2>@MZE)DN<&DIOT=tQPlUOYRK39dT)elkU&b2nVZ?_sWrW/"Y5nS&ZN1"*[fHF.\cDa1
^&\05_#XK8_uTf;`rQ,>aT2>@Nr\\MO9"hOOoY.TR/m0cSH/ZiT`G)mU]CDpW;uquXT8A$YlOe([/g4,
\,cO/])_j2^&\05_>sT9`;oo<a8l5?aT2>@PlUOYQiQs_TE+ulUB(;oVZ?_sY5nS&ZN1"*]E%s3^]=B7
_Z9]:`W6#=a8l5?aoMGARK3<eT)elkYlOe(])_j2^&\05_#XK8_uTf;`rQ,>aT2>@aoMGAT)elkUB(;o
V#^MqVZ?_sWW<&!XT8A$YQ4\'ZiL++[fHF.\H)X0_>sT9`;oo<a8l5?b5hPBU]CDpV?$VrWrW/"YQ4\'
])_j2^&\05_#XK8aT2>@aoMGAb5hPBW;uquWrW/"WrW/"XT8A$Y5nS&\,cO/])_j2_#XK8_Z9]:a8l5?
b5hPBX8r8#[fHF.^B"96_>sT9_uTf;`rQ,>aT2>@b5hPBYQ4\'\,cO/\cDa1^B"96_#XK8`W6#=a8l5?
b5hPBZiL++[/g4,[fHF.\,cO/\H)X0]`A'4`W6#=aoMGA^]=B7]`A'4]`A'4`;oo<`W6#=`;oo<`rQ,>
aoMGAaoMGA_Z9]:_Z9]:a8l5?aT2>@aoMGAaoMGA~>
>>
/CSD add_res
/7 /CSD get_res idxcs
clp
[1 0 0 -1 91.86 170.1 ]ct
[9.12 0 0 8.88 24.3 113.1 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 19 
/M[19 0 0 -19 0 19 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~!!*-'"9eu7#RLhG$k3[W&.oNg'GVB"(^:ir#oaj)*Y'8'&J?30+sS?Z-7:2j.P!&%/h\n51*SM22)[BQ
3BB5a4[)(q5sdq,77KcN84cEH9MJ8X:f1+h<)lt#"^!]T=^##k>[8m%?=.)K@UipQ-=oeQ>:CM':Jb\;
BkhF"D/L4=DfB]:F*)PJG7Iu)H$WM<HuOL<$%<hC4Y.%mJV%WPK7npbL51SAMIpu^Mi;>/Na[uLOG/LH
OU?tX4UdK<%[3-BQBu*KKpd%4*'I(KR[XeWSM6Y-<hP/#TqY='USO`:VI,lJViO6EKnY4W:lD0>J1aa!
GXA!_6u@X3KnY&-?E1&r&"O95Xe/!uKnY57Kp,kNWG-SgY,AIiYd&n9KnY57ZEgejQ)kQb['aDPKnY57
KnY5YVk.ZkO-`7EZ%[mcKnY57KnYkGK5<r[\$:X@KnY57KnY57K`~>
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
grestore
grestore
.72 lw
1 lc
1 lj
10 ml
124.68 52.44 mo
124.68 50.16 122.82 48.3 120.48 48.3 cv
118.2 48.3 116.34 50.16 116.34 52.44 cv
116.34 54.78 118.2 56.64 120.48 56.64 cv
122.82 56.64 124.68 54.78 124.68 52.44 cv
cp
.878538 .2439 1 .131716 cmyk
@
gsave
352.14 52.44 mo
352.14 50.16 350.28 48.3 348 48.3 cv
345.66 48.3 343.8 50.16 343.8 52.44 cv
343.8 54.78 345.66 56.64 348 56.64 cv
350.28 56.64 352.14 54.78 352.14 52.44 cv
eclp
gsave
356.82 48.24 mo
356.82 41.04 350.94 35.16 343.74 35.16 cv
336.54 35.16 330.66 41.04 330.66 48.24 cv
330.66 55.44 336.54 61.32 343.74 61.32 cv
350.94 61.32 356.82 55.44 356.82 48.24 cv
eclp
343.62 57 mo
352.74 57 li
352.74 48.12 li
343.62 48.12 li
cp
gsave
/8 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 163 
/Lookup <~
GQ?M!IK8=,KE139M#clBNr\\MPQ:FXRK3<eT)elkUB(;oVuZhtX8r8#YlOe([/g4,\,cO/]E%s3^]=B7
_Z9]:`W6#=aT2>@I/r4+JH4a2L&gH<M?*#DNr\_NPlURZRfNEfTE+ulW;uquXT8A$\H)X0]`A'4^]=B7
_Z9]:L]HcAN<&DIOoY+SQ2pa]SH/ZiT`G)mV#^MqW;uquXoSJ%Z2jn)[K-=-\H)X0]`A'4_#XK8_uTf;
`rQ,>aT2>@M?*#DO9"kPPlUOYRK39dScJcjU&b2nVZ?_sWrW/"Y5nS&ZN1"*[fHF.\cDa1]`A'4_#XK8
_uTf;`rQ,>aT2>@QiR!`SH/ZiTE+ulU]CDpYQ4\'[/g4,\,cO/])_j2^&\05_>sT9`;oo<a8l5?aT2>@
TE+ulUB(;oVZ?_sWrW/"Y5nS&Z2jn)\H)X0]E%s3^]=B7_Z9]:`W6#=a8l5?aoMGAT)elkUB(;oV?$Vr
YlOe([/g4,[fHF.\cDa1^&\05aoMGAT)elkU]CDpXT8A$YQ4\'ZiL++[K-=-_>sT9`;oo<a8l5?b5hPB
V#^MqW;uquXT8A$[K-=-])_j2^&\05_#XK8aT2>@aoMGAb5hPB_#XK8`W6#=aT2>@b5hPBWrW/"WrW/"
[/g4,[fHF.^B"96_#XK8`rQ,>aT2>@b5hPBYQ4\'Z2jn)[/g4,\cDa1`W6#=a8l5?aoMGAZiL++[K-=-
[fHF.])_j2`W6#=]`A'4^&\05_>sT9_uTf;]E%s3a8l5?^B"96aoMGA_Z9]:_Z9]:_uTf;aT2>@aoMGA
aoMGAa8l5?aoMGAaoMGA~>
>>
/CSD add_res
/8 /CSD get_res idxcs
clp
[1 0 0 -1 91.86 170.1 ]ct
[9.12 0 0 8.88 251.76 113.1 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 19 
/M[19 0 0 -19 0 19 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~!!*-'"9eu7#RLhG$k3[W&.oNg'GVB"(`=4t)]T4o*?H:F&J>-[+X/-V,pjuf.4Qi!/M8\10`s0T1GgsI
2`NfY4$5Yi5<qM$";`:>6UX@4)[])+8P2WL9hnIf(aLt,:f1+h<)kGL='/U/>?h@M-!_j(?RQn%@:E_W
5;+]'AS+ac2eQ#:BPD3s/6>qiD/N-f#\S*SEB/&R4*)EaF`oDlGBeCQE@<h\<"!G^%8(/W&:8;BI<g9k
$?B*94+MlF*eK"tKS<ZcH&$*(Lc^H/8W"R@Ft\c4I#WDsN_#"fO@_!c/QdWYP)M_=H$O[,8I\]`Ocu"O
Q'RSN6=kFfH$OLRQQA>B++k\1&XYmrH$O[\H%MGd+$WFA9p.er:RZQSH$O[\Ci#T2SSaNUR%@QTH$O[\
H$O[=P)Bo<N.mjrRX'1(H$O[\H$Q*WG;2FYURHIRH$O[\H$O[\Gl~>
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
grestore
grestore
352.14 52.44 mo
352.14 50.16 350.28 48.3 348 48.3 cv
345.66 48.3 343.8 50.16 343.8 52.44 cv
343.8 54.78 345.66 56.64 348 56.64 cv
350.28 56.64 352.14 54.78 352.14 52.44 cv
cp
@
gsave
294.72 52.44 mo
294.72 50.16 292.86 48.3 290.58 48.3 cv
288.3 48.3 286.38 50.16 286.38 52.44 cv
286.38 54.78 288.3 56.64 290.58 56.64 cv
292.86 56.64 294.72 54.78 294.72 52.44 cv
eclp
gsave
299.4 48.24 mo
299.4 41.04 293.58 35.16 286.32 35.16 cv
279.12 35.16 273.24 41.04 273.24 48.24 cv
273.24 55.44 279.12 61.32 286.32 61.32 cv
293.58 61.32 299.4 55.44 299.4 48.24 cv
eclp
286.2 57 mo
295.32 57 li
295.32 48.12 li
286.2 48.12 li
cp
gsave
/8 /CSD get_res idxcs
clp
[1 0 0 -1 91.86 170.1 ]ct
[9.12 0 0 8.88 194.34 113.1 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 19 
/M[19 0 0 -19 0 19 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~!!*-'"9eu7#RLhG$k3[W&.oNg'GVB"(`=4t)]T4o*?H:F&J>-[+X/-V,pjuf.4Qi!/M8\10`s0T1GgsI
2`NfY4$5Yi5<qM$";`:>6UX@4)[])+8P2WL9hnIf(aLt,:f1+h<)kGL='/U/>?h@M-!_j(?RQn%@:E_W
5;+]'AS+ac2eQ#:BPD3s/6>qiD/N-f#\S*SEB/&R4*)EaF`oDlGBeCQE@<h\<"!G^%8(/W&:8;BI<g9k
$?B*94+MlF*eK"tKS<ZcH&$*(Lc^H/8W"R@Ft\c4I#WDsN_#"fO@_!c/QdWYP)M_=H$O[,8I\]`Ocu"O
Q'RSN6=kFfH$OLRQQA>B++k\1&XYmrH$O[\H%MGd+$WFA9p.er:RZQSH$O[\Ci#T2SSaNUR%@QTH$O[\
H$O[=P)Bo<N.mjrRX'1(H$O[\H$Q*WG;2FYURHIRH$O[\H$O[\Gl~>
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
grestore
grestore
294.72 52.44 mo
294.72 50.16 292.86 48.3 290.58 48.3 cv
288.3 48.3 286.38 50.16 286.38 52.44 cv
286.38 54.78 288.3 56.64 290.58 56.64 cv
292.86 56.64 294.72 54.78 294.72 52.44 cv
cp
@
gsave
238.02 52.44 mo
238.02 50.16 236.16 48.3 233.88 48.3 cv
231.6 48.3 229.74 50.16 229.74 52.44 cv
229.74 54.78 231.6 56.64 233.88 56.64 cv
236.16 56.64 238.02 54.78 238.02 52.44 cv
eclp
gsave
242.76 48.24 mo
242.76 41.04 236.88 35.16 229.68 35.16 cv
222.42 35.16 216.6 41.04 216.6 48.24 cv
216.6 55.44 222.42 61.32 229.68 61.32 cv
236.88 61.32 242.76 55.44 242.76 48.24 cv
eclp
229.56 57 mo
238.68 57 li
238.68 48.12 li
229.56 48.12 li
cp
gsave
/7 /CSD get_res idxcs
clp
[1 0 0 -1 91.86 170.1 ]ct
[9.12 0 0 8.88 137.7 113.1 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 19 
/M[19 0 0 -19 0 19 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~!!*-'"9eu7#RLhG$k3[W&.oNg'GVB"(^:ir#oaj)*Y'8'&J?30+sS?Z-7:2j.P!&%/h\n51*SM22)[BQ
3BB5a4[)(q5sdq,77KcN84cEH9MJ8X:f1+h<)lt#"^!]T=^##k>[8m%?=.)K@UipQ-=oeQ>:CM':Jb\;
BkhF"D/L4=DfB]:F*)PJG7Iu)H$WM<HuOL<$%<hC4Y.%mJV%WPK7npbL51SAMIpu^Mi;>/Na[uLOG/LH
OU?tX4UdK<%[3-BQBu*KKpd%4*'I(KR[XeWSM6Y-<hP/#TqY='USO`:VI,lJViO6EKnY4W:lD0>J1aa!
GXA!_6u@X3KnY&-?E1&r&"O95Xe/!uKnY57Kp,kNWG-SgY,AIiYd&n9KnY57ZEgejQ)kQb['aDPKnY57
KnY5YVk.ZkO-`7EZ%[mcKnY57KnYkGK5<r[\$:X@KnY57KnY57K`~>
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
grestore
grestore
238.02 52.44 mo
238.02 50.16 236.16 48.3 233.88 48.3 cv
231.6 48.3 229.74 50.16 229.74 52.44 cv
229.74 54.78 231.6 56.64 233.88 56.64 cv
236.16 56.64 238.02 54.78 238.02 52.44 cv
cp
@
gsave
181.38 52.44 mo
181.38 50.16 179.52 48.3 177.18 48.3 cv
174.9 48.3 173.04 50.16 173.04 52.44 cv
173.04 54.78 174.9 56.64 177.18 56.64 cv
179.52 56.64 181.38 54.78 181.38 52.44 cv
eclp
gsave
186.06 48.24 mo
186.06 41.04 180.18 35.16 172.98 35.16 cv
165.72 35.16 159.9 41.04 159.9 48.24 cv
159.9 55.44 165.72 61.32 172.98 61.32 cv
180.18 61.32 186.06 55.44 186.06 48.24 cv
eclp
172.86 57 mo
181.98 57 li
181.98 48.12 li
172.86 48.12 li
cp
gsave
/9 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 168 
/Lookup <~
GlZY#IfSL/K`L?;M?*#DNr\_NPlURZRfNEfTE+ulU]CDpW;uquXT8A$YlOe([/g4,\H)X0]`A'4^]=B7
_Z9]:`rQ,>aT2>@IK8=,JcOp5L&gK=MZE,EO9"kPQ2p^\RfNHgU]CDpW;uquXoSJ%Z2jn)[K-=-\H)X0
]`A'4_#XK8_uTf;`rQ,>aT2>@KE139L&gH<M#clBN<&GJOoY1UQiQs_SH/ZiT`G)mV?$VrWW<&!Y5nS&
ZN1"*[K-=-\cDa1]`A'4_#XK8`rQ,>aT2>@MZE)DN<&DIOT=tQPlURZRK39dT)elkU&b2nVZ?_sWrW/"
YQ4\'ZiL++[fHF.\cDa1^&\05_#XK8`;oo<a8l5?aT2>@Nr\\MOoY+SR/m0cT`G)mV#^MqXT8A$YlOe(
[/g4,\,cO/])_j2^B"96_>sT9`;oo<a8l5?aoMGAPQ:FXQN6j^RK3<eTE+ulUB(;oWrW/"Y5nS&ZN1"*
\H)X0^]=B7_Z9]:`W6#=aT2>@aoMGASH/ZiT)elk\,cO/])_j2^&\05_#XK8_uTf;aT2>@aoMGAT)elk
UB(;oV#^MqVZ?_sWrW/"YQ4\'[fHF.]`A'4^]=B7_Z9]:`W6#=b5hPBU]CDpZiL++\H)X0]E%s3^&\05
aoMGAb5hPBWrW/"XT8A$Y5nS&_#XK8a8l5?X8r8#^B"96_>sT9_uTf;`rQ,>aT2>@aoMGAYQ4\']`A'4
^]=B7_uTf;`W6#=b5hPB[/g4,\,cO/\H)X0_>sT9aT2>@_>sT9aoMGA]E%s3]`A'4`;oo<a8l5?`rQ,>
aoMGA_Z9]:`rQ,>b5hPB`W6#=`W6#=aoMGAa8l5?aoMGA~>
>>
/CSD add_res
/9 /CSD get_res idxcs
clp
[1 0 0 -1 91.86 170.1 ]ct
[9.12 0 0 8.88 81 113.1 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 19 
/M[19 0 0 -19 0 19 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~!!*-'"9eu7#RLhG$k3[W&.oNg'GVB"(`<Ps)]Tk>+!;^N,:"Q^-R^Dn.kE8)0/,+91Gg:52CCFC3BB5a
4[)(q5sdq,77Kd<8H_XH9.N\1#u48m;,U=l<E<1'"^,"Z>?j?t?=,Ep+CS_hA7\pKAnOeB4t[f_:hXQX
CMYkFDJob2E,fo>$?SRV13RkdGue!m>^J%d#sTDOHng%uImn/u,_1FP)_Q_pKF:(#I8WIe&7^GrH@\;4
LE(sT?OUU'%Z#t!Mi<XHJO#6;*FDVt;+$D+M33sU=-J2d6'P1eFd87j1Q[qI@oet7JUrAcBRLsi;BUH"
R>R/.2O]2JJUp]sRua(<@7=Xr,G%GpJUrB'JQ%Ad@5OB]7Ur'LTPf=3JUrB'R<YDLMOfp)Si2S'JUrB'
JUrBJA#5)@<b++cDLm@iJUrB'JUs_sN$LreAZ102JUrB'JUrB'JH~>
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
grestore
grestore
181.38 52.44 mo
181.38 50.16 179.52 48.3 177.18 48.3 cv
174.9 48.3 173.04 50.16 173.04 52.44 cv
173.04 54.78 174.9 56.64 177.18 56.64 cv
179.52 56.64 181.38 54.78 181.38 52.44 cv
cp
@
gsave
294.72 153.06 mo
294.72 150.78 292.86 148.92 290.58 148.92 cv
288.3 148.92 286.38 150.78 286.38 153.06 cv
286.38 155.4 288.3 157.26 290.58 157.26 cv
292.86 157.26 294.72 155.4 294.72 153.06 cv
eclp
gsave
299.4 148.86 mo
299.4 141.66 293.58 135.78 286.32 135.78 cv
279.12 135.78 273.24 141.66 273.24 148.86 cv
273.24 156.06 279.12 161.94 286.32 161.94 cv
293.58 161.94 299.4 156.06 299.4 148.86 cv
eclp
286.2 157.62 mo
295.32 157.62 li
295.32 148.74 li
286.2 148.74 li
cp
gsave
/10 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 166 
/Lookup <~
GQ?M!IK8=,KE139M#clBNr\\MPQ:FXRK3<eT)elkUB(;oVuZhtXT8A$YlOe([/g4,\,cO/]E%s3^]=B7
_Z9]:`W6#=aT2>@I/r4+JH4a2L&gH<M?*#DNr\_NPlURZRfNEfTE+ulW;uquXT8A$\H)X0]`A'4^]=B7
_Z9]:KE139L]HcAMu`>IOoY(RQ2pa]S,iQhTE+ulV#^MqW;uquXoSJ%Z2jn)[K-=-\H)X0]`A'4^]=B7
_Z9]:`rQ,>aT2>@L]H`@M?*#DMu`;HO9"kPR/m0cScJcjU&b2nV?$VrWrW/"Y5nS&ZN1"*[fHF.\cDa1
]`A'4_#XK8_uTf;`rQ,>aT2>@NWASLPlUOYQiR!`SH/ZiTE+ulU]CDpVuZhtX8r8#YQ4\'[/g4,\,cO/
])_j2^&\05_>sT9`;oo<a8l5?aT2>@UB(;oVZ?_sXoSJ%Z2jn)\H)X0]E%s3^]=B7_Z9]:`W6#=a8l5?
aoMGAT)elkT`G)mUB(;oV?$VrYQ4\'[/g4,[fHF.\cDa1^&\05_uTf;aoMGAU&b2nU]CDpVZ?_s[K-=-
]E%s3^B"96_>sT9`;oo<aT2>@b5hPBWrW/"XT8A$])_j2^&\05`rQ,>aT2>@aoMGAb5hPBW;uquY5nS&
YlOe(_#XK8`W6#=a8l5?b5hPBWrW/"X8r8#ZN1"*[/g4,[fHF.\cDa1^B"96_#XK8aT2>@b5hPBYQ4\'
[/g4,`W6#=aoMGAZiL++aT2>@aoMGA\,cO/])_j2]`A'4_uTf;aT2>@]E%s3^&\05_Z9]:a8l5?^B"96
_uTf;aoMGAa8l5?aT2>@aoMGAaoMGAaoMGA~>
>>
/CSD add_res
/10 /CSD get_res idxcs
clp
[1 0 0 -1 91.86 170.1 ]ct
[9.12 0 0 8.88 194.34 12.48 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 19 
/M[19 0 0 -19 0 19 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~!!*-'"9eu7#RLhG$k3[W&.oNg'GVB"(`=4t)]T4o*?H:F&J?6%+sS?Z-7:2j.P!&%/h\n51,CaE2?c$!
3BB5a4[)(q5sdq,72I4=7n?3D92&&T:Jand;cHa#"XQ)u8QJnS=BR1Y>?kH??XO'B-=L@nA18L0AnPdk
6#&+eCBmF?Ci+&=$;E[%/T>]MF&[7(#]1tk)g6F"4Y.%eGsQ1kH[L5\IOTFIIt0[5%8^bi&;#OVKRJ#t
L3J,YLPUeE%Z?9\HAu<mI?0G#$U'Si:HonY6#)O7FHV'#P@fUZDbhr]/och(?<!/SI=6NV:R3"cQ^CVl
;ONYHRVR>"I=6?bRiXhb%ud&X&Y;C+I=6NlI>a_&+$idITTMU$<L%u\I=6NlEcR]nR<+KX?SZ#_I=6Nl
I=6NM?BGgeK;,-:V1!c?I=6NlI=7iaHSS!dI&27>I=6NlI=6NlI/~>
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
grestore
grestore
294.72 153.06 mo
294.72 150.78 292.86 148.92 290.58 148.92 cv
288.3 148.92 286.38 150.78 286.38 153.06 cv
286.38 155.4 288.3 157.26 290.58 157.26 cv
292.86 157.26 294.72 155.4 294.72 153.06 cv
cp
@
gsave
124.68 153.06 mo
124.68 150.78 122.82 148.92 120.48 148.92 cv
118.2 148.92 116.34 150.78 116.34 153.06 cv
116.34 155.4 118.2 157.26 120.48 157.26 cv
122.82 157.26 124.68 155.4 124.68 153.06 cv
eclp
gsave
129.36 148.86 mo
129.36 141.66 123.48 135.78 116.28 135.78 cv
109.02 135.78 103.2 141.66 103.2 148.86 cv
103.2 156.06 109.02 161.94 116.28 161.94 cv
123.48 161.94 129.36 156.06 129.36 148.86 cv
eclp
116.16 157.62 mo
125.28 157.62 li
125.28 148.74 li
116.16 148.74 li
cp
gsave
/11 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 181 
/Lookup <~
GlZY#IfSL/K`L?;M?)uCNr\_NPlURZRfNEfTE+ulU]CDpW;uquXT8A$Z2jn)[/g4,\H)X0]`A'4^]=B7
_Z9]:`W6#=aT2>@IK8=,JH4g4L&gK=MZE,EO9"kPQ2p^\TE+ulV#^MqXoSJ%Z2jn)[K-=-\H)X0_#XK8
KE139L&gH<M#ciAN<&DIOoY+SQ2pa]SH/ZiT`G)mV#^MqW;uquXoSJ%Z2jn)[K-=-\H)X0]`A'4_uTf;
`rQ,>aT2>@L]H`@PlUOYRK39dScJcjU&b2nVZ?_sWrW/"Y5nS&ZN1"*[fHF.\cDa1]`A'4_#XK8_uTf;
`rQ,>aT2>@Nr\\MQiR!`SH/ZiU]CDpW;uquXT8A$YlOe([/g4,\,cO/])_j2^&\05_>sT9`;oo<a8l5?
aT2>@PQ:FXPlUOYRK39dUB(;oY5nS&ZN1"*]E%s3^]=B7_Z9]:`W6#=a8l5?aoMGARK3<eSH/ZiT)elk
T`G)mUB(;oV?$VrYlOe([/g4,])_j2^&\05_#XK8_uTf;`rQ,>aoMGAT)elkU&b2nVZ?_sWW<&!YQ4\'
ZiL++[K-=-\H)X0_>sT9`;oo<a8l5?b5hPBV#^MqV?$VrWrW/"])_j2^&\05_#XK8aT2>@aoMGAb5hPB
WW<&!Y5nS&ZiL++\,cO/])_j2^&\05_Z9]:a8l5?b5hPBWrW/"WrW/"X8r8#YQ4\'[/g4,[fHF.\cDa1
^B"96_#XK8_uTf;`rQ,>aT2>@b5hPBYQ4\'YQ4\'Z2jn)\,cO/\cDa1`W6#=b5hPB[/g4,[K-=-[fHF.
])_j2`W6#=aoMGA[fHF.]`A'4^]=B7_>sT9_uTf;]E%s3^B"96a8l5?^B"96`;oo<`rQ,>aoMGAaoMGA
`;oo<aT2>@aoMGAa8l5?aT2>@aoMGA~>
>>
/CSD add_res
/11 /CSD get_res idxcs
clp
[1 0 0 -1 91.86 170.1 ]ct
[9.12 0 0 8.88 24.3 12.48 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 19 
/M[19 0 0 -19 0 19 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~!!*-'"9eu7#RLhG$k3[W&.oNg'GVB"(^:ir#oaj)*Y'8'&J?30+sS?Z-7:2j.P!&%/fu`#0erhU(Gdm*
2E*TU3]fGe5!M:u63JPi6UW:j7Rp!@8kViP:/=\`;C,70),rOS<E:Xl='/U/>?kG<?=.)K@OVXoA4gEF
B4tulC24\7C`7/.$?'m'EXl2mFELE'@7>Bb$$dJ.3ZSZUH[IJ\I=?YP$%R:kJRa9_K7nq#L0B@/Ljt8=
M[EIC3fT/\%Zlg9PE]=;J!P#>Qo\btR@4UZOY<2Z:n3#bJt6GDT:'_m4]mh"Tnbq.It)sC8qS0ITVP8X
VPfo+6#(n!It)cjW"(ti&!7DuBrXI6It)rtJ#c[R%qeTJXJ)b\Y-3>)It)rt=]pJ4Vm)XUWj,g7It)rt
It)sATplWZLU09OYCD%OIt)rtIt*]2IC);C[BG(0It)rtIt)rtIf~>
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
grestore
grestore
124.68 153.06 mo
124.68 150.78 122.82 148.92 120.48 148.92 cv
118.2 148.92 116.34 150.78 116.34 153.06 cv
116.34 155.4 118.2 157.26 120.48 157.26 cv
122.82 157.26 124.68 155.4 124.68 153.06 cv
cp
@
gsave
181.38 153.06 mo
181.38 150.78 179.52 148.92 177.18 148.92 cv
174.9 148.92 173.04 150.78 173.04 153.06 cv
173.04 155.4 174.9 157.26 177.18 157.26 cv
179.52 157.26 181.38 155.4 181.38 153.06 cv
eclp
gsave
186.06 148.86 mo
186.06 141.66 180.18 135.78 172.98 135.78 cv
165.72 135.78 159.9 141.66 159.9 148.86 cv
159.9 156.06 165.72 161.94 172.98 161.94 cv
180.18 161.94 186.06 156.06 186.06 148.86 cv
eclp
172.86 157.62 mo
181.98 157.62 li
181.98 148.74 li
172.86 148.74 li
cp
gsave
/12 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 169 
/Lookup <~
GlZY#IfSL/K`L?;M?*#DNr\_NPlURZRfNEfTE+ulU]CDpW;uquXT8A$Z2jn)[K-=-\H)X0]`A'4^]=B7
_Z9]:`rQ,>aT2>@I/r4+JH4g4L&gK=MZE,EO9"kPQ2p^\RfNHgU]CDpW;uquXoSJ%Z2jn)[K-=-\H)X0
]`A'4_#XK8_uTf;`rQ,>KE139L&gH<M#clBN<&DIOoY+SQiQs_SH/ZiT`G)mV?$VrWW<&!XoSJ%ZN1"*
[K-=-\cDa1]`A'4_#XK8aT2>@L]H`@M?)uCPlUOYRK39dT)elkU&b2nVZ?_sWrW/"YQ4\'ZiL++[fHF.
\cDa1^&\05_#XK8_uTf;`rQ,>aT2>@NWASLPlURZQiR$aSH/ZiT`G)mU]CDpXT8A$YlOe([/g4,\,cO/
])_j2^B"96_>sT9`;oo<a8l5?aoMGAPQ:FXPlUOYQ2pa]TE+ulUB(;oWrW/"Y5nS&ZN1"*\H)X0^]=B7
_Z9]:`W6#=aT2>@aoMGARK3<eSH/ZiYlOe(\,cO/])_j2_#XK8_uTf;aT2>@aoMGAT)elkVZ?_sWW<&!
XT8A$YQ4\'ZiL++[fHF.\cDa1]`A'4^]=B7_Z9]:`W6#=b5hPBV#^Mq\H)X0]E%s3^&\05aT2>@aoMGA
b5hPBW;uquW;uquY5nS&_#XK8a8l5?X8r8#Y5nS&YlOe([/g4,[fHF.^B"96_>sT9aT2>@YQ4\'\,cO/
^B"96b5hPB[/g4,[K-=-[fHF.])_j2^]=B7_>sT9\,cO/]`A'4`W6#=aT2>@aoMGA`;oo<^B"96_>sT9
`;oo<aoMGA_Z9]:`rQ,>aoMGA`W6#=`W6#=aoMGAa8l5?aoMGA~>
>>
/CSD add_res
/12 /CSD get_res idxcs
clp
[1 0 0 -1 91.86 170.1 ]ct
[9.12 0 0 8.88 81 12.48 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 19 
/M[19 0 0 -19 0 19 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~!!*-'"9eu7#RLhG$k3[W&.oNg'GVB"(`<Ps)]Tk>+!;^N,8)7J-7:2j.P!&%/h\n51,C+!1c70=(H4<6
3]fGe5!M:u6:4.07Kb,084cEH#u"&g:Jand;cHat='.F3=^!mk>[9$i%UWUP@UipQAN<@d4"VFa:1n6+
Bkel.Ci'D-3_O@/E,fo>FEMbNGZ7[g>"a0'#s92I>qgVQI6qZ\IXcm!$%b95K4]-XHVd"]?t"ahH%9*]
L2_p(?&=G\%Z?95&WL:NJ3Ap4$XHL]O$F2:66]il<KVf^Efs1]P`HoO17"7N@8o[3J:N0-B:',nQ'm%2
;F?mPS","ZJ:LHmHk%o/?UA.k&VWZ'J:N0#J5Mo(?Se<^TOC6JTko70J:N0#;Gs5#6_0[@KpuSJJ:N0#
J:N0H@@F'g<+;>pCk.%dJ:N0#J:OSsN=q_SWGI*8J:N0#J:N0#J,~>
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
grestore
grestore
181.38 153.06 mo
181.38 150.78 179.52 148.92 177.18 148.92 cv
174.9 148.92 173.04 150.78 173.04 153.06 cv
173.04 155.4 174.9 157.26 177.18 157.26 cv
179.52 157.26 181.38 155.4 181.38 153.06 cv
cp
@
gsave
238.02 153.06 mo
238.02 150.78 236.16 148.92 233.88 148.92 cv
231.6 148.92 229.74 150.78 229.74 153.06 cv
229.74 155.4 231.6 157.26 233.88 157.26 cv
236.16 157.26 238.02 155.4 238.02 153.06 cv
eclp
gsave
242.76 148.86 mo
242.76 141.66 236.88 135.78 229.68 135.78 cv
222.42 135.78 216.6 141.66 216.6 148.86 cv
216.6 156.06 222.42 161.94 229.68 161.94 cv
236.88 161.94 242.76 156.06 242.76 148.86 cv
eclp
229.56 157.62 mo
238.68 157.62 li
238.68 148.74 li
229.56 148.74 li
cp
gsave
/11 /CSD get_res idxcs
clp
[1 0 0 -1 91.86 170.1 ]ct
[9.12 0 0 8.88 137.7 12.48 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 19 
/M[19 0 0 -19 0 19 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~!!*-'"9eu7#RLhG$k3[W&.oNg'GVB"(^:ir#oaj)*Y'8'&J?30+sS?Z-7:2j.P!&%/fu`#0erhU(Gdm*
2E*TU3]fGe5!M:u63JPi6UW:j7Rp!@8kViP:/=\`;C,70),rOS<E:Xl='/U/>?kG<?=.)K@OVXoA4gEF
B4tulC24\7C`7/.$?'m'EXl2mFELE'@7>Bb$$dJ.3ZSZUH[IJ\I=?YP$%R:kJRa9_K7nq#L0B@/Ljt8=
M[EIC3fT/\%Zlg9PE]=;J!P#>Qo\btR@4UZOY<2Z:n3#bJt6GDT:'_m4]mh"Tnbq.It)sC8qS0ITVP8X
VPfo+6#(n!It)cjW"(ti&!7DuBrXI6It)rtJ#c[R%qeTJXJ)b\Y-3>)It)rt=]pJ4Vm)XUWj,g7It)rt
It)sATplWZLU09OYCD%OIt)rtIt*]2IC);C[BG(0It)rtIt)rtIf~>
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
grestore
grestore
238.02 153.06 mo
238.02 150.78 236.16 148.92 233.88 148.92 cv
231.6 148.92 229.74 150.78 229.74 153.06 cv
229.74 155.4 231.6 157.26 233.88 157.26 cv
236.16 157.26 238.02 155.4 238.02 153.06 cv
cp
@
gsave
351.42 153.06 mo
351.42 150.78 349.56 148.92 347.28 148.92 cv
344.94 148.92 343.08 150.78 343.08 153.06 cv
343.08 155.4 344.94 157.26 347.28 157.26 cv
349.56 157.26 351.42 155.4 351.42 153.06 cv
eclp
gsave
356.1 148.86 mo
356.1 141.66 350.28 135.78 343.02 135.78 cv
335.82 135.78 329.94 141.66 329.94 148.86 cv
329.94 156.06 335.82 161.94 343.02 161.94 cv
350.28 161.94 356.1 156.06 356.1 148.86 cv
eclp
342.9 157.62 mo
352.02 157.62 li
352.02 148.74 li
342.9 148.74 li
cp
gsave
/10 /CSD get_res idxcs
clp
[1 0 0 -1 91.86 170.1 ]ct
[9.12 0 0 8.88 251.04 12.48 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 19 
/M[19 0 0 -19 0 19 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~!!*-'"9eu7#RLhG$k3[W&.oNg'GVB"(`=4t)]T4o*?H:F&J?6%+sS?Z-7:2j.P!&%/h\n51,CaE2?c$!
3BB5a4[)(q5sdq,72I4=7n?3D92&&T:Jand;cHa#"XQ)u8QJnS=BR1Y>?kH??XO'B-=L@nA18L0AnPdk
6#&+eCBmF?Ci+&=$;E[%/T>]MF&[7(#]1tk)g6F"4Y.%eGsQ1kH[L5\IOTFIIt0[5%8^bi&;#OVKRJ#t
L3J,YLPUeE%Z?9\HAu<mI?0G#$U'Si:HonY6#)O7FHV'#P@fUZDbhr]/och(?<!/SI=6NV:R3"cQ^CVl
;ONYHRVR>"I=6?bRiXhb%ud&X&Y;C+I=6NlI>a_&+$idITTMU$<L%u\I=6NlEcR]nR<+KX?SZ#_I=6Nl
I=6NM?BGgeK;,-:V1!c?I=6NlI=7iaHSS!dI&27>I=6NlI=6NlI/~>
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
grestore
grestore
351.42 153.06 mo
351.42 150.78 349.56 148.92 347.28 148.92 cv
344.94 148.92 343.08 150.78 343.08 153.06 cv
343.08 155.4 344.94 157.26 347.28 157.26 cv
349.56 157.26 351.42 155.4 351.42 153.06 cv
cp
@
/13 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /13 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Arial-BoldMT Initial
ct_T42Dict begin
-0.625 -0.375 2 1.055
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+Arial-BoldMT
Type42DictBegin
[<00010000000c000c000c000c4f532f32155d5eb0000000cc000000606376
7420ffc3ad470000012c000007606670676dba2711a60000088c0000063e
676c796661732e5e0000ad68000023ca68656164e6ae50ee00000ecc0000
003668686561127e195600000f0400000024686d74781da561b200000f28
000042346c6f63610248f04c0000515c000042386d6178701886065b0000
9394000000206e616d65af6df2e8000093b4000007bb70726570034f36ae
00009b70000011f567646972000000000000000000000000000303d402bc
00050008059a05330000011b059a0533000003d1006602120805020b0704
020202020204e0002effc00078430000000900000000544d432000200020
fffc05d3fe510133073e01b2400001ffffff0000042605ba000000200015
05ba001c05ba001c05a7001c0426001c0000ffe40000ffe40000ffe4fe69
ffe405ba001cfe69ffe402ea0000011d0000011d000000000000000000b2
00ac00d70128012000b301fa001700f8011901310049000400f7000300af
00fd00950014005400960112002400160055004901040119012b008c019b
ff76ffe9003d009200a2ffb70182ffaa0016008f00c600f8001c00de0401
0037004e00550055006500e903e50059ff9a00080087000b003b00520116
006100d600d600f500000093009400be017cfff80004001400820092003c
00410041ffc1fffc002a008c049005d809b5009100bb0106ff63ff69001e
0022008a022bffd6ffdf0026005900a300ac0104012b01c004480021006b
00850098011903c6006b009500a400fe010c025d034305bf000000490056
006e0077008a00aa00ca0112015005d805f0ff7bffe70006001300280061
006900e90135014d02a5040cff3effda005b00b900c801190119011901c0
045b04a7055bfe3fff9dffc2001500b7010a01bc01c10532058efd81ffa1
ffae000c00260031003d004e00560062008300c100c900f100f2027fff7f
00480053007700c5011d01200126012801d60219027e027e03d3002e0041
005d006b0075009f00b000b200ba00bb00bd00d600db00e000e50114011b
014a0162019101f2020c026402cf039b03b403d4040104a9001600230025
002a007400a500b600cc00cd00cf0105012001300150016a016f0197019d
01e002b002ec02f70408048304fb04fd0526fee0fefbff4efff50018001a
004c007a007f009100a300b300b400ce00d500f200f300f6011001380168
01a101b001e001ec02090222024f0270029602a502ad034e039103c10435
0442046b04cd04da0586058b076107fefca6fe93feadfed1ffb7ffd10003
000e00180026004600690081008f00a500bf00d300d500d900dd00e20119
012b0138013b015a015e016801730188019401ad01c501d101ea01f20200
020002000222023b0244024f026f0272027e02820293029402a502cf02cf
02d002da02dd02eb02f5030503220336037103a103b003b803d003e60410
0426042e0431044f045a04ff053205320547055305a805ab05c205f0063c
0664067006e80782078408ccfd2afddefe00fe68feb0feb3ffaa00080059
007a0091009e00a200af00b400bb00ca00cc00ce00d900e000f40114011a
01210127012b01390146014b014d0157015c01650182018701920198019b
01a201ae01c501c501d102070222022b024102530261026502840287028d
02b402b402ba02c902d602d802ed02f503170323032b03310349035a035b
036e03710374037e03840391039103aa03cf03d303e703e803ed04080417
041e0475047a049904a704b404d1054c056d056d05a205bf05c005d105fc
05fc0602061a061c062f066a06a806e2070607360750078907d407f30870
011c012a011a01200000000000000000000000000219000b001e02aa0214
047f01ed0000001d0104000f0091002b01880153011201f3003f03fe0168
010e047f01ed036e03150219041300000000064004b00000027401bb0035
01c5007f06020301000004e000b201dc02e004c3023d00d50160011904a7
036e05ca022100ab0426009002bc02bb014200b4023c0256029c030001e5
01a800e5006b00780094016b017300ab01ed013a017d0137017f00d40216
03530184003cffa202040109014901f0006e031500810464005e00000000
0000000000000000000000000000000000000000000000000000013900dc
00e9fe9e040d047c012b00b80096005900ac00df01a900fa0105ffec0017
0003005500610004008c00a3008500280120005d00d6007f012601190104
016c06cf00b4010600000737063e047a00f000f900e905ba042604420000
ffe7fe69049e04e3ff37ff2d01200105012000a800740068004700f200e5
00d900bd00a800680047005c0048000a0028003200410050005a0064007d
00870091ffb0ff9cff83ff79ff6f00cb012000fa012c01fa01a000d500b8
005c003c00c800c8008f00d9018b00b30047000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000fe6400c000ea01180125013203b003ed0576
059005aa05b405be05cd063100780084009b00cc00e200f4010a01200163
00d100ea00f7010801420019002c00340041003800480058006c025903bd
0043011a007000d30028003700420050005a0064007300780082008c009c
00a500bd00ce00f00110015c00be00d801020117012c016300ea01080041
004b0055005f007300a60109018301b300410064001e002a00eb00fa010e
01380274002c00400082009600b600c000cc00dc00e600f000ff010a0120
012c013b01440156016300f70057006401100136005001b10000ffb60039
004e004403cc00e5002401100042012201a400f0006000e0000e001d0039
05e30102002cfe4eff38026903bd011600ff000e00a00054001b003d0171
0041000f005000fd0015014f0035fe52002c00d3010304b001d200b600c0
00990265ff870377fe6c00cb00a9005c0040047607440472048504fb4042
5554403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827262524
232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09080706
0504030201002c4523466020b02660b004262348482d2c452346236120b0
2661b004262348482d2c45234660b0206120b04660b004262348482d2c45
23462361b0206020b02661b02061b004262348482d2c45234660b0406120
b06660b004262348482d2c4523462361b0406020b02661b04061b0042623
48482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d
44235920b0ed51582320b04d44235920b09051582320b00d44235921212d
2c20204518684420b001602045b04676688a4560442d2c01b10b0a432343
650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b102
17453ab10200080d2d2c45b01a234445b01923442d2c2045b00325456164
b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0
004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a
8cb8100062602b0c642364615c58b00361592d2c45b0112bb0172344b017
7ae4182d2c45b0112bb01723442d2cb01243588745b0112bb0172344b017
7ae41b038a45186920b01723448a8a8720b0c05158b0112bb0172344b017
7ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c482d2c4b
53205c58b002855958b00185592d2c20b0032545b019234445b01a234445
65234520b00325606a20b009234223688a6a606120b01a8ab000527921b2
1a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a5279b3
1940201945208a54582321b03f1b235961442d2cb110114323430b2d2cb1
0e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f
432343650b2d2cb11011432343650b2d2c4b525845441b2121592d2c0120
b003252349b04060b0206320b000525823b002253823b002256538008a63
381b212121212159012d2c4bb06451584569b00943608a103a1b21212159
2d2c01b005251023208af500b0016023edec2d2c01b005251023208af500
b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d
2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d
2c3eb02a2a2d2c352d2c76b8023623701020b802364520b0005058b00161
593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423648bb8
2000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621b
b200802f2b59b002602d2c0c6423648bb84000626023212d2cb400010000
0015b00826b00826b00826b008260f10161345683ab001162d2cb4000100
000015b00826b00826b00826b008260f1016134568653ab001162d2c4b53
234b515a5820458a60441b2121592d2c4b545820458a60441b2121592d2c
4b53234b515a58381b2121592d2c4b5458381b2121592d2cb0134358031b
02592d2cb0134358021b03592d2c4b54b012435c5a58381b2121592d2cb0
12435c580cb00425b00425060c6423646164b0035158b00425b004250120
46b01060482046b0106048590a21211b2121592d2cb012435c580cb00425
b00425060c6423646164b807085158b00425b00425012046b8fff0604820
46b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b1b212159
2d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58
381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b
2121592d2c462346608a8a462320468a608a61b8ff8062232010238ab902
a702a78a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a
2d2cb1020042b123018851b1400188535a58b910000020885458b2020102
43604259b12401885158b920000040885458b2020202436042b124018854
58b2022002436042004b014b5258b2020802436042591bb9400000808854
58b202040243604259b94000008063b80100885458b202080243604259b9
4000010063b80200885458b202100243604259b12601885158b940000200
63b80400885458b202400243604259b94000040063b80800885458b20280
0243604259b12801885158b94000080063b81000885458ba000201000002
436042595959595959592d2cb0024354584b53234b515a58381b2121591b
21212121592d0000000100000006e666a4e0d10a5f0f3cf5081908000000
0000a2e33c1d00000000d19de3fdfafafcfd100008720000000900010001
0000000000010000073efe4e00431000fafafa7a10000001000000000000
0000000000000000108d0600010000000000023900000239000002aa00b8
03cb00700473001204730046071d005905c7005a01e7005c02aa006b02aa
0043031d001c04ac00550239007502aa0073023900930239fffd04730056
047300a2047300330473004d047300260473005b04730057047300570473
00530473004102aa00c902aa00aa04ac005f04ac005504ac005f04e3006a
07cd003d05c7000005c7009605c7006105c700940556009504e300970639
006205c700960239008c0473002305c7009904e3009d06aa009105c70098
06390059055600950639005905c700960556004a04e3002c05c700930556
ffff078d0007055600000556fffd04e3001602aa00920239fffd02aa0026
04ac00730473ffed02aa002a0473004904e300870473005504e300540473
004102aa001804e3005404e30092023900930239ffa20473008902390093
071d007e04e3009104e3005204e3008b04e3005b031d00870473003002aa
001f04e3008d0473000b063900090473000c0473000e04000022031d003c
023d00b0031d002d04ac004305c7000005c7000005c700610556009505c7
00980639005905c700930473004904730049047300490473004904730049
047300490473005504730041047300410473004104730041023900920239
ffe90239ffcd0239ffd004e3009104e3005204e3005204e3005204e30052
04e3005204e3008d04e3008d04e3008d04e3008d04730044033300560473
00540473000d0473003b02cd00420473fffe04e3008b05e5fff705e5fff7
080000d802aa00bb02aa0005046400310800ffaa0639003f05b400980464
00320464003c0464003c04730001049c006f03f4002c05b4007a069600a1
046400000231000002f6002502ec001a06250037071d005804e3005704e3
006502aa00c304ac0055046400540473ffec0464001f04e5001a04730060
0473006a080000c905c7000005c700000639005908000048078d00580473
fffc08000000040000840400006902390098023900720464003103f4002f
0473000e0556fff70156fea90473ffe002aa004b02aa004b04e3001f04e3
001f047300440239009302390075040000710800000105c7000005560095
05c7000005560095055600950239006a0239ffae0239ffbf0239ffc10639
0059063900590639005905c7009305c7009305c700930239009302aa0003
02aafff302aa001302aa001a02aa00cd02aa009102aa002602aa006002aa
003902aa000304e3000a0239000a0556004a0473003004e3001604000022
023d00b005c7fffd04e300530556fff70473000e0556009504e3008b04ac
005504ac006d02aa005b02aa001902aa002806ac005c06ac005c06ac0028
047300000639006204e300540239008c0556004a0473003005c700610473
005505c700610473005504e30054046bffed02aa00c805c7000004730049
05c700000473004905c7009405c0005105c7fffd05560095047300410556
00950473004104e3009d0239007904e3009d0315009504e3009a03d50093
05c7009804e3009105c7009804e300910639005904e3005205c70096031d
008705c70096031d00500556004a0473003004e3002c02aa001f04e3002c
03d5001e05c7009304e3008d05c7009304e3008d04e300160400002204e3
00160400002204cf009a063900560691005604eb004e04da004e03cc004e
0579004e0392003005b9004e046bffed04d500b8032b004f08c000290800
004f040000990800004f040000990800004f040000980400009807d5016a
05c7008f04ab005504d5009d04ac005504d5022204d5010505abffe90500
01c905ab027e05abffe905ab027e05abffe905ab027e05abffe905abffe9
05abffe905abffe905abffe905ab01c005ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe9
05abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905ab02d605ab006605ab
ffea05d5ffff04d500920800000007eb013007eb012007eb013007eb0120
04d500b204d5008004d5002a082b0198086b01b807550010060000f40600
006f0440003a0540003704c0003f0415004004000025060000550647008c
0473009005abffc701eb008d03d500860715002303e9001804d5009202d6
005c02d6005c04d500b202d6004d05c700000473004905c7006104730055
05c700610473005505560095047300410556009504730041055600950473
00410639006204e300540639006204e300540639006204e3005405c70096
04e3009205c7000504e300190239ffba0239ffbb0239ffda0239ffda0239
ffe10239ffe20239004802390047047300230239ffa205c7009904730089
0473008d04e3009d0239008005c7009804e3009105c9009c04e3008e0639
005904e300520639005904e3005205c70096031d007b0556004a04730030
04e3002c02aa000705c7009304e3008d05c7009304e3008d05c7009304e3
008d05c7009304e3008d078d0007063900090556fffd0473000e0239008d
05c70000047300490800ffaa071d00580639003f04e3005702aa00c9078d
000706390009078d000706390009078d0007063900090556fffd0473000e
0239009502aaffd70473000d04cd005a06ac005c06ac002906ac003006ac
002f02aa00bc02aa002602aa00bb03b8fff405c7ffe806d3ffbb073fffbb
03caffbb0699ffa6076bffc806b4ff9c0239ff2905c7000005c7009605c0
00000556009504e3001605c700960239008c05c700990556000006aa0091
05c70098052600660639005905c7009a0556009504cd005a04e3002c0556
fffd0556000006790056066a00620239ffcc0556ffff04eb004e039c004e
04e3008e0239008204a8006c04e200900473000f03af004e04e3008e0453
004e023900930476008e0473000f04e500900473000b0390004e04e30052
04f300760429004e04a80076049b00110607007606c2004e0239ffcd04a8
007604e3004e04a8007606c2004e055a00970715002f048900a405b10058
0556004a0239008c0235ffca0473002308c0001a0880009d0700003704e2
009a04fa000005c0009905c7000005c0009b05c70096048900a405b3fffa
05560095073b00170503002c05c0009905c0009904e2009a059d002006aa
009105c700960639005905c000990556009505c7006104e3002c04fa0000
06d400590556000005d8009a059f007d080a009a0827009a06f5001a07d5
009d05c0009b05b100570840009605c000040473004904f1005c04eb0096
035500880514fff90473004105acffff03fa001804eb008c04eb008c0401
00880515001905eb009b04d5008804e3005204d5008804e3008b04730055
03eb00150473000e070000540473000c04eb008904a5007206ab008c06c0
008d05d5002806d5009504eb0099046b003806d5009104abfffb04730045
04e3000003550088046b005104730030023900930240ffd00239ffa207c0
00180740008c04e30000040100880473001204d5008803e5009603930088
0800004108eb00a306200030000000000000000000000000000000000000
0000000000000000000000000000000000000000ffac0000000000000101
0000ffce0393007d0000ff37026500c8000003020000ff0102aa00c904a9
0059049b004103a7000a0466003204ea0082022f0087034e005a04ed0087
0503007d022f0087042c002803ed004b03f8004104e30087050a0037022f
00870316004b04e800500459000a04c0006404b2006403ff000a0418000a
04950082042c002805b8005a0563002d045e0087045e0087045e00870236
005004090050068b0087022f0030042c0028042c002803f8ff4903f8ff49
0479003205b8005a05b8005a05b8005a05b8005a04a9005904a9005904a9
0059049b004103a2000a0466003204ea008202950000038100000503007d
02950000042c002803ed004b03f80041050a00370316004b04e8005004c0
006404b200640418000a04950082042c002805b8005a0563002d022f0087
049b004103ed004b04b2006404db00410000ffdc0000ff250000ffdc0000
fe51028d00ab028d00a002da004303c0007e0196ffba0000004600000046
000000460000004600000048000000460000004600000046047e0188047e
0150047e0104047e009e047e012d047e00ea047e00d5047e009c047e00bc
047e00ee04350085028d00c0043500b3060001000600010002be00580600
0100047e00a5047e00bd047e00de06000100060001000600010006000100
060001000000004606000100060001000600010006000100060001000600
0100060001000600010004e6ffba06000100060001000600010005320039
05320039022cffba022cffba06000100060001000600010006000100049e
0034047800300430ffba0430ffba0376000a0376000a060e002907080029
02e2ffba0456ffba060e00290708002902e2ffba0456ffba05280097046f
000a03520003060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100000000310000004600000046000000400000004606000100
060001000000ffdc0000fe510000ff160000ff160000ff160000ff160000
ff160000ff160000ff160000ff160000ff160000ffdc0000ff160000ffdc
0000ff200000ffdc0473002d080000000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100028d0011028d00300600010005a0002e03c0007e01e8
00060207ffcf01bc005e01e0fffa039c0006039c000601bc005e01e0001a
05280097049e0011022cffba022cffba01bc008801e0001a053200390532
0039022cffba022cffba02be0036035200030532003905320039022cffba
022cffba0532003905320039022cffba022cffba049e0034047800300430
ffba0430ffba049e0034047800300430ffba0430ffba049e003404780030
0430ffba0430ffba02be006902be006902be006902be00690376000a0376
000a0376000a0376000a073200400732004004deffba04deffba07320040
0732004004deffba04deffba0880004008800040062cffba062cffba0880
004008800040062cffba062cffba0430ffba0430ffba0430ffba0430ffba
0430ffba0430ffba0430ffba0430ffba0454003403c000460454ffba02e2
ffba0454003403c000460454ffba02e2ffba0610002f0610002f0270ffba
0298ffba04e6002704e600270270ffba0298ffba045400290454002902e2
ffba02e2ffba039c0023039c002301e0ffba01e0ffba02e2002102e20021
0352ffba0352ffba0454003e0454003e022cffba022cffba02be00580352
000303c0ffba039cffba039c0006039c000605280097046f000a05280097
049e0011022cffba022cffba0454001004c4001003e400220454001a03e4
00220454001a03e400220454001a06000100060001000000004600000046
060001000600010006000100000000460000004606000100060001000000
004800000046060001000600010006000100000000460000004600000046
000000460000004000000031060001000000004600000046060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
028d00ca028d00c7028d00c6060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010002be00690100ffba0800ffba1000ffbb
06d3005905b0005206a3009305cb008d0000fd880000fbc10000fc5f0000
fe310000fcad0000fd550000fe260000fdf10000fd180000fc690000fd95
0000fbe00000fc700000fed40000fecd0000fea0041b007806ac005c06ac
00190000fe450000fd550000fda60000fc5f0000fe250000fd180000fbe0
0000fafa0000fb360000fc700000fb870000fb9b0000fcce0000fc540000
fbc30000fc940000fbf50000fdb00000fe590000fd7e0000fc820000fd34
0000fe500000fe460000fcd10000fd3e0000fd020000fc3a0000fce90000
fc260000fc070000fc2f0000fb9e0000fb760239009305c7000004730049
05c700000473004905c700000473004905c700000473004905c700000473
004905c700000473004905c700000473004905c700000473004905c70000
0473004905c700000473004905c700000473004905c70000047300490556
009504730041055600950473004105560095047300410556009504730041
055600950473004105560095047300410556009504730041055600950473
00410239006a0239005d0239008c023900930639005904e3005206390059
04e300520639005904e300520639005904e300520639005904e300520639
005904e300520639005904e3005206d3005905b0005206d3005905b00052
06d3005905b0005206d3005905b0005206d3005905b0005205c7009304e3
008d05c7009304e3008d06a3009305cb008d06a3009305cb008d06a30093
05cb008d06a3009305cb008d06a3009305cb008d0556fffd0473000e0556
fffd0473000e0556fffd0473000e05c70000047300490239ffca0239ffca
0639005904e3005205c7009304e3008d05c7009304e3008d05c7009304e3
008d05c7009304e3008d05c7009304e3008d0000fef90000fef90000fef4
0000feef0489fffd03550007073b001705acffff04e2009a0401008804e2
009a0401008805c7009604d5008804730001047300120473000104730012
055600000473000c059f007d04a50072059f009c04e3009205cf00590473
004c0639005604e3005205320039022cffba0270ffba0298ffba04e60027
022c0065022c0016022c0016022c0011022c0043022cffd20000fef00000
000f0000fff502aa009002aa0090000000060000005e0000005e0000ffcb
01bc000f01e0ffbf01bcfff501e0ffcd01bc001d01e0000901bc008801e0
001a039c0006039c0006039c0006039c000605280097046f000a05320039
05320039022cffba022cffba0532003905320039022cffba022cffba0532
003905320039022cffba022cffba0532003905320039022cffba022cffba
0532003905320039022cffba022cffba0532003905320039022cffba022c
ffba0532003905320039022cffba022cffba049e0034047800300430ffba
0430ffba049e0034047800300430ffba0430ffba049e0034047800300430
ffba0430ffba049e0034047800300430ffba0430ffba049e003404780030
0430ffba0430ffba049e0034047800300430ffba0430ffba02be004f02be
004f02be006902be006902be006902be006902be004f02be004f02be0066
02be006602be006902be006902be006902be006902be002f02be002f02be
002202be00220376000a0376000a0376000a0376000a0376000a0376000a
0376000a0376000a0376000a0376000a0376000a0376000a0376000a0376
000a0376000a0376000a073200400732004004deffba04deffba07320040
0732004004deffba04deffba073200400732004004deffba04deffba0880
004008800040062cffba062cffba0880004008800040062cffba062cffba
0430ffba0430ffba0454003403c000460454ffba02e2ffba0610002f0610
002f0610002f0270ffba0298ffba0610002f0610002f0270ffba0298ffba
0610002f0610002f0270ffba0298ffba0610002f0610002f0270ffba0298
ffba0610002f0610002f0270ffba0298ffba04e6002704e6002704e60027
04e60027093e0032093e00320740ffba0740ffba060e00290708002902e2
ffba0456ffba045400290454002902e2ffba02e2ffba0454002904540029
02e2ffba02e2ffba045400290454002902e2ffba02e2ffba060e00290708
002902e2ffba0456ffba060e00290708002902e2ffba0456ffba060e0029
0708002902e2ffba0456ffba060e00290708002902e2ffba0456ffba060e
00290708002902e2ffba0456ffba039c0023039c002301e0ffba01e0ffba
039c0023039c002301e0ffb101e0ffb1039c0023039c002301e0ffba01e0
ffba039c0023039c002301e0ffba01e0ffba0454003e0454003e022cffba
022cffba0454003e0454003e0454003e0454003e0454003e0454003e022c
ffba022cffba0454003e0454003e049e0034047800300430ffba0430ffba
02be005803520003031a001a031a001a031a001a039c0006039c0006039c
0006039c0006039c0006039c0006039c0006039c0006039c0006039c0006
039c0006039c0006039c0006039c0006039c0006039c000605280042046f
ffd905280097046f000a022cffba022cffba039c0006039c000605280097
046f000a022cffba022cffba05280097046f000a067f0044067f0045067f
0044067f004501a800280000fe290000fe8c0000fec80000ff230000fefa
0000ff7a0000fe5908fc003208ad00320000ff880000ffaf0000ff3f0000
ff590000fe590000ff1501b4000002f700000000fe850000ff0704cd0032
0000ff580000ff580000ff59073200400732004004deffba04deffba0880
004008800040062cffba062cffba0454003403c000460454ffba02e2ffba
03c0007e02e2002102be0058022cffba0290ffba01f4002f01f4003b01f4
001201f400b101f4006d060e002907080029022f00870000fee003500000
045e008703e4fff50454fff503e400220454001a03e400220454001a03e4
00220454001a03e400220454001a03e400220454001a03e400220454001a
047e0072047e00bd03e4000f0454000f04e3001b06b1001e05c0009b04e3
008705c0000a04e3000a05c7006905c700610473005505c7fffd06b3001e
05c0005c04e3005404da004e055600660503006f04e3ffac063900620518
000207720092023900930239000705c70099047300890239001b0473000f
07ef009605c7ffad04e3008e063900560718005905f300550641001e04e3
008b05560095055600640473006304cd005a02e1001e02aa001f04e30018
02aa001f04e3002d066a006205c70093062900000473000e04e300160400
002204e3003a04e300590436002a04360039047300330473005b03fa001e
04a2001f04e3008b023d00b003fb00b004ad005602aa00b80aaa009409c7
009408e300540956009d071c009d047200930a3a009808000098071c0091
0473004c05c70000047300490000fefe05c70000047300490800ffaa071d
00580639006204e300240639006204e3005405c700990473008906390059
04e300520639005904e3005204e3003a043600220239ffa20aaa009409c7
009408e300540639006204e30054084300960552009505c7009804e30091
05c700000473004905c70000047300490556009504730041055600950473
00410239ff370239ff2d0239fff40239ffe60639005904e3005206390059
04e3005205c70096031dffcd05c70096031d008005c7009304e3006705c7
009304e3008d0556004a0473003004e3002c02aa001f049e002e04290049
05c7009604e30092059f009c050c0052050c005204e300160400002205c7
00000473004905560095047300410639005904e300520000fefd06390059
04e300520639005904e300520639005904e300520556fffd0473000e0473
004504e3005404e3008204e30087047300340473001404e3005404e30054
0473004c0641004c03fa004f03fa001805870018048a005202aaffc404e3
005404e3005404b000520473000f04ce000f04e3008a04e3009204e30092
0239001b0239006b033e004402a8000002d900140239009304d40093071d
0085071d0085071d007e04e3ffa604e3009104eb008c04e3005206ab0052
06c2004e05ff0052031dffe6031dffe6031dffe6031d0087031d0087031d
0087031dffe604ab008a04ab008a0473003002aaffc402aaffc402aaff9b
0451001e02aa001902aa001f04e3001b04f8004b04a80091047300120639
00090473000f0491000f0400002205700022043600220436002204730042
0473005504730042047300550639005904eb0096048a004f04b0005204d5
008803ab001e04730014039e008804e3005b0473004204730055083f0054
0789005409af00540682001f0446001f0698001f06f4001806350093058a
00930445001e0482008802f1003202f10032018effe20204003202040000
0204000003000032042f000002e2000001e7005c03cb0070023900980239
00750239009402aa00f302aa00f3030000320300003204ac005f04ac005f
04ac002a04ac002a02aa012102aa00bb02aa002a02aa012102aa001302aa
002a02aa00bb02aa00ca02aa00ca02aa00f302aa00f302aa00a602aa00a6
02aa00a602aa001302aaffe102aafffb02ed0000012100320302003202ee
000003000032031000960310009603100096031000960310009602aa0062
02aa006202aa000302aa001d040000690457009604570096045700960457
00960457004304570043045700430457004304570043031000430457002f
0457002f0457002f0457002f0457002f0310002f04570025045700250457
002504570025045700250310002f0457001a0457001a0457001a0457001a
0457001a0310001a04570042045700420457004204570042045700420310
004204570096045700960457009604570096045700420457004204570042
0457004204570042031000420457002f0457002f0457002f0457002f0457
002f0310002f0457002f0457002f0457002f0457002f0457002f0310002f
045700260457002604570026045700260457002603100026045700420457
004204570042045700420457004203100042045700960457009604570096
045700960457004204570042045700420457004204570042031000420457
002604570026045700260457002604570026031000260457002304570023
045700230457002304570023031000230457002f0457002f0457002f0457
002f0457002f0310002f0457004b0457004b0457004b0457004b0457004b
0310004b0457009604570096045700960457009604570042045700420457
00420457004204570042031000420457001a0457001a0457001a0457001a
0457001a0310001a04570024045700240457002404570024045700240310
00240457002f0457002f0457002f0457002f0457002f0310002f0457004e
0457004e0457004e0457004e0457004e0310004e04570096045700960457
0096045700960000feaf0000febf0000fdb50000fec80000ff780000feb1
0000ff3d0000fe6f0000feae0000ffce0000ff660000fe6f0000fec80000
fec80000ff680000ff680000ff68000000000000ff1f0000ff1f0000ff44
0000ff5f0000fe870000ffec0000ff9c0000ff510000ff510000ff510000
febf0000ff15000000000000feb10000ff3d0000ff6b0000fef20000ff47
0000ffce0000fe870000febb0000feae0000feae0000fec80000fec80000
fea60000febf0000fdb70000febe0000fea60000febf0000fdb50000fe1f
0000fee20000ff9c0000fe870000ff440000feba0000ff230000ff9a0000
fdb90000fe3b000000000000fea70000ff680000fe170000ff740000fe87
0000fe000000ff660000ff440000fea70000fea70000fea70000ff030000
ff520000fd1f0000ff530000ff530000ff530000feb10000feb00000ffa1
0000fe8c0000feb80000feaf0000fea20000feba0000fdf40000ff190000
ff2d0000fe8c0000fe8802aa00bb02aa002a02aa00c804e2006704a8000a
06290000080200000629000005ff005206c2004e056900140639005904e3
005205c700770473005504e30097039e008806030000043c001d066f000a
04e2000a07ef0096071d0085059f007d04e3008a059f009c04d7000a0556
0064055600640524001404d4000a05e1005504a0004b040e001403840028
0569001404f1005c047300550239ffa20639005603d4005103d400510556
009505c000990473004104eb008c0a3d0059063a001406f4001a059f001b
07ce008c065e0093055600000473000b0768008c06670093067900560607
0076089e008c07d800930503004603fa0043067900560607007606390056
04e300520685ffff052c000b0685ffff052c000b08f6005907cb00520684
0023051a00230a3d0059073500550000fe370a3d0059063a001405c70061
0473005504ac000f0000fea60000feb10000ff8d0000ff8d0000fc2b0000
fc4c05c0009904eb008c05c0001104eb001b0556009504e3008b059f009c
04c900880503002c03fa001804e200110401000d0617001a04fc00280709
009605b6008809020099075f008805c7003b049f003405c7006104730055
04e3002d03eb001506d2002c05830015059f007d04a5007206da000a056d
000a06da000a056d000a0239008c073b001705acffff059d009a04c80088
059d00200515001905c7009604d5008805c7009604d50088059f007d04a5
007206aa009105eb009b02aa001a05c700000473004905c7000004730049
0800ffaa071d0058055600950473004105cf00590473004c073b001705ac
ffff0503002c03fa00180503002c0436002205c0009904eb008c05c00099
04eb008c0639005904e300520639005604e3005205b10057046b003804fa
00000473000e04fa00000473000e04fa00000473000e059f007d04a50072
07d5009d06d5009505c0005e04e30054083e005e077a005407ad004606c4
004305430046044a0043081a002007a50019084300960766008806390062
04b000520620002d059b00150000ff430000ff290000ff6a0000ffac0000
ff590000ff560000ff730000fed70000fe5c0000005e0000ff560000ff56
000000500000ff0b0000fe550000ff430000ff5c0000ff750000ff640000
ff560000ff0b0000ff8a0000ff560000ff430000ff430000ff640000ff75
000000500000fddd0000ff750000ffad0000feef0000feef0000fefd0000
fef90000ff530000fef80000fef905c700000473004905c7009604e30087
05c7009604e3008705c7009604e3008705c700610473005505c7009404e3
005405c7009404e3005405c7009404e3005405c7009404e3005405c70094
04e300540556009504730041055600950473004105560095047300410556
009504730041055600950473004104e3009702aa00180639006204e30054
05c7009604e3009205c7009604e3009205c7009604e3009205c7004e04e3
003b05c7009604e300920239ffd20239ffd20239001b0239ffce05c70099
0473008905c700990473008905c700990473008904e3009d0239009304e3
009d0239ffeb04e3009d0239ffdd04e3009d0239ffcb06aa0091071d007e
06aa0091071d007e06aa0091071d007e05c7009804e3009105c7009804e3
009105c7009804e3009105c7009804e300910639005904e3005206390059
04e300520639005904e300520639005904e300520556009504e3008b0556
009504e3008b05c70096031d008705c70096031d008705c70096031d0087
05c70096031d00590556004a047300300556004a047300300556004a0473
00300556004a047300300556004a0473003004e3002c02aa001f04e3002c
02aa001f04e3002c02aa001f04e3002c02aa001f05c7009304e3008d05c7
009304e3008d05c7009304e3008d05c7009304e3008d05c7009304e3008d
0556ffff0473000b0556ffff0473000b078d000706390009078d00070639
0009055600000473000c055600000473000c0556fffd0473000e04e30016
0400002204e300160400002204e300160400002204e3009202aaffde0639
00090473000e047300490239008d04eb004e04eb004e04eb004e04eb004e
04eb004e04eb004e04eb004e04eb004e05c7000005c7000006f3fff206f3
000006f3fff206f3000006f3004306f3004303cc004e03cc004e03cc004e
03cc004e03cc004e03cc004e061efff2061e000007aefff207ae000007ae
fff207ae000004e3008e04e3008e04e3008e04e3008e04e3008e04e3008e
04e3008e04e3008e068ffff2068f0000081ffff2081f0000081ffff2081f
0000081f0014081f001402390090023900900239ffb60239ffc40239ffde
0239ffec0239ffb30239ffc00301fff2030100000491fff2049100000491
fff204910000049100140491001404e3005204e3005204e3005204e30052
04e3005204e30052069dfff2069d00000855fff20855000007c9fff207c9
000004a8007604a8007604a8007604a8007604a8007604a8007604a80076
04a800760682000007fe00000862000007aefff306c2004e06c2004e06c2
004e06c2004e06c2004e06c2004e06c2004e06c2004e06cefff206ce0000
0886fff20886000007fafff207fa000007fafff307fafff304eb004e04eb
004e03cc004e03cc004e04e3008e04e3008e0239ffe70239008d04e30052
04e3005204a8007604a8007606c2004e06c2004e04eb004e04eb004e04eb
004e04eb004e04eb004e04eb004e04eb004e04eb004e05c7000005c70000
06f3fff206f3000006f3fff206f3000006f3004306f3004304e3008c04e3
008c04e3008c04e3008c04e3008c04e3008c04e3008c04e3008c068ffff2
068f0000081ffff2081f0000081ffff2081f0000081ffff3081ffff306c2
004e06c2004e06c2004e06c2004e06c2004e06c2004e06c2004e06c2004e
06cefff206ce00000886fff20886000007fafff207fa000007fafff307fa
fff304eb004e04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e
05c7000005c7000005c7ffd105c7ffdd05c7000002aa00dc02aa00ca02aa
00dc02aafff302aafff304e3008c04e3008c04e3008c04e3008e04e3008c
06e6000006e60000075700000757000005c7009602aafff202aafff202aa
fff30239ffe50239ffdb0239ffce0239ffce0239ffc20239ffbb0239ffe8
0239ffde03c9000003c9000002aa000002aa000002aafff304a8007604a8
007604a8007604a8007604f3007604f3007604a8007604a800760556fffd
0556fffd06e6ffd8074affdd061e000003b8fff403b8fff402aa002a06c2
004e06c2004e06c2004e06c2004e06c2004e0765ffd1069dffdd0796ffd1
06ceffdd066a006202aa00bb02aa00dc0473000a05c7006105c70061071d
007e05c7002109cd0096078d000705c7002004e3002d08b0001404000030
04c100660000ff530000ff530000ff530000ff530239001b0239ffa20473
00000556001206b3005403fe005706ab0091040c001f05d6ffe605d6ffe6
02aa008402aa008402aa00c902aa00c902aa009102aa002a02aaffc502aa
ffc302aafff302aa00c902aa00a902aa00a902aa00a902aa00a9032e001e
032e001e02aa003a0000ff730000ff9d0000fec80000ff230000ff720000
ff720000fee70000ff9d0000ff530000ff530000ff530556009504e3008b
04b5000006350000071d006104eb000f04730055049900910499001b0401
008c03fa001802390093040f00490476008e039e000e05eb009b04eb008c
04e300520473003404f1005204f1005204f10021078d00540492004b04e3
005304e3005304e9008c04abfffb04abfffb03eb001504a8007604e30051
0624005104e000510473000b063900090400002203df002203f2004b04ec
0014035500880473001204d5008804e9008c060700760515001903e30000
0591000003a2003203a2000003a30032035500320355003204030032037c
00320172005502de003203b00032031e0032042200320377003203780032
04260032037a0032035b003203ac003203770032037b0032051400000305
0032030500320321003204b6003203210032032100320302003203020032
02cf003202cf0032032000320121003202ca00320484003402f200320348
0032030a003203490032034900320320003201bc000a02f2003203420032
0484003202e90000034c000a031b003202e900000343003203da00320308
0000012100320204003202f2003202e90000031b003202e9000003420032
03da003203080000077d00460a98004602a700460a7800460541ffba01e9
001e045400100000ff0d0000ff350000fece0000feb70000fec90000ffc7
0000ff4f0000ff9e0000fef002be006902be00690376000a0376000a03c0
ffba039cffba03c0ffba039cffba05c8003905920032061600820519004b
05240041060f008705580028068f002d04ac005500000000000000000000
00000473fffc0400008403d5ffba01e0ffba01e0ffb101e0ffba01e0ffba
06d0002e098400230400000008000000040000000800000002ab00000200
0000015500000473000002390000019a000000ab00000000000005e5fff7
05c7006106aa009105eb009b0760008d07a1005407a1005b05c7000005c7
00610473001404e3001104e3002c04730039040000220529004200000101
0000ff420000fead0000ff3a0000ff5304f3000a05c7006905c7006105c7
0069048900a4035500880000ff430000ffac0000ffac0316007d00000000
0298ffba033d001e0000ff3a0000ff480000ff490000ff7e0000ff4f0000
ff4a0000fe9e0532003905320039022cffb6022cffb60532003905320039
022cffba022cffba0532003905320039022cffba022cffba053200390532
0039022cffba022cffba0532003905320039022cffba022cffba05320039
05320039022cffba022cffba0532003905320039022cffba022cffba049e
0034047800300430ffba0430ffba049e0034047800300430ffba0430ffba
02be004f02be004f02be006902be00690376000a0376000a073200400732
004004deffba04deffba0454003403c000460454ffba02e2ffba04540034
03c000460454ffba02e2ffba0454003403c000460454ffba02e2ffba0610
002f0610002f0270ffba0298ffba0610002f0610002f0270ffba0298ffba
060e00290708002902e2ffba0456ffba060e00290708002902e2ffba0456
ffba060e00290708002902e2ffba0456ffba02e2002102e200210352ffba
0352ffba02e2002102e200210352ffba0352ffba0454003e0454003e022c
ffba022cffba0454003e0454003e022cffba022cffba0454003e0454003e
022cffba022cffba039c0023039c002301e0ffba01e0ffba0376000a0376
000a0376000a0376000a073200400732004004deffba04deffba04e3ffc1
04e3005402aafff3071dffc104e3ffd504e3ffc5031dffc1031dffc10473
ffff02aaffda0400002104e3008302f0003204dc004e06fb001f0239001b
0239001b04e3001404a8001404f8001404e3008704e3005402aa00180625
00540473008902390070071d007e04e3009104e3008b031d006604730030
03baffc40473000b0473000c040000220473004904e3005404e300540473
004103fa004f03fa0018053e0051023900930473003402aaffc404e3008d
0436002203210032030a0032030a00060348003202cf003201f0000a01f0
00000320003202f100320174000a01210032012100320174000a02760000
018e003201500032024900320484003404840032035f0000035f003202fa
00320348003204030032030200320239000001bc000a0340000a035e0032
02ea003202ea003202e9000002e4003202e4003203be0032030a003202e8
00320000fe920000fe920000ff730000fe9f02aa00c90305003203020032
0348003202ee0000030200320639006205c700000556001e05c7006102aa
004104eb004e04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e
04eb004e0239ffb60239ffb60239ffc40239ffc40239ffb60239ffb60239
ffc40239ffc404a8007604a8007604a8007604a8007604a8007604a80076
04a8007604a800760239ffc90239ffc90239ffc90239ffc904a8007604a8
007604a8007604a8007603e400220454001a03df003005c7fffd05c70016
055600000556009504730041047300230239ffa20633005904e3005b05c7
0000031d001b0556fffd0473000e04730034047300550473003402390093
048900110355001b055600000473000c055600000473000c0503006f03fa
004f059d0020051500190000fec60000fed40000fec60000fed40000fe5f
0000fe5f0000ff720000ff730000fee7080000000401005d0473003404e3
00110239001b04e300060556fffd05c700960473004902aaffcd05c70096
04e3009205c700990473008904e30016040000220473002804540096037c
008805b9004e0000ff530000ffbc0000fefe0000fefe0000fea40000fea4
0239009305c9009c05c7009805c9009c0000fee00000ff300000fed40000
fed50000fec00000fed00000fed80000fed80000fed80000fed80000fdc6
0639005904e3005b078d00070639000905b900910000fe9b061b005904d9
0006085b000706de000602aa00c9031c005501e7005c01e7005c04000099
0400009902aa00b802aa00b802aa00b802aa000300000046000000360000
00310000005600000044000000560000004a0000004904e3002c0473002b
04a3005c0379003f048800480453003e04870031045f003e048b005c0433
004004730053048f005c046f00560381003b0481003c04810056049b0032
0481005004890062043b004b04730053048a005505a3005005d3005905d9
0096092a009605d9008c0316003b059800990639005904e30054021d0082
047000820277008204e300540250000f04e3008a0473005c047300620316
003b027700820239009304d0000004ee009804c7005c04f1009804860098
04290098053d005c051200980250009803d0002904f40098042c00980628
0098050c0098054a005c048c00980553005c04f60098047b004a04190029
04eb00900492000a0651001404a2001204a600080429001f06cc000006b9
005c042c00380548003e048d009804f10024050f008e04d0000004d00000
04d0000004d0000004d0000004d0000004c7005c04860098048600980486
0098048600980250fff9025000900250ffd70250ffde050c0098054a005c
054a005c054a005c054a005c054a005c04eb009004eb009004eb009004eb
009004a6000804d0000004d0000004d0000004c7005c04c7005c053d005c
04f1009804f100240486009804860098048600980486009804860098053d
005c053d005c04c7005c05120098051200360250ffd00250ffe50250fff1
025000570250009805d8009803d0002904f40098042c0098042c0098042c
0098042c0098050c0098050c0098050c009805000098054a005c054a005c
054a005c04f6009804f6009804f60098047b004a047b004a047b004a047b
004a0419002904190029041900290419002904eb009004eb009004eb0090
04eb009004eb009004eb00900651001406510014065100140651001404a6
000804a6000804a600080429001f0429001f0429001f04d0000006cc0000
0548003e04d0000004ee00980417009804d00000048600980429001f0512
00980549005c0250009804f40098047afffb06280098050c0098043a004c
054a005c05000098048c0098041e00430419002904a600080583004c04a2
0012056f004c055c005c04d00000048600980512009802500090054a005c
04a60008055c005c0250ffde04a600080486009805d500290417009804ca
005c047b004a025000980250ffde03d00029072c0003074b0098058a0029
047b00980455001904fc009804d0000004ed009804ee00980417009804e1
000f048600980699002304560046050c0098050c0098047b009804b50001
0628009805120098054a005c05000098048c009804c7005c041900290455
0019059e004c04a200120507009804bf006406c2009806d6009805c00028
06b2009804bb009804cb004906e1009804f600090364009802aa003502aa
005b02aa001902aa002802aa001202aa002202aa003502aa003302aa002c
02aa002f02aa003502aa002f02aa003505a3005005a3005005a3005005a3
005005a3005005a3005005a3005005a3005005a3005005a3005005a30050
05d3005905d3005905d3005905d3005905d3005905d3005905d3005905d3
005905d3005905d3005905d3005905d9009605d9009605d9009605d90096
05d9008c05d9008c05d9008c05d9008c05d9008c05d9008c05d9008c05d9
008c05d9008c0316003b0316003b031600390316003b031600310316003b
0316003b0316003b0316003b044dff890316003b0316003b0316003b0277
00820277000903070082032600820277fff90316003b0316003b03160039
0316003b031600310316003b0316003b0316003b0598009904e3005404e3
005404e3005404e3005404e3005404e3005404e3005404e3005404e30054
021dffbc04700082027700820277000903070082032600820277fff90250
000402500008037a000f0250000f04e3008a04e3008a04e3008a04e3008a
04d60049047b004a04c7005c053d005c02aa001202aa002202aa003302aa
002c05a0002e04ed009d04ed009d069b002a04d5008505e30085023200a3
023200960232004e023200200232006702320031023200390232001e0232
001e023200420232001c023200250232002e023200170232000b0d650046
0e3200460000ffba0f6200460000ff640000ff9a0000ffb40000ff9c049e
0034047800300430ffba0430ffba049e0034047800300430ffba0430ffba
073200400732004004deffba04deffba0376000a0376000a049e00340478
00300430ffba0430ffba01bcffcc01e0ff6801bcffe601e0ff8205280097
046f000a022cffba022cffba05280097046f000a022cffba022cffba0528
0097046f000a022cffba022cffba039c0006039c0006039c0006039c0006
067f0044067f0045067f0044067f0045049e0034047800300430ffba0430
ffba073200400732004004deffba04deffba073200400732004004deffba
04deffba045400290454002902e2ffba02e2ffba044dffcb04a5ffcc043e
ffd504a2ffcd07b9003205ef003207230032051700350bdefeed0000fe2c
0000fffc0000006b000000730000006b05280097046f000a022cffba022c
ffba060e00290708002902e2ffba0456ffba060e00290708002902e2ffba
0456ffba05280097046f000a022cffba022cffba05280097046f000a022c
ffba022cffba05280097046f000a022cffba022cffba0000fff504540096
03b3000a04e3002c04ae001405c000990513008c05c7009904e3006a0a66
00440476001f0556001c0826002006e9001906780095066b008b07f90004
06e9fffb05c700990476008e08dc002007940019090500960753008805c0
009904d50088059f009c04e3009202aa001802aa001804da004e06b9008c
041a00180514005904da005305a300280538000006aa009105c70004061b
009d059a0041031dffe604e3005204010049018effe202e900000556004a
04e3001602390047079300ec0b3dffaa08d200000b4700380f6200440196
ffba0196ffba0196ffba01e0000201a8003201a800460196ffba01a8001a
0251003a01a8002901a800460196ffba01a800480196ffba01a800290196
ffba01a800460196ffba01a8006e0196ffba01f4006501f4001601f40016
01f4001101f4ffd2022e008d01f400430199004602bf004d02bf005504c3
000a02f8001a02f8001a0463000304630003056200060562000605620006
0562000605620006056200060562000605620006046c000a046c000a043a
ffba046c000a046c000a043affba0532003905320039022cffba022cffba
049e0034047800300430ffba0430ffba0430ffba0430ffba0430ffba0430
ffba0610002f0610002f0270ffba0298ffba04e6002704e600270270ffba
0298ffba039c0023039c002301e0ffba01e0ffba02e2002102e200210352
ffba0352ffba05280097049e0011022cffba022cffba05280097049e0011
022cffba022cffba0339001903390019039c0006039c0006036b002f036b
002f0000ff1e0000ff480000ff1e0000fee70000ff4f0000fef90000ffb5
0000ff520000ff470000ffb50000ff520000ff470000ff000000fea60000
ff000000ff230000ff240000ff570000ff570000ff920000ff920000ff92
0000ff920000ff2f0000fed70000ff340000ff3103e400220454001a0000
ffac03a7000a0466003204ea00820563002d0000ffac0000ff2a028d00ab
028d00a00479001904790019047900190479001904790019047900190479
0019047900190479001904e60027028d00ab0327002202300014017a002e
0000ff7606d0002e05e6009605be009605f3006405e6005a05be009605d6
008c057a00a005be00960747009505f30064058c00a004a800a0078800a0
062c006705aa008c052f003c05c0008205e6005a05e6008b0622009605f9
008205e5000005a6007805be0096059a006e06cb00500627009606220096
05be009605e6005a057000640582009605f90082044100a006ea0064061a
000a065500640699005a023900750239007501ccff8d0201ffc102650066
0230ffaa041c00420734008c04e500910565005a055d009104ea009104f2
005a04b70091050f0091063900910565005a04e50091023b009107350091
04da005a04ea009104e50091048e004804ea009104df007a04e5008c023b
ffa604eaffab0425003204e50091031700180734008c0492006e04d00091
04e5008c04e5008c072f008c04e4009104f7005a03900091072f008c04e9
000004fb005a06a30032063f009102aa00c9032400220804006c0804006c
05f9005009cf008c09cf008c09cf008c09cf008c0c1a008c047300140800
0000000000000000ff4d0532003905320039022cffba022cffba01560088
02be006902be00690880004008800040062cffba062cffba060e00290708
002902e2ffba0456ffba02ad003901e900390376000a0376000a0000ffce
0473002305c7ffab04d5ff9d0b9dfffa099afff90621000005060000059d
00200515001907670032073800500522001807560018074d001805350018
06e100300697008700>
<000000000000006c0000006c0000006c0000006c0000006c0000006c0000
006c0000006c0000006c0000006c0000006c0000006c0000006c0000006c
0000006c0000006c0000006c0000006c0000006c00000170000001f20000
0398000004f00000060a0000077c000008b00000096c00000b0a00000c50
00000c5000000c5000000c5000000c5000000c5000000c5000000c500000
0c5000000c5000000c5000000c5000000c5000000c5000000c5000000c50
00000c5000000c5000000c5000000cac00000f00000010fe000010fe0000
10fe000010fe000010fe0000135e0000135e0000135e0000135e0000135e
0000135e0000135e0000135e0000135e0000135e0000135e0000135e0000
135e0000135e0000156c00001668000017a40000189400001aa000001aa0
00001c7c00001c7c00001d1e00001d1e00001d1e00001d8a00001d8a0000
1e7400001f6400001f6400001f6400001f64000022aa000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca000023ca000023ca000023ca000023ca000023ca000023ca000023ca
000023ca000023ca000023ca000023ca000023ca000023ca000023ca0000
23ca00010000108d02d2003c0094000600020010002f00560000074b02c2
000500020000000e00ae0000000300000000021a00000000000300000007
0064021a0001000000000000010d027e00010000000000030013038b0001
0000000000040013039e0001000000000006001303b10001000000000007
003103c40003000004090001001803f50003000004090002000e040d0003
0000040900030026041b0003000004090004002604410003000004090006
002604670003000104090000021e048d0003000104090007006206ab00a9
0020003200300031003500200054006800650020004d006f006e006f0074
00790070006500200043006f00720070006f0072006100740069006f006e
002e00200041006c006c0020005200690067006800740073002000520065
007300650072007600650064002e0020000d000d00480065006200720065
00770020004f00700065006e00540079007000650020004c00610079006f
007500740020006c006f00670069006300200063006f0070007900720069
006700680074002000a90020003200300030003300200026002000320030
00300037002c002000520061006c00700068002000480061006e0063006f
0063006b002000260020004a006f0068006e00200048007500640073006f
006e002e002000540068006900730020006c00610079006f007500740020
006c006f00670069006300200066006f00720020004200690062006c0069
00630061006c00200048006500620072006500770020006900730020006f
00700065006e00200073006f007500720063006500200073006f00660074
007700610072006500200075006e00640065007200200074006800650020
004d004900540020004c006900630065006e00730065003b002000730065
006500200065006d0062006500640064006500640020006c006900630065
006e007300650020006400650073006300720069007000740069006f006e
00200066006f0072002000640065007400610069006c0073002e00410072
00690061006c002000200069007300200061002000740072006100640065
006d00610072006b0020006f006600200054006800650020004d006f006e
006f007400790070006500200043006f00720070006f0072006100740069
006f006e002ea9203230313520546865204d6f6e6f7479706520436f7270
6f726174696f6e2e20416c6c205269676874732052657365727665642e20
0d0d486562726577204f70656e54797065204c61796f7574206c6f676963
20636f7079726967687420a92032303033202620323030372c2052616c70
682048616e636f636b2026204a6f686e20487564736f6e2e205468697320
6c61796f7574206c6f67696320666f72204269626c6963616c2048656272
6577206973206f70656e20736f7572636520736f66747761726520756e64
657220746865204d4954204c6963656e73653b2073656520656d62656464
6564206c6963656e7365206465736372697074696f6e20666f7220646574
61696c732e4a4f43424f422b417269616c2d426f6c644d544a4f43424f42
2b417269616c2d426f6c644d544a4f43424f422b417269616c2d426f6c64
4d54417269616c20697320612074726164656d61726b206f662054686520
4d6f6e6f7479706520436f72706f726174696f6e2e004a004f0043004200
4f0042002b0041007200690061006c0052006500670075006c0061007200
4a004f00430042004f0042002b0041007200690061006c002d0042006f00
6c0064004d0054004a004f00430042004f0042002b004100720069006100
6c002d0042006f006c0064004d0054004a004f00430042004f0042002b00
41007200690061006c002d0042006f006c0064004d005400a90020003200
300031003500200054006800650020004d006f006e006f00740079007000
6500200043006f00720070006f0072006100740069006f006e002e002000
41006c006c00200052006900670068007400730020005200650073006500
72007600650064002e0020000d000a000d000a0048006500620072006500
770020004f00700065006e00540079007000650020004c00610079006f00
7500740020006c006f00670069006300200063006f007000790072006900
6700680074002000a9002000320030003000330020002600200032003000
300037002c002000520061006c00700068002000480061006e0063006f00
63006b002000260020004a006f0068006e00200048007500640073006f00
6e002e002000540068006900730020006c00610079006f00750074002000
6c006f00670069006300200066006f00720020004200690062006c006900
630061006c00200048006500620072006500770020006900730020006f00
700065006e00200073006f007500720063006500200073006f0066007400
7700610072006500200075006e0064006500720020007400680065002000
4d004900540020004c006900630065006e00730065003b00200073006500
6500200065006d0062006500640064006500640020006c00690063006500
6e007300650020006400650073006300720069007000740069006f006e00
200066006f0072002000640065007400610069006c0073002e0041007200
690061006c00200069007300200061002000740072006100640065006d00
610072006b0020006f006600200054006800650020004d006f006e006f00
7400790070006500200043006f00720070006f0072006100740069006f00
6e002e00410c005403af03af03af0235001d001f03ae03ad003c001f03ad
b3061d1f80410d03ac00af03ac0002001003ac002003ac00a003ac000300
4003acb3070d3240b803acb312143240b803acb2162b32b9ffc003acb23a
3340b803acb32d943280bc03ab005f0033ffc003abb2553340b803abb340
443240b803abb3333b3240b803abb32f313240b803abb2083340b803abb3
0714321f411a03ab002f03ab0002000f03ab002f03ab004f03ab008f03ab
009f03ab00bf03ab0006001003ab00df03ab00ff03ab000303a803a2b246
1f40b803a5b208330f411403a50001004003a500cf03a500ff03a5000300
2003a500af03a500ef03a500ff03a50004ffc003a3b3090c3240b803a3b2
08330f411b03a30001000f03a3001003a3008003a300af03a300cf03a300
05006f03a3009f03a300ff03a30003009f03a200af03a2000203a203a1b2
101f10410a039e007f039e0002039a000f0101001fffc00398b310143240
b80399b30f1332404110039500500395000200b0034d00c0034d0002006f
0391007f03910002ffc0034bb22d3132b9ffc0034bb30a0e32104110038b
0020038b0080038b000300a0038b00010020038b0040038b0002ffc0038b
b313163240b80383b20f1132b9ffc0037bb2303432b9ffc0037bb3101832
504114037800010365036e0023001f037e036e001e001f0363036e001d00
1f03620364000d001fffc00340b30f1032804110033f0001033f03150029
001f034103160032001f0344031a001b001fffc00375b20e1132b9ffc003
75b2282a32410a034303180032001f030f030d0034001f03080307b2321f
20bb0340000100400388b3090b3240b80388b2101532bd03850307001400
1f03800307b2171f0fbd030a002f030a0002ffc00354b3090d3290410c03
5400a003540002001f036e0001009f036e00010040036eb2090b32411103
45031c0016001f036b031d0015001f0346031e0015001f03a703a1004600
1f039db3261c1fc0bb0393000100400392b3090d3240b8033eb2083340b8
033eb30d0e32c04109033e000100b0038e00c0038e0002ffc00390b32638
3200412603280030032800020020037f0030037f00020010038a0030038a
0050038a006f038a007f038a009f038a000600000389003003890002002f
037a0070037700900377009f037a0004ffc00315b20f1032b9ffc00315b2
242832b903190318b2321f10bb031a0001ffc0031ab3090e3240b80318b2
121332b9ffc00318b30c0e323fbd0373004f0373000200400374b3171832
6fbb032a00010040032cb3181b3240b80370b2090c32bd03170316003200
1fffc00316b20e1132bd031c031e0016001f031d031eb2151fb0411f031e
0001000f031f000102ca02d00015001f02d302d5000d001f02cf02d0000d
001f02cb02d0000d001f02cd02d0000d001f02ce02d0000d001fffc002d0
b3090c3240b802d2b3090c32e0411c02e50001005f02dd009f02e5000202
bb02c30030001f02da02b80032001f02d902b9003f001f02d802b8006400
1f02b902b80033001f02bab221c81fb802b8b321c81f40b8039bb20d1632
b9ffc002c3b22b2f32b9ffc002c3b21f2532b9ffc002c3b2171b32b9ffc0
02c3b2121632412502c202c1001c001f02d702c10024001f02c102c00022
001f02bf02c00018001f02c0027400c8001f02b50235003b001f02b40235
003b001f02c402bc001e001f02b702b60038001f02b3b20ec81fb802b0b2
07c81fb802afb206c81fb802aeb200c81fb802afb2502f1fbc02ae02ab00
1a001f02adb2261a1fb802a8b326241f0fbb0235000102a50274b21d1f12
410a02a1015801f4001f02a000d801f4001f001202a2b237c81fb80290b2
bc201fb9029002904018374025402d40a6033025302d30a6032025202d20
3720a6204110028e0005009f028b0001028b028b00370020028900300289
0040028900900289b20437b041fd027400c0027400020080027400a00274
000200600274007002740002000002740010027400020080027400f00274
0002003f0285004f028500020090027e0090027f00900280009002810004
0090027a0090027b0090027c0090027d0004009002740090027500900277
00030070027e0070027f007002800070028100040070027a0070027b0070
027c0070027d000400700274007002750070027700030060027e0060027f
006002800060028100040060027a0060027b0060027c0060027d00040060
0274006002750060027700030050027e0050027f00500280005002810004
0050027a0050027b0050027c0050027d0004005002740050027500500277
00030040027e0040027f004002800040028100040040027a0040027b0040
027c0040027d000400400274004002750040027700030030027e0030027f
003002800030028100040030027a0030027b0030027c0030027d00040030
0274003002750030027700030020027e0020027f00200280002002810004
0020027a0020027b0020027c0020027d0004002002740020027500200277
00030010027e0010027f001002800010028100040010027a0010027b0010
027c0010027d0004001002740010027500100277000300e0027e00e0027f
00e0028000e00281000400e0027a00e0027b00e0027c00e0027d000400e0
027400e0027500e00277b103d041c5027e00d0027f00d0028000d0028100
0400d0027a00d0027b00d0027c00d0027d000400d0027400d0027500d002
7700030030027400400274000200c0027e00c0027f00c0028000c0028100
0400c0027a00c0027b00c0027c00c0027d000400c0027400c0027500c002
77000300b0027e00b0027f00b0028000b00281000400b0027a00b0027b00
b0027c00b0027d000400b0027400b0027500b00277000300a0027e00a002
7f00a0028000a00281000400a0027a00a0027b00a0027c00a0027d000400
a0027400a0027500a0027700030090027e0090027f009002800090028100
040090027a0090027b0090027c0090027d00040090027400900275009002
7700030020027e0020027f002002800020028100040020027a0020027b00
20027c0020027d0004002002740020027500200277000302810158080100
1f028001290801001f027f00ec0801001f027e00d80801001f027d00b108
01001f027c00a60801001f027b00820801001f027a00370801001f027700
260801001f027500200801001f0274001f0801b21f370f41160235004f02
35005f0235006f0235009f023500af023500bf0235000700af023500cf02
3500df023500ff02354022040f074f079f07af07bf0705af07e007020f06
4f069f06af06bf0605af06e0060220411b020d0001005f02350001008f02
350001007f023500ef02350002002f0235003f02350002003f0234004f02
34000202350235023402344011ed20ef2a01cf2a01bf2a01af2a018f2a01
410902470104001e001f022000370201001f0158400c263e1fd8263e1f37
26273e1fb8028eb6ec171fb226361fb801bcb226361fb80129402b26361f
ec26361fb126361fa626361f8226361f3726361f3226361f2d26361f2526
361f1f26361f37262a1fb801584022263e1fd8263e1fbc263e1f27263e1f
21263e1f20263e1f3700161600000012110840b9020d01a6b3c50d0009b8
01bcb227281fb801bbb227301fb801b8b2274f1fb801b7b227621f410901
b600270101001f01b5002002ab001f01afb21fe41fb801adb21fe41fb801
acb21fbb1fb801a8b21f341fb8015db2272e1fb8015bb227cd1f410d0155
001f0401001f0154001f0401001f0153001f0201001f0152b21f561fb801
51b21f291fb8012bb227261f410d012a00270125001f0129015800e4001f
0125001f0401001f0124b21fe41fb80123b21f3b1fb80122b21f391f410d
010800270801001f0106002d0101001f0105001f0101001f0103b31fbb1f
efb901580401400b1fed1f931fec1fe41feb1fb80201b21fd920b80401b2
1fcf25b80156400a1fbc2d9e1fbb1f411fb2410a01580401001f00b10158
0401001f00b001580401b51fa625891f9bb901580125b61f991f2e1f8e2d
b80801b51f8d1f291f89b901580401b21f8220b802ab40131f801f301f74
2de41f731f4a1f611f521f5d25b802abb21f5c1fbc0801001f0059015802
abb61f5025891f491fb80125b21f4725b80401400b1f461f791f401f271f
3920bc02ab001f003801580401b21f372dbc0125001f003201580125b61f
2c1f341f2a25b80801b21f5537b80111402a07f00790075b0742073b0723
0722071e071d071408120810080e080c080a080808060804080208000814
b8ffe0402b00000100140610000001000604000001000410000001001002
000001000200000001000002010802004a00b013034b024b5342014bb0c0
63004b6220b0f65323b8010a515ab005234201b0124b004b5442b0382b4b
b807ff52b0372b4bb007505b58b101018e59b0382bb00288b801005458b8
01ffb101018e851bb0124358b10100858d1bb900010119858d5959001816
763f183f123e113946443e113946443e113946443e113946443e11394660
443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b18
2b1db0964b5358b0aa1d59b0324b5358b0ff1d594bb08153205c58b9020f
020d4544b9020e020d45445958b90470020f455258b9020f04704459594b
b0e453205c58b90020020e4544b90027020e45445958b908420020455258
b9002008424459594bb8012553205c58b90026020f4544b90021020f4544
5958b90a0d0026455258b900260a0d4459594bb8040153205c58b1d82045
44b1202045445958b9250000d8455258b900d825004459594bb804015320
5c58b9015800264544b1262645445958b923200158455258b90158232044
59594bb02953205c58b11f1f4544b12d1f45445958b9010d001f455258b9
001f010d4459594bb02f53205c58b11f1f4544b1251f45445958b9013500
1f455258b9001f01354459594bb8030153205c58b11f1f4544b11f1f4544
5958b91428001f455258b9001f14284459592b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b01b331757e
c3456523456023456560234560b08b766818b080622020b17e7545652345
20b003266062636820b003266165b075236544b07e234420b131c3456523
4520b003266062636820b003266165b0c3236544b0312344b100c3455458
b1c3406544b23140314523614459b33f3c58414565234560234565602345
60b089766818b080622020b1583c4565234520b003266062636820b00326
6165b03c236544b058234420b13f414565234520b003266062636820b003
266165b041236544b03f2344b10041455458b141406544b23f403f452361
445945695342014b5058b108004259435c58b108004259b3020b0a124358
601b2159421610703eb0124358b93b21187e1bba040001a8000b2b59b00c
2342b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342b0
0f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342
002b2b2b2b2b2b2b2b00b01243584bb035514bb021535a58b1262645b040
614459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b737373737345b0
40614418004569444569447373737473737374737473742b2b2b2b2b2b2b
2b2b2b2b2b00737373737373737373737373737373737373737373737474
747474747474747474747474747474747474747575757374757575752b73
00004bb02a534bb036515a58b1070745b040604459004bb02e534bb03651
5a58b1030345b0406044b1090945b8ffc06044592b456944017400737373
2b4569442b012b435c58400a0006000702a006a00702b9ffc00274b31a1d
326fbd0277007f02770002ffc00277b22f3132b9ffc00277b322253240b8
0274b32f353240b80274b3282a3240b80274b21a2132b8ffc0b3371a1d32
b8ffc0b3251a1d32b8ffc040112d1a1d329025902d9037a025a02da03706
b8ffc0b6a61a1d321fa61fb8028eb22fa60300742b732b2b2b2b2b2b2b2b
742b737459002b2b435c58b9ffc002a1b21c1d32b9ffc002a0b21c1d322b
2b592b73012b2b2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b
2b2b2b2b2b2b73742b2b2b2b2b2b2b2b73732b2b2b2b2b2b732b732b2b2b
742b2b2b73737373732b73732b2b2b732b2b002b2b2b2b7374732b732b2b
2b2b752b2b2b2b2b2b2b2b752b2b2b2b2b732b2b2b2b7374752b2b737373
2b2b2b732b737374752b2b7374752b2b7374752b2b2b2b2b2b2b2b2b2b2b
2b7475002b2b2b4569442b00000000>
[9163 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 4350 54 <0001004affe604f205d3002c01d0403db911b81db628c62c040713071517
131715182b650565287406780d7428d90cd6230c590a550e55225923680c
661267216928672c771d861d96210c1223b8ffe0b31e1f3423b8ffe04065
191a3451225123c122c123047122712381228123e122e123062b0a2a0d24
222423390d34234b0a4b0d442243236a0d6523790d7a22890d8a22a60aa7
0da82213090a090d06220623190a190d16220722230a0d04011756184019
20346f18016f189f180218ba0265001bffc0400c1a391f1b011b2d140300
4801b8ffc040491a203430014001500160019001a001b001c0010801ee04
401a39100401042d2a0918efff17011740131734174b0727261a2e1f27a0
10b01002104b01ef11200030000200192dd253182b4e10f45d4b5358b100
4038594dedf45ded4e10f64dedf42b72ed003ffd712bf45d2be43ffd712b
f45d722be41217395d5d71722b2b435c58b90022ffe0b31b1d3e23b8ffd0
b31b1d3e23b8ffe3b2133922b8ffe0b2133923b8ffc9b2123922b8ffd040
0f12390d2012390a2012390a200f3922b8ffe8400e0c390d200d390a180d
390a1813392b2b2b2b2b2b2b2b2b2b2b2b2b59b1060243545840153a0a3a
0d352235234b0a490d43224623a60aa9220a005d593130005d71015d1325
161633323635342627262726272635343636332004170526262322070615
141716041616151406042320004a01201a9f878f913d4c34b9ee60877fef
a90114011707fed8137d7d81492f2c3801b0cf758cff00bffeeafed601dd
1c9188795134491b122e3b5679ae70c366f2ca0d716335223934252f666d
bd8b7edc6b010100>PBAAAA+Arial-BoldMT AddT42Char 
2 368 20 <000100a20000032605c00009005640096b027b028b02030204b80129b35f
050105b8025eb708090501000c0900bb015800020001025d400d0500041f
042004b0040404190aba01a701a000182b4e10f45d3c4df63cfd3c003f3c
3f3cf45ded393130005d212111060735362437330326fee79ad16e010230
e404239045ff24c98600>PBAAAA+Arial-BoldMT AddT42Char 
2 1916 25 <00020057ffe7042a05c00017002300bd403b6a0b750887089719a705a708
a90eaa13b90eb611bd13c011cf130d1505361144107a16b502d210d01407
bb00cf0002000401071812101b201b021bb8ffc0401e1216341ba60f0d1f
212f2102214012163421a63f09014009d009ff090309b8014fb3af010101
b8012140221f042f0402044012163404a6150501d800771ed84f0c010c1a
2518d8121924d3c2182b4e10f44ded4e10f6714dedf4ed003ffd2b71f45d
f65d71ed2b713fed2b7101111239001112395d3130015d005d0105262623
220607363332121514002322001110003332160114163332363534262322
06040ffef00a5443597b10699cb0fbfef8cfdefee2012aeea7dbfda17e51
4e687054517004531e5450a0fd7cfef4d4e1fef00159018901930164bbfc
e989957a8b8f857f>PBAAAA+Arial-BoldMT AddT42Char 
2 1546 24 <0001005bffe7043505a6001d01104029080e200c371245124919990d9e0e
9712da0e0912111312211123128512050004010d0a0c0c0d121111b802a0
40160e0d140e0e0d120a1420013001400103500190010201b80156b51004
20040204b8ffc0b712163404a61b0d0cb8025a400d1f0a2f0a020a401216
340aa614b8ffc0400b1416342014301440140314b801ab401411111f102f
10022f103f104f1003104012163410b802a040130f0f0e040f10e007d8d0
1701401701171a1f0eb8012140120d7701bcd0000140009f00af00030019
1ed3b9014700182b4e10f45d714dedf4e44e10f65d714dedf43c003f3c10
fd2b5d713c10f65d2bfd2b71e43ffd2b71e45d7111123987052e2b0e7d10
c401113900111239111239313001715d1325161633323635342623220727
132111210736333200151407062322245b01180c764d587a79617960e490
02e7fdee2c5e62bb0104698ffecbff0001791d5f6f8f9087876b2102fbfe
f9f92ffef0d9b58ec2da>PBAAAA+Arial-BoldMT AddT42Char 
2 1264 23 <000200260000044405c0000a000d00df40390c200d39090c190c2b0c530c
6b0ce20c06ed0d01060416042504280d480d5b0da70db70dc60d09010208
000c060d07050a0b0d07000c0c0d0db801ae401a03041403030403020c04
0d030d02040a0007400dc00dd00d030dbb01280008000201b4b600040400
0c0c00b80158b4058f0a010ab80102401210079f07bf0703071a0f3f027f
020202190eba014c014800182b4e10e47110f65d4df45d3cfd3c003f3f10
f43cfd5d3c0111123912393900111239123987052e2b047d10c40f0f0fb1
0602435458400b2d0c3d0c4d0ccd0cdd0c05005d593130015d5d005d2b21
11213501331133152311011101027efda8027cecb6b6fef0feaf0127f603
a3fc5ef7fed9021e01f5fe0b>PBAAAA+Arial-BoldMT AddT42Char 
2 920 22 <0001004dffe7041b05c0002900d940328715c915027b1c8b1c02a603a905
a714b603ba05b614da18dd19081614018d168d1702210a0d000401171316
211f0d100c0ab80124400c4f0d01400d8f0d020d0d0116b80102400f1f13
2f1302134012163413a61b0501b80156b5100420040204b8ffc040321216
3404a6270db00cc00c020c0c1610d87f1f8f1f9f1faf1fbf1f051fe007d8
4f2401241a2b16d8177701d800192ad3c2182b4e10f44dedf4ed4e10f671
4dedf45ded11392f5d003ffd2b71e43ffd2b71e411392f5d71ed01111239
1139001112391112391112395d313001715d5d005d132516163332363534
2623220737163635342623220607253e0233321716151407161615140023
22244d01100d725157777252364b1f7278584948660bfefd1b6dc379cf7d
67d37e97fee6d2c7fefa018521686e84706a7c15e50369574a5864602c85
9f5b846c88c1731bbc85c1fef0e5>PBAAAA+Arial-BoldMT AddT42Char 
2 498 21 <000100330000040c05c0001d013f405fb518b61ab91bca04c718d018d019
d01a08431b431c431d56199b049518aa04a61c08061a20002806371a4804
43184319431a0824182419241a03162604560488189c1b9c1c9c1daa1caa
1d0812001d101d201d311d761d841d901dd61d081db8ffc040161415341d
02100c0f1d10002000022000300040000300b8ffc0b312163400b802a1b3
02010c0fb8015640231f0c2f0c020c401216340ca6130509d81616014f00
01001a1f0fd8107702191ed3c2182b4e10f44df4ed4e10f6713c3c4d10ed
003ffd2b71e43f3cfd2b5d713c1112390111332b5d435c58b9001dffc0b2
11391db8ffc0b20f391db8ffc0400e10390408103905081139040811392b
2b2b2b2b2b59b10602435458400b091b191b021b13010413000011123911
12395d593130015d4b5158bd001bffe0001cffe0001dffe0383838590171
5d5d5d011121361237363736353426232206072536243332161514060706
040607040cfc2710a0ecbe2b3a6559586808fee8190108c6d9f8474d33fe
f647160105fefb940109dbb13f57555e656a7b1ce8caeaae63b36241f450
2600>PBAAAA+Arial-BoldMT AddT42Char 
2 108 19 <00020056ffe7040e05c0000e00200093404b780a880aa701aa07aa09a70e
b709c8090856115916591a561f67116816681a671f08390239063609360d
490249064509460da709cb02c906c409c40dd902db06d409d40d11101820
180218b8ffc0402512163418a6080d1f0f2f0f020f401216340fa600051d
d84f0401041a2214d80b1921d3c2182b4e10f44ded4e10f6714ded003fed
2b713fed2b713130015d005d5d0132171611100706232200111037361722
060706111016163332363736111026260232d5788f9077d5d6fefa9077d5
3350161d344f333350161d344f05c098b4fe5ffe60b696014901a6019eb6
96e941546dfefefefec14041546c01020102c141>PBAAAA+Arial-BoldMT AddT42Char 
2 2826 28 <00020041ffe6041405c00017002300d040583b114b11650b7a088908a905
a908a60ea613b500b903b50eb811b413c500ca11c013113413560b590d5f
115213601306190577169917dd10df14056813010004010718121f1b2f1b
021b401216341ba60f05102120210221b8ffc0401012163421a63009014f
09df09f0090309b8014fb3a0010101b80121b5100420040204b8ffc0401b
12163404a6150d18d84f1201121a2501d800771ed80c1924d3c2182b4e10
f44dedf4ed4e10f6714ded003ffd2b71f45df65d71ed2b713fed2b710111
123900111239313001715d00715d13251616333236370623220235340033
32001110002322260134262322061514163332365d01100a5445577a116a
9fadfb0109cddf011efed6efacd4025e7d524e677054516f01531e5350a0
fc7b010bd6df0111fea7fe75fe6efe9cb7031c88967b8c8e8580>PBAAAA+Arial-BoldMT AddT42Char 
2 2412 27 <00030053ffe6041705c0001800240030010db530081d1f3426b8fff8406c
1d1f34c711c713d705d707047510761484100326002a0c36003b0c46004c
0c6e0463086711681577278727970d9818a40da918a91aa61ea727a62ca9
30b91ab71e17771386138614872704970c010c970001001c2e980c010c2b
099700010025032e401216343f2e4f2e022eba028e001cffc04010161834
701c801c02a01c011c1c061228b8ffc04009121634302840280228b8028e
400d120d3f224f2202224012163422b8028e401a06051fd809772bd84f0f
010f1a3219d8037725d8161931d3c2182b4e10f44dedf4ed4e10f6714ded
f4ed003fed2b5d3ffd5d2b1011392f5d712bed5d2b011112395d1112395d
001112395d395d313001715d00715d2b2b01262635343633321615140607
161615140423222726353436131416333236353426232206031416333236
35342623220601486d63e5d3d1e76a607a7ffefdd7c8859d76b95f4f5060
5f4e51601a775957727459676503172ea160a4d6d6a4669f2a31bc7bcbfe
697cd877c70151545e5f544f5f60fd3d74827d76677d8e00>PBAAAA+Arial-BoldMT AddT42Char 
2 2224 26 <000100570000041805a6000b0086b90004ffe040310f11340a0b1a0b3a04
380a4805560baa0bbe0bcd0bd90b0a210b010b0307001f0b2f0b022f0b3f
0b4f0b030b401216340bba02a0000301acb70202010407080c08b80158b3
2f070107b80260400e024f0301031a0d0100190cd3c2182b4e10f43c10f6
713c4df45dfd003f3c3f3c10edfd2b5d713c011112395d3130015d2b1311
211506020217211212375703c177f68101fef107edc604a10105cc75fe4a
fe13c201300278f9>PBAAAA+Arial-BoldMT AddT42Char 
2 0 0 <00020100000005000500000300070042b40201fe0607b8023f4013000504
fe03000a0704fe010019080605fe0203bc0126000901b0011800182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>PBAAAA+Arial-BoldMT AddT42Char 
PBAAAA+Arial-BoldMT /CharStrings get begin
/g54 54 def
/g20 20 def
/g25 25 def
/g24 24 def
/g23 23 def
/g22 22 def
/g21 21 def
/g19 19 def
/g28 28 def
/g27 27 def
/g26 26 def
end
PBAAAA+Arial-BoldMT /Encoding get
dup 32 /g54 put
dup 33 /g20 put
dup 34 /g25 put
dup 35 /g24 put
dup 36 /g23 put
dup 37 /g22 put
dup 38 /g21 put
dup 39 /g19 put
dup 40 /g28 put
dup 41 /g27 put
dup 42 /g26 put
pop
end
%ADOEndSubsetFont
/MIXTJF+Arial-BoldMT /PBAAAA+Arial-BoldMT findfont ct_VMDictPut
/MIXTJF+Arial-BoldMT*1 
[32{/.notdef}rp /g54 /g20 /g25 /g24 /g23 /g22 /g21 
/g19 /g28 /g27 /g26 213{/.notdef}rp]
MIXTJF+Arial-BoldMT nf
MIXTJF+Arial-BoldMT*1 [7.98 0 0 -7.98 0 0 ]msf
115.56 47.0997 mo
( !)
[5.34026 0 ]xsh
342.36 164.58 mo
( ")
[5.34024 0 ]xsh
342.36 47.0997 mo
( #)
[5.34024 0 ]xsh
285.66 46.98 mo
( $)
[5.34024 0 ]xsh
229.68 46.98 mo
( %)
[5.34026 0 ]xsh
172.98 46.98 mo
( &)
[5.34026 0 ]xsh
114.42 163.98 mo
( !' \()
[5.33234 4.4465 48.0588 5.34024 0 ]xsh
228.961 164.58 mo
( \))
[5.34026 0 ]xsh
285.661 163.98 mo
( *)
[5.34024 0 ]xsh
92.16 132.72 mo
94.98 132.72 li
94.98 72.66 li
92.16 72.66 li
cp
.309636 .246586 .25098 3.0518e-5 cmyk
f
.24 lw
0 lc
0 lj
2 ml
94.98 72.9 mo
94.98 132.48 li
.750179 .679652 .670191 .901488 cmyk
@
92.16 72.9 mo
92.16 132.48 li
@
372.78 132.36 mo
375.6 132.36 li
375.6 72.6 li
372.78 72.6 li
cp
.309636 .246586 .25098 3.0518e-5 cmyk
f
375.6 72.9 mo
375.6 132.06 li
.750179 .679652 .670191 .901488 cmyk
@
372.78 72.9 mo
372.78 132.06 li
@
226.86 136.86 mo
237.42 136.86 li
237.42 132.3 li
226.86 132.3 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
1 lc
1 lj
10 ml
226.86 132.3 mo
237.42 132.3 li
237.42 136.86 li
226.86 136.86 li
cp
@
235.98 132.48 mo
237.42 132.48 li
237.42 136.74 li
235.98 136.74 li
cp
237.42 132.48 mo
cp
226.86 132.48 mo
228.3 132.48 mo
226.86 132.48 li
226.86 136.74 li
228.3 136.74 li
cp
ef
237.42 132.48 mo
237.42 136.74 li
235.98 136.74 li
235.98 135.3 li
.750179 .679652 .670191 .901488 cmyk
@
235.98 133.86 mo
235.98 132.48 li
237.42 132.48 li
@
226.86 132.48 mo
226.86 136.74 li
228.3 136.74 li
228.3 135.3 li
@
228.3 133.86 mo
228.3 132.48 li
226.86 132.48 li
@
235.98 135.3 mo
235.44 135.3 li
235.44 133.86 li
235.98 133.86 li
cp
228.3 135.3 mo
228.3 135.3 mo
228.84 135.3 li
228.84 133.86 li
228.3 133.86 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
235.98 135.3 mo
235.44 135.3 li
235.44 133.86 li
235.98 133.86 li
.750179 .679652 .670191 .901488 cmyk
@
228.3 135.3 mo
228.84 135.3 li
228.84 133.86 li
228.3 133.86 li
@
237.42 132.48 mo
237.42 136.74 li
@
226.86 132.48 mo
226.86 136.74 li
@
228.3 136.74 mo
228.3 140.88 231.6 144.3 235.8 144.42 cv
@
234.36 144.36 mo
234.6 136.68 li
235.98 136.74 li
235.8 144.42 li
234.36 144.36 li
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
234.36 144.36 mo
234.6 136.68 li
235.98 136.74 li
235.8 144.42 li
234.36 144.36 li
cp
.750179 .679652 .670191 .901488 cmyk
@
372.66 114.84 mo
375.78 114.84 li
375.78 90.72 li
372.66 90.72 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
372.66 114.84 mo
375.78 114.84 li
375.78 90.72 li
372.66 90.72 li
cp
@
375.78 114.84 mo
cp
@
375.6 90.72 mo
372.78 90.72 li
372.78 92.16 li
375.6 92.16 li
cp
375.6 114.84 mo
375.6 114.84 mo
372.78 114.84 li
372.78 113.4 li
375.6 113.4 li
cp
ef
375.6 90.72 mo
372.78 90.72 li
372.78 92.16 li
374.22 92.16 li
.750179 .679652 .670191 .901488 cmyk
@
375.6 92.16 mo
375.6 90.72 li
@
375.6 114.84 mo
372.78 114.84 li
372.78 113.4 li
374.22 113.4 li
@
375.6 113.4 mo
375.6 114.84 li
@
375.6 92.16 mo
374.22 92.16 li
374.22 92.7 li
375.6 92.7 li
cp
374.22 92.16 mo
cp
374.22 113.4 mo
375.6 113.4 mo
374.22 113.4 li
374.22 112.86 li
375.6 112.86 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
374.22 92.16 mo
374.22 92.7 li
375.6 92.7 li
375.6 92.16 li
.750179 .679652 .670191 .901488 cmyk
@
374.22 113.4 mo
374.22 112.86 li
375.6 112.86 li
375.6 113.4 li
@
375.6 90.72 mo
372.78 90.72 li
@
375.6 114.84 mo
372.78 114.84 li
@
372.78 102.78 mo
366.9 102.78 362.16 107.52 362.16 113.4 cv
@
372.78 102.78 mo
366.9 102.78 362.16 98.04 362.16 92.16 cv
@
362.16 113.4 mo
372.78 113.4 li
372.78 111.96 li
362.16 111.96 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
362.16 113.4 mo
372.78 113.4 li
372.78 111.96 li
362.16 111.96 li
cp
.750179 .679652 .670191 .901488 cmyk
@
362.16 93.54 mo
372.78 93.54 li
372.78 92.16 li
362.16 92.16 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
362.16 93.54 mo
372.78 93.54 li
372.78 92.16 li
362.16 92.16 li
cp
.750179 .679652 .670191 .901488 cmyk
@
113.52 136.86 mo
124.02 136.86 li
124.02 132.3 li
113.52 132.3 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
113.52 132.3 mo
124.02 132.3 li
124.02 136.86 li
113.52 136.86 li
cp
@
122.64 132.48 mo
124.02 132.48 li
124.02 136.74 li
122.64 136.74 li
cp
124.02 132.48 mo
cp
113.52 132.48 mo
114.9 132.48 mo
113.52 132.48 li
113.52 136.74 li
114.9 136.74 li
cp
ef
124.02 132.48 mo
124.02 136.74 li
122.64 136.74 li
122.64 135.3 li
.750179 .679652 .670191 .901488 cmyk
@
122.64 133.86 mo
122.64 132.48 li
124.02 132.48 li
@
113.52 132.48 mo
113.52 136.74 li
114.9 136.74 li
114.9 135.3 li
@
114.9 133.86 mo
114.9 132.48 li
113.52 132.48 li
@
122.64 135.3 mo
122.04 135.3 li
122.04 133.86 li
122.64 133.86 li
cp
114.9 135.3 mo
114.9 135.3 mo
115.5 135.3 li
115.5 133.86 li
114.9 133.86 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
122.64 135.3 mo
122.04 135.3 li
122.04 133.86 li
122.64 133.86 li
.750179 .679652 .670191 .901488 cmyk
@
114.9 135.3 mo
115.5 135.3 li
115.5 133.86 li
114.9 133.86 li
@
124.02 132.48 mo
124.02 136.74 li
@
113.52 132.48 mo
113.52 136.74 li
@
114.9 136.74 mo
114.9 140.88 118.2 144.3 122.4 144.42 cv
@
120.96 144.36 mo
121.2 136.68 li
122.64 136.74 li
122.4 144.42 li
120.96 144.36 li
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
120.96 144.36 mo
121.2 136.68 li
122.64 136.74 li
122.4 144.42 li
120.96 144.36 li
cp
.750179 .679652 .670191 .901488 cmyk
@
91.98 114.84 mo
95.16 114.84 li
95.16 90.72 li
91.98 90.72 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
95.16 90.72 mo
91.98 90.72 li
91.98 114.84 li
95.16 114.84 li
cp
@
91.98 90.72 mo
cp
@
92.16 114.84 mo
94.98 114.84 li
94.98 113.4 li
92.16 113.4 li
cp
92.16 90.72 mo
92.16 90.72 mo
94.98 90.72 li
94.98 92.16 li
92.16 92.16 li
cp
ef
92.16 114.84 mo
94.98 114.84 li
94.98 113.4 li
93.54 113.4 li
.750179 .679652 .670191 .901488 cmyk
@
92.16 113.4 mo
92.16 114.84 li
@
92.16 90.72 mo
94.98 90.72 li
94.98 92.16 li
93.54 92.16 li
@
92.16 92.16 mo
92.16 90.72 li
@
92.16 113.4 mo
93.54 113.4 li
93.54 112.86 li
92.16 112.86 li
cp
93.54 113.4 mo
cp
93.54 92.16 mo
92.16 92.16 mo
93.54 92.16 li
93.54 92.7 li
92.16 92.7 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
93.54 113.4 mo
93.54 112.86 li
92.16 112.86 li
92.16 113.4 li
.750179 .679652 .670191 .901488 cmyk
@
93.54 92.16 mo
93.54 92.7 li
92.16 92.7 li
92.16 92.16 li
@
92.16 114.84 mo
94.98 114.84 li
@
92.16 90.72 mo
94.98 90.72 li
@
94.98 102.78 mo
100.86 102.78 105.6 98.04 105.6 92.16 cv
@
94.98 102.78 mo
100.86 102.78 105.6 107.52 105.6 113.4 cv
@
94.98 93.54 mo
105.6 93.54 li
105.6 92.16 li
94.98 92.16 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
105.6 92.16 mo
94.98 92.16 li
94.98 93.54 li
105.6 93.54 li
cp
.750179 .679652 .670191 .901488 cmyk
@
94.98 113.4 mo
105.6 113.4 li
105.6 111.96 li
94.98 111.96 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
105.6 111.96 mo
94.98 111.96 li
94.98 113.4 li
105.6 113.4 li
cp
.750179 .679652 .670191 .901488 cmyk
@
343.74 73.02 mo
354.24 73.02 li
354.24 68.46 li
343.74 68.46 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
354.24 73.02 mo
343.74 73.02 li
343.74 68.46 li
354.24 68.46 li
cp
@
345.12 72.9 mo
343.74 72.9 li
343.74 68.64 li
345.12 68.64 li
cp
343.74 72.9 mo
cp
354.24 72.9 mo
352.86 72.9 mo
354.24 72.9 li
354.24 68.64 li
352.86 68.64 li
cp
ef
343.74 72.9 mo
343.74 68.64 li
345.12 68.64 li
345.12 70.02 li
.750179 .679652 .670191 .901488 cmyk
@
345.12 71.46 mo
345.12 72.9 li
343.74 72.9 li
@
354.24 72.9 mo
354.24 68.64 li
352.86 68.64 li
352.86 70.02 li
@
352.86 71.46 mo
352.86 72.9 li
354.24 72.9 li
@
345.12 70.02 mo
345.72 70.02 li
345.72 71.46 li
345.12 71.46 li
cp
352.86 70.02 mo
352.86 70.02 mo
352.26 70.02 li
352.26 71.46 li
352.86 71.46 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
345.12 70.02 mo
345.72 70.02 li
345.72 71.46 li
345.12 71.46 li
.750179 .679652 .670191 .901488 cmyk
@
352.86 70.02 mo
352.26 70.02 li
352.26 71.46 li
352.86 71.46 li
@
343.74 72.9 mo
343.74 68.64 li
@
354.24 72.9 mo
354.24 68.64 li
@
352.86 68.64 mo
352.86 64.44 349.56 61.02 345.36 60.9 cv
@
346.8 60.96 mo
346.56 68.7 li
345.12 68.64 li
345.36 60.9 li
346.8 60.96 li
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
346.8 60.96 mo
346.56 68.7 li
345.12 68.64 li
345.36 60.9 li
346.8 60.96 li
cp
.750179 .679652 .670191 .901488 cmyk
@
170.16 136.8 mo
180.72 136.8 li
180.72 132.24 li
170.16 132.24 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
170.16 132.24 mo
180.72 132.24 li
180.72 136.8 li
170.16 136.8 li
cp
@
179.34 132.36 mo
180.72 132.36 li
180.72 136.62 li
179.34 136.62 li
cp
180.72 132.36 mo
cp
170.16 132.36 mo
171.6 132.36 mo
170.16 132.36 li
170.16 136.62 li
171.6 136.62 li
cp
ef
180.72 132.36 mo
180.72 136.62 li
179.34 136.62 li
179.34 135.24 li
.750179 .679652 .670191 .901488 cmyk
@
179.34 133.8 mo
179.34 132.36 li
180.72 132.36 li
@
170.16 132.36 mo
170.16 136.62 li
171.6 136.62 li
171.6 135.24 li
@
171.6 133.8 mo
171.6 132.36 li
170.16 132.36 li
@
179.34 135.24 mo
178.74 135.24 li
178.74 133.8 li
179.34 133.8 li
cp
171.6 135.24 mo
171.6 135.24 mo
172.2 135.24 li
172.2 133.8 li
171.6 133.8 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
179.34 135.24 mo
178.74 135.24 li
178.74 133.8 li
179.34 133.8 li
.750179 .679652 .670191 .901488 cmyk
@
171.6 135.24 mo
172.2 135.24 li
172.2 133.8 li
171.6 133.8 li
@
180.72 132.36 mo
180.72 136.62 li
@
170.16 132.36 mo
170.16 136.62 li
@
171.6 136.62 mo
171.6 140.82 174.9 144.24 179.1 144.36 cv
@
177.66 144.3 mo
177.9 136.62 li
179.34 136.62 li
179.1 144.36 li
177.66 144.3 li
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
177.66 144.3 mo
177.9 136.62 li
179.34 136.62 li
179.1 144.36 li
177.66 144.3 li
cp
.750179 .679652 .670191 .901488 cmyk
@
230.34 73.02 mo
240.9 73.02 li
240.9 68.46 li
230.34 68.46 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
240.9 73.02 mo
230.34 73.02 li
230.34 68.46 li
240.9 68.46 li
cp
@
231.78 72.9 mo
230.34 72.9 li
230.34 68.64 li
231.78 68.64 li
cp
230.34 72.9 mo
cp
240.9 72.9 mo
239.46 72.9 mo
240.9 72.9 li
240.9 68.64 li
239.46 68.64 li
cp
ef
230.34 72.9 mo
230.34 68.64 li
231.78 68.64 li
231.78 70.02 li
.750179 .679652 .670191 .901488 cmyk
@
231.78 71.46 mo
231.78 72.9 li
230.34 72.9 li
@
240.9 72.9 mo
240.9 68.64 li
239.46 68.64 li
239.46 70.02 li
@
239.46 71.46 mo
239.46 72.9 li
240.9 72.9 li
@
231.78 70.02 mo
232.32 70.02 li
232.32 71.46 li
231.78 71.46 li
cp
239.46 70.02 mo
239.46 70.02 mo
238.92 70.02 li
238.92 71.46 li
239.46 71.46 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
231.78 70.02 mo
232.32 70.02 li
232.32 71.46 li
231.78 71.46 li
.750179 .679652 .670191 .901488 cmyk
@
239.46 70.02 mo
238.92 70.02 li
238.92 71.46 li
239.46 71.46 li
@
230.34 72.9 mo
230.34 68.64 li
@
240.9 72.9 mo
240.9 68.64 li
@
239.46 68.64 mo
239.46 64.44 236.16 61.02 231.96 60.9 cv
@
233.4 60.96 mo
233.16 68.7 li
231.78 68.64 li
231.96 60.9 li
233.4 60.96 li
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
233.4 60.96 mo
233.16 68.7 li
231.78 68.64 li
231.96 60.9 li
233.4 60.96 li
cp
.750179 .679652 .670191 .901488 cmyk
@
283.56 136.8 mo
294.12 136.8 li
294.12 132.24 li
283.56 132.24 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
283.56 132.24 mo
294.12 132.24 li
294.12 136.8 li
283.56 136.8 li
cp
@
292.68 132.36 mo
294.12 132.36 li
294.12 136.62 li
292.68 136.62 li
cp
294.12 132.36 mo
cp
283.56 132.36 mo
285 132.36 mo
283.56 132.36 li
283.56 136.62 li
285 136.62 li
cp
ef
294.12 132.36 mo
294.12 136.62 li
292.68 136.62 li
292.68 135.24 li
.750179 .679652 .670191 .901488 cmyk
@
292.68 133.8 mo
292.68 132.36 li
294.12 132.36 li
@
283.56 132.36 mo
283.56 136.62 li
285 136.62 li
285 135.24 li
@
285 133.8 mo
285 132.36 li
283.56 132.36 li
@
292.68 135.24 mo
292.14 135.24 li
292.14 133.8 li
292.68 133.8 li
cp
285 135.24 mo
285 135.24 mo
285.54 135.24 li
285.54 133.8 li
285 133.8 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
292.68 135.24 mo
292.14 135.24 li
292.14 133.8 li
292.68 133.8 li
.750179 .679652 .670191 .901488 cmyk
@
285 135.24 mo
285.54 135.24 li
285.54 133.8 li
285 133.8 li
@
294.12 132.36 mo
294.12 136.62 li
@
283.56 132.36 mo
283.56 136.62 li
@
285 136.62 mo
285 140.82 288.3 144.24 292.5 144.36 cv
@
291.06 144.3 mo
291.3 136.62 li
292.68 136.62 li
292.5 144.36 li
291.06 144.3 li
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
291.06 144.3 mo
291.3 136.62 li
292.68 136.62 li
292.5 144.36 li
291.06 144.3 li
cp
.750179 .679652 .670191 .901488 cmyk
@
173.64 73.14 mo
184.2 73.14 li
184.2 68.58 li
173.64 68.58 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
184.2 73.14 mo
173.64 73.14 li
173.64 68.58 li
184.2 68.58 li
cp
@
175.08 72.96 mo
173.64 72.96 li
173.64 68.7 li
175.08 68.7 li
cp
173.64 72.96 mo
cp
184.2 72.96 mo
182.76 72.96 mo
184.2 72.96 li
184.2 68.7 li
182.76 68.7 li
cp
ef
173.64 72.96 mo
173.64 68.7 li
175.08 68.7 li
175.08 70.14 li
.750179 .679652 .670191 .901488 cmyk
@
175.08 71.58 mo
175.08 72.96 li
173.64 72.96 li
@
184.2 72.96 mo
184.2 68.7 li
182.76 68.7 li
182.76 70.14 li
@
182.76 71.58 mo
182.76 72.96 li
184.2 72.96 li
@
175.08 70.14 mo
175.62 70.14 li
175.62 71.58 li
175.08 71.58 li
cp
182.76 70.14 mo
182.76 70.14 mo
182.22 70.14 li
182.22 71.58 li
182.76 71.58 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
175.08 70.14 mo
175.62 70.14 li
175.62 71.58 li
175.08 71.58 li
.750179 .679652 .670191 .901488 cmyk
@
182.76 70.14 mo
182.22 70.14 li
182.22 71.58 li
182.76 71.58 li
@
173.64 72.96 mo
173.64 68.7 li
@
184.2 72.96 mo
184.2 68.7 li
@
182.76 68.7 mo
182.76 64.56 179.46 61.14 175.26 61.02 cv
@
176.7 61.08 mo
176.46 68.76 li
175.08 68.7 li
175.26 61.02 li
176.7 61.08 li
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
176.7 61.08 mo
176.46 68.76 li
175.08 68.7 li
175.26 61.02 li
176.7 61.08 li
cp
.750179 .679652 .670191 .901488 cmyk
@
287.04 73.14 mo
297.6 73.14 li
297.6 68.58 li
287.04 68.58 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
297.6 73.14 mo
287.04 73.14 li
287.04 68.58 li
297.6 68.58 li
cp
@
288.42 72.96 mo
287.04 72.96 li
287.04 68.7 li
288.42 68.7 li
cp
287.04 72.96 mo
cp
297.6 72.96 mo
296.16 72.96 mo
297.6 72.96 li
297.6 68.7 li
296.16 68.7 li
cp
ef
287.04 72.96 mo
287.04 68.7 li
288.42 68.7 li
288.42 70.14 li
.750179 .679652 .670191 .901488 cmyk
@
288.42 71.58 mo
288.42 72.96 li
287.04 72.96 li
@
297.6 72.96 mo
297.6 68.7 li
296.16 68.7 li
296.16 70.14 li
@
296.16 71.58 mo
296.16 72.96 li
297.6 72.96 li
@
288.42 70.14 mo
289.02 70.14 li
289.02 71.58 li
288.42 71.58 li
cp
296.16 70.14 mo
296.16 70.14 mo
295.56 70.14 li
295.56 71.58 li
296.16 71.58 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
288.42 70.14 mo
289.02 70.14 li
289.02 71.58 li
288.42 71.58 li
.750179 .679652 .670191 .901488 cmyk
@
296.16 70.14 mo
295.56 70.14 li
295.56 71.58 li
296.16 71.58 li
@
287.04 72.96 mo
287.04 68.7 li
@
297.6 72.96 mo
297.6 68.7 li
@
296.16 68.7 mo
296.16 64.56 292.86 61.14 288.66 61.02 cv
@
290.1 61.08 mo
289.86 68.76 li
288.42 68.7 li
288.66 61.02 li
290.1 61.08 li
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
290.1 61.08 mo
289.86 68.76 li
288.42 68.7 li
288.66 61.02 li
290.1 61.08 li
cp
.750179 .679652 .670191 .901488 cmyk
@
134.22 85.32 mo
134.22 83.64 135.66 82.2 137.34 82.2 cv
139.08 82.2 140.46 83.64 140.46 85.32 cv
140.46 87.06 139.08 88.44 137.34 88.44 cv
135.66 88.44 134.22 87.06 134.22 85.32 cv
.789578 .53463 3.0518e-5 3.0518e-5 cmyk
ef
134.22 85.32 mo
134.22 83.64 135.66 82.2 137.34 82.2 cv
139.08 82.2 140.46 83.64 140.46 85.32 cv
140.46 87.06 139.08 88.44 137.34 88.44 cv
135.66 88.44 134.22 87.06 134.22 85.32 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
140.04 100.92 mo
141.6 100.92 142.86 99.66 142.86 98.1 cv
142.86 92.52 li
142.86 90.96 141.6 89.7 140.04 89.7 cv
134.7 89.7 li
133.08 89.7 131.82 90.96 131.82 92.52 cv
131.82 98.1 li
131.82 99.66 133.08 100.92 134.7 100.92 cv
140.04 100.92 li
.874144 .544152 3.0518e-5 .000335698 cmyk
ef
140.04 100.92 mo
141.6 100.92 142.86 99.66 142.86 98.1 cv
142.86 92.52 li
142.86 90.96 141.6 89.7 140.04 89.7 cv
134.7 89.7 li
133.08 89.7 131.82 90.96 131.82 92.52 cv
131.82 98.1 li
131.82 99.66 133.08 100.92 134.7 100.92 cv
140.04 100.92 li
cp
.750179 .679652 .670191 .901488 cmyk
@
133.74 113.4 mo
141.42 113.4 li
141.42 100.92 li
133.74 100.92 li
cp
.874144 .544152 3.0518e-5 .000335698 cmyk
f
133.74 113.4 mo
141.42 113.4 li
141.42 100.92 li
133.74 100.92 li
cp
.750179 .679652 .670191 .901488 cmyk
@
324.48 88.2 mo
324.48 86.46 325.86 85.08 327.6 85.08 cv
329.28 85.08 330.72 86.46 330.72 88.2 cv
330.72 89.88 329.28 91.32 327.6 91.32 cv
325.86 91.32 324.48 89.88 324.48 88.2 cv
.789578 .53463 3.0518e-5 3.0518e-5 cmyk
ef
324.48 88.2 mo
324.48 86.46 325.86 85.08 327.6 85.08 cv
329.28 85.08 330.72 86.46 330.72 88.2 cv
330.72 89.88 329.28 91.32 327.6 91.32 cv
325.86 91.32 324.48 89.88 324.48 88.2 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
330.24 103.74 mo
331.8 103.74 333.12 102.48 333.12 100.92 cv
333.12 95.4 li
333.12 93.84 331.8 92.52 330.24 92.52 cv
324.9 92.52 li
323.34 92.52 322.08 93.84 322.08 95.4 cv
322.08 100.92 li
322.08 102.48 323.34 103.74 324.9 103.74 cv
330.24 103.74 li
.874144 .544152 3.0518e-5 .000335698 cmyk
ef
330.24 103.74 mo
331.8 103.74 333.12 102.48 333.12 100.92 cv
333.12 95.4 li
333.12 93.84 331.8 92.52 330.24 92.52 cv
324.9 92.52 li
323.34 92.52 322.08 93.84 322.08 95.4 cv
322.08 100.92 li
322.08 102.48 323.34 103.74 324.9 103.74 cv
330.24 103.74 li
cp
.750179 .679652 .670191 .901488 cmyk
@
324 116.22 mo
331.68 116.22 li
331.68 103.74 li
324 103.74 li
cp
.874144 .544152 3.0518e-5 .000335698 cmyk
f
324 116.22 mo
331.68 116.22 li
331.68 103.74 li
324 103.74 li
cp
.750179 .679652 .670191 .901488 cmyk
@
155.16 99.24 mo
150.24 90.72 li
145.38 99.24 li
155.16 99.24 li
.00271611 .258976 .994842 3.0518e-5 cmyk
ef
155.16 99.24 mo
150.24 90.72 li
145.38 99.24 li
155.16 99.24 li
cp
.750179 .679652 .670191 .901488 cmyk
@
123.06 99.24 mo
124.74 102.06 li
126.48 99.24 li
129.9 99.24 li
128.16 96.42 li
129.9 93.54 li
126.48 93.54 li
124.74 90.72 li
123.06 93.54 li
119.58 93.54 li
121.32 96.42 li
119.58 99.24 li
123.06 99.24 li
3.0518e-5 .990631 1 .000396735 cmyk
ef
123.06 99.24 mo
124.74 102.06 li
126.48 99.24 li
129.9 99.24 li
128.16 96.42 li
129.9 93.54 li
126.48 93.54 li
124.74 90.72 li
123.06 93.54 li
119.58 93.54 li
121.32 96.42 li
119.58 99.24 li
123.06 99.24 li
cp
.750179 .679652 .670191 .901488 cmyk
@
345.06 102.06 mo
340.2 93.54 li
335.28 102.06 li
345.06 102.06 li
.00271611 .258976 .994842 3.0518e-5 cmyk
ef
345.06 102.06 mo
340.2 93.54 li
335.28 102.06 li
345.06 102.06 li
cp
.750179 .679652 .670191 .901488 cmyk
@
312.96 102.06 mo
314.64 104.88 li
316.38 102.06 li
319.8 102.06 li
318.12 99.24 li
319.8 96.42 li
316.38 96.42 li
314.64 93.54 li
312.96 96.42 li
309.54 96.42 li
311.22 99.24 li
309.54 102.06 li
312.96 102.06 li
3.0518e-5 .990631 1 .000396735 cmyk
ef
312.96 102.06 mo
314.64 104.88 li
316.38 102.06 li
319.8 102.06 li
318.12 99.24 li
319.8 96.42 li
316.38 96.42 li
314.64 93.54 li
312.96 96.42 li
309.54 96.42 li
311.22 99.24 li
309.54 102.06 li
312.96 102.06 li
cp
.750179 .679652 .670191 .901488 cmyk
@
gsave
118.26 10.68 mo
118.26 8.34 116.4 6.47998 114.12 6.47998 cv
111.84 6.47998 109.98 8.34 109.98 10.68 cv
109.98 12.96 111.84 14.82 114.12 14.82 cv
116.4 14.82 118.26 12.96 118.26 10.68 cv
eclp
gsave
123 6.41998 mo
123 -.780029 117.12 -6.66 109.92 -6.66 cv
102.66 -6.66 96.84 -.780029 96.84 6.41998 cv
96.84 13.62 102.66 19.5 109.92 19.5 cv
117.12 19.5 123 13.62 123 6.41998 cv
eclp
109.8 15.18 mo
118.92 15.18 li
118.92 6.29999 li
109.8 6.29999 li
cp
gsave
/14 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 176 
/Lookup <~
GlZY#IfSL/K`L?;M?*#DNr\_NPlURZRK3<eT)elkUB(;oW;uquXT8A$YlOe([/g4,\,cO/]E%s3^]=B7
_Z9]:`W6#=aT2>@I/r7,JH4g4L&gK=MZE,ERfNEfTE+ulU]CDpW;uquXT8A$YlOe([K-=-\H)X0]E%s3
^]=B7`W6#=aT2>@KE108L&gH<L]H`@N<&DIOoY+SQ2pa]SH/ZiTE+ulV#^MqW;uquXT8A$Z2jn)[K-=-
\H)X0]`A'4^]=B7_Z9]:`W6#=Mu`>IO9"kPPlUOYR/m0cT)elkU&b2nV?$VrWrW/"Y5nS&ZN1"*[K-=-
\cDa1]`A'4_#XK8_uTf;`rQ,>aT2>@NWAPKNr\_NOoY(RQiR!`SH/ZiTE+ulVuZhtX8r8#YQ4\'ZiL++
[fHF.\cDa1^&\05_>sT9_uTf;`rQ,>aT2>@PQ:FXPlUOYUB(;oVZ?_sXoSJ%^]=B7_>sT9`W6#=a8l5?
aoMGAR/m0cS,iQhScJcjTE+ulUB(;oYQ4\'[/g4,[fHF.]`A'4_#XK8`rQ,>aoMGAT)elkU&b2nU]CDp
ZN1"*\H)X0^B"96_>sT9`;oo<`rQ,>aoMGAVZ?_sVuZhtYQ4\'[/g4,\,cO/])_j2_#XK8aoMGAb5hPB
WrW/"[K-=-\,cO/\cDa1]`A'4_>sT9`;oo<a8l5?aoMGAb5hPBX8r8#ZN1"*[/g4,]E%s3^&\05_#XK8
a8l5?b5hPBY5nS&YQ4\'`W6#=a8l5?ZiL++[/g4,^B"96_Z9]:aT2>@aoMGA\cDa1])_j2^&\05_Z9]:
^B"96_>sT9_uTf;a8l5?aT2>@aoMGA_Z9]:aoMGA`;oo<aoMGAaoMGAa8l5?aT2>@aT2>@aT2>@aoMGA
b5hPB~>
>>
/CSD add_res
/14 /CSD get_res idxcs
clp
[1 0 0 -1 91.86 170.1 ]ct
[9.12 0 0 8.88 17.94 154.92 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 19 
/M[19 0 0 -19 0 19 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~!!*-'"9eu7#RLhG$k3[W&.oNg'GVAd"W&!n)B0Y:*ZlL9+X/-V,pjuf.4Qi!/M8\10etOA+sd=K2E*TU
3]fGe5!M:u6:4.07Rp!.8P2Vn9MJ8X:f1+h<)lt#==?.$93GF\>:pp;%U<:G?XR:H@Uiq[4"L_NB4sPE
C,9W<Ci'D,DJr]0$;PP)E=R#1FELW-#RDr)GWZ=Y5'hR';LL>E&q5=T)D$CG4_AYaJqJ_3Knb@`Ll$Y4
M@)LYMi;=hNK0&e&WgC_M3=&t*/dUDJj9g+68Ojk<euThQBmk`5CtSA6't!,?AFu=M2@'cJq>&6K/$7H
F$l1IRV[J1M2?k4SKC.h%mln11gc\fIu0#=M4flL+FTrUU6J'@UnrQtM2@(G?!X<`6Z`o.?^dmKM2@(G
M2@(fW"CjSFebD)Wdfk^M2@(GM2@=UX/rG+I]ou4M2@(GM2@(GM#~>
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
grestore
grestore
.72 lw
118.26 10.68 mo
118.26 8.34 116.4 6.48001 114.12 6.48001 cv
111.84 6.48001 109.98 8.34 109.98 10.68 cv
109.98 12.96 111.84 14.82 114.12 14.82 cv
116.4 14.82 118.26 12.96 118.26 10.68 cv
cp
.878538 .2439 1 .131716 cmyk
@
216.6 12.78 mo
218.28 15.6 li
220.02 12.78 li
223.44 12.78 li
221.7 9.95999 li
223.44 7.07999 li
220.02 7.07999 li
218.28 4.25998 li
216.6 7.07999 li
213.12 7.07999 li
214.86 9.95999 li
213.12 12.78 li
216.6 12.78 li
3.0518e-5 .990631 1 .000396735 cmyk
ef
.24 lw
216.6 12.78 mo
218.28 15.6 li
220.02 12.78 li
223.44 12.78 li
221.7 9.95999 li
223.44 7.07999 li
220.02 7.07999 li
218.28 4.25998 li
216.6 7.07999 li
213.12 7.07999 li
214.86 9.95999 li
213.12 12.78 li
216.6 12.78 li
cp
.750179 .679652 .670191 .901488 cmyk
@
322.38 15.6 mo
317.52 7.07999 li
312.6 15.6 li
322.38 15.6 li
.00271611 .258976 .994842 3.0518e-5 cmyk
ef
322.38 15.6 mo
317.52 7.07999 li
312.6 15.6 li
322.38 15.6 li
cp
.750179 .679652 .670191 .901488 cmyk
@
.72 lw
322.08 98.16 mo
320.76 96.18 li
315.517 88.698 307.77 82.318 300.06 77.52 cv
297.24 75.78 li
@
296.34 79.02 mo
292.32 72.96 li
299.52 73.38 li
296.34 79.02 li
ef
292.32 72.96 mo
290.1 75.54 li
274.598 93.049 257.493 100.091 240.6 79.74 cv
238.86 77.52 li
@
236.64 80.04 mo
235.62 72.9 li
241.98 76.32 li
236.64 80.04 li
ef
235.62 72.9 mo
236.82 77.1 li
244.174 100.356 257.543 118.36 279.96 128.82 cv
283.56 130.38 li
@
283.92 127.08 mo
288.84 132.36 li
281.64 133.14 li
283.92 127.08 li
ef
288.84 132.36 mo
291.24 130.44 li
308.293 117.625 325.962 117.723 344.4 127.68 cv
347.34 129.36 li
@
348.36 126.18 mo
352.08 132.42 li
344.88 131.64 li
348.36 126.18 li
ef
352.08 132.42 mo
353.34 128.94 li
358.577 113.304 358.751 96.746 352.74 81.3 cv
351.42 78 li
@
348.84 80.1 mo
349.02 72.9 li
354.72 77.34 li
348.84 80.1 li
ef
133.68 107.52 mo
131.1 107.16 li
128.7 106.74 li
128.4 106.32 li
128.82 106.02 li
131.16 106.44 li
133.8 106.8 li
134.04 106.92 li
134.1 107.22 li
133.98 107.46 li
133.68 107.52 li
cp
125.16 105.9 mo
124.08 105.6 li
122.1 104.94 li
120.42 104.22 li
120.18 103.74 li
120.66 103.56 li
122.34 104.22 li
124.32 104.94 li
125.4 105.24 li
125.64 105.66 li
125.16 105.9 li
cp
117.18 102.48 mo
117 102.36 li
115.56 101.28 li
114.36 100.2 li
113.34 99.06 li
113.4 98.58 li
113.88 98.58 li
114.84 99.66 li
115.98 100.74 li
117.36 101.7 li
117.54 101.88 li
117.66 102.36 li
117.18 102.48 li
cp
111.42 95.88 mo
111 94.8 li
110.58 93.24 li
110.28 91.62 li
110.28 90.9 li
110.58 90.54 li
111 90.84 li
111 91.5 li
111.24 93.06 li
111.66 94.56 li
112.08 95.64 li
111.9 96.12 li
111.42 95.88 li
cp
110.34 87.24 mo
110.46 86.22 li
110.82 84.24 li
111.36 82.26 li
111.78 82.02 li
112.08 82.44 li
111.54 84.42 li
111.18 86.34 li
111.06 87.3 li
110.64 87.66 li
110.34 87.24 li
cp
112.56 78.84 mo
112.92 77.94 li
113.1 77.7 li
113.4 77.7 li
113.58 77.88 li
113.58 78.18 li
113.22 79.08 li
112.74 79.32 li
112.56 78.84 li
f
109.98 77.4 mo
115.68 72.9 li
115.86 80.16 li
109.98 77.4 li
ef
115.8 72.6 mo
119.34 74.1 li
120.48 74.52 li
120.66 75 li
120.18 75.24 li
119.04 74.76 li
115.56 73.26 li
115.32 73.02 li
115.32 72.78 li
115.56 72.6 li
115.8 72.6 li
cp
123.78 75.78 mo
126.18 76.62 li
128.58 77.34 li
128.82 77.82 li
128.4 78.06 li
125.94 77.34 li
123.6 76.5 li
123.36 76.02 li
123.78 75.78 li
cp
132.06 78.3 mo
132.96 78.54 li
136.26 79.26 li
136.92 79.32 li
137.22 79.74 li
136.8 80.04 li
136.14 79.92 li
132.78 79.2 li
131.88 79.02 li
131.58 78.54 li
132.06 78.3 li
cp
140.46 79.86 mo
142.86 80.16 li
145.5 80.34 li
145.8 80.7 li
145.44 81.06 li
142.74 80.88 li
140.4 80.58 li
140.1 80.22 li
140.46 79.86 li
cp
149.04 80.46 mo
149.28 80.46 li
152.46 80.34 li
154.08 80.22 li
154.44 80.52 li
154.14 80.94 li
152.46 81.06 li
149.28 81.18 li
149.04 81.18 li
148.68 80.82 li
149.04 80.46 li
cp
157.62 79.8 mo
158.64 79.68 li
161.76 79.08 li
162.54 78.9 li
162.96 79.14 li
162.72 79.62 li
161.88 79.8 li
158.76 80.4 li
157.74 80.52 li
157.32 80.22 li
157.62 79.8 li
cp
166.02 78 mo
167.76 77.46 li
170.76 76.38 li
171.24 76.62 li
171 77.04 li
168 78.12 li
166.2 78.66 li
165.78 78.42 li
166.02 78 li
f
171.66 72.96 mo
178.92 72.96 li
174.54 78.78 li
171.66 72.96 li
ef
178.98 72.6 mo
182.88 73.32 li
183.96 73.5 li
184.26 73.92 li
183.78 74.22 li
182.76 73.98 li
178.86 73.32 li
178.62 73.2 li
178.56 72.9 li
178.74 72.66 li
178.98 72.6 li
cp
187.5 74.28 mo
190.32 75 li
192.36 75.6 li
192.6 76.02 li
192.18 76.26 li
190.14 75.72 li
187.32 75 li
187.02 74.58 li
187.5 74.28 li
cp
195.78 76.68 mo
197.1 77.16 li
200.28 78.36 li
200.52 78.48 li
200.7 78.96 li
200.28 79.14 li
200.04 79.08 li
196.86 77.82 li
195.6 77.4 li
195.36 76.92 li
195.78 76.68 li
cp
203.82 79.98 mo
206.22 81.18 li
208.26 82.38 li
208.44 82.92 li
207.9 83.04 li
205.86 81.84 li
203.52 80.64 li
203.34 80.16 li
203.82 79.98 li
cp
211.32 84.36 mo
211.5 84.48 li
213.96 86.28 li
215.34 87.42 li
215.4 87.96 li
214.92 88.02 li
213.54 86.88 li
211.14 85.08 li
210.96 84.96 li
210.84 84.48 li
211.32 84.36 li
cp
218.04 89.88 mo
218.4 90.24 li
220.38 92.34 li
221.46 93.66 li
221.4 94.14 li
220.86 94.14 li
219.84 92.88 li
217.92 90.72 li
217.56 90.42 li
217.56 89.88 li
218.04 89.88 li
cp
223.62 96.54 mo
223.92 96.96 li
225.42 99.48 li
226.2 100.92 li
226.08 101.4 li
225.6 101.28 li
224.82 99.84 li
223.32 97.38 li
223.02 96.96 li
223.08 96.48 li
223.62 96.54 li
cp
227.82 104.16 mo
228.06 104.76 li
229.14 107.58 li
229.62 108.96 li
229.38 109.38 li
228.9 109.14 li
228.48 107.82 li
227.4 105.06 li
227.16 104.46 li
227.34 103.98 li
227.82 104.16 li
cp
230.58 112.38 mo
230.88 113.52 li
231.54 116.7 li
231.6 117.36 li
231.3 117.78 li
230.94 117.48 li
230.82 116.82 li
230.16 113.7 li
229.92 112.56 li
230.16 112.14 li
230.58 112.38 li
cp
232.08 120.96 mo
232.32 123.3 li
232.5 126 li
232.14 126.36 li
231.78 126.06 li
231.6 123.36 li
231.42 121.02 li
231.72 120.66 li
232.08 120.96 li
f
235.38 126 mo
232.14 132.48 li
228.9 126 li
235.38 126 li
ef
175.2 132.66 mo
172.92 130.44 li
171.54 129.24 li
171.48 128.7 li
172.02 128.7 li
173.4 129.96 li
175.74 132.12 li
175.8 132.36 li
175.74 132.66 li
175.44 132.72 li
175.2 132.66 li
cp
168.78 126.96 mo
168.36 126.66 li
166.08 125.04 li
164.64 124.08 li
164.52 123.6 li
165.06 123.48 li
166.5 124.44 li
168.84 126.06 li
169.2 126.42 li
169.26 126.9 li
168.78 126.96 li
cp
161.58 122.34 mo
159.3 121.26 li
157.02 120.36 li
156.78 119.88 li
157.2 119.64 li
157.32 119.7 li
159.6 120.6 li
161.88 121.68 li
162.06 122.16 li
161.58 122.34 li
cp
153.54 119.4 mo
152.52 119.1 li
150.24 118.8 li
148.62 118.68 li
148.32 118.26 li
148.68 117.96 li
150.36 118.08 li
152.7 118.44 li
153.72 118.68 li
154.02 119.1 li
153.54 119.4 li
cp
145.08 118.68 mo
143.52 118.86 li
141.24 119.22 li
140.16 119.52 li
139.74 119.22 li
140.04 118.8 li
141.12 118.5 li
143.46 118.14 li
145.02 117.96 li
145.44 118.32 li
145.08 118.68 li
cp
136.8 120.54 mo
136.74 120.54 li
134.46 121.5 li
132.24 122.58 li
131.76 122.4 li
131.88 121.92 li
134.22 120.84 li
136.5 119.88 li
136.56 119.88 li
136.98 120.06 li
136.8 120.54 li
cp
129.18 124.38 mo
127.68 125.4 li
125.4 127.02 li
125.1 127.32 li
124.56 127.26 li
124.62 126.72 li
124.98 126.48 li
127.26 124.74 li
128.76 123.78 li
129.3 123.9 li
129.18 124.38 li
f
121.32 125.7 mo
118.74 132.48 li
125.7 130.44 li
121.32 125.7 li
ef
231.84 132.66 mo
229.8 129.54 li
229.08 128.46 li
229.14 127.98 li
229.68 128.04 li
230.4 129.18 li
232.44 132.24 li
232.5 132.54 li
232.38 132.78 li
232.08 132.84 li
231.84 132.66 li
cp
226.98 125.58 mo
225.84 123.96 li
223.92 121.56 li
223.98 121.08 li
224.52 121.14 li
226.38 123.54 li
227.58 125.1 li
227.46 125.64 li
226.98 125.58 li
cp
221.58 118.86 mo
219.96 117.06 li
218.16 115.2 li
218.16 114.72 li
218.64 114.72 li
220.5 116.58 li
222.12 118.38 li
222.12 118.86 li
221.58 118.86 li
cp
215.46 112.86 mo
214.32 111.9 li
212.46 110.58 li
211.44 109.92 li
211.32 109.44 li
211.8 109.32 li
212.88 109.98 li
214.74 111.36 li
215.94 112.26 li
216 112.8 li
215.46 112.86 li
cp
208.32 108.3 mo
207.06 107.76 li
205.32 107.22 li
203.58 106.86 li
203.28 106.44 li
203.64 106.14 li
203.7 106.14 li
205.5 106.5 li
207.36 107.1 li
208.56 107.64 li
208.8 108.06 li
208.32 108.3 li
cp
200.1 106.74 mo
198.48 106.92 li
196.86 107.34 li
195.3 107.94 li
194.82 107.7 li
195.06 107.22 li
196.68 106.68 li
198.42 106.2 li
199.98 106.02 li
200.4 106.32 li
200.1 106.74 li
cp
192.18 109.62 mo
191.94 109.74 li
190.38 110.94 li
188.82 112.32 li
188.34 112.74 li
187.86 112.74 li
187.86 112.2 li
188.34 111.78 li
189.96 110.34 li
191.58 109.14 li
191.82 108.96 li
192.3 109.08 li
192.18 109.62 li
cp
185.94 115.38 mo
185.7 115.62 li
184.14 117.6 li
182.94 119.34 li
182.46 119.46 li
182.34 118.92 li
183.6 117.18 li
185.16 115.14 li
185.4 114.9 li
185.88 114.84 li
185.94 115.38 li
cp
181.02 122.34 mo
179.7 124.68 li
178.56 126.78 li
178.08 126.9 li
177.96 126.42 li
179.04 124.32 li
180.42 121.98 li
180.9 121.86 li
181.02 122.34 li
f
181.2 127.92 mo
175.44 132.36 li
175.32 125.16 li
181.2 127.92 li
ef
1 /13 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Arial-BoldMT gcheck setglobal} if
2 8874 87 <0001001fffe80291059d001900cd402920002001230a290f3a0e4a0e590f
07191500180316150017121314011712021401180309070a070c18b80101
400f0017a017b017036017a017c0170317b80104b2150114b80274b30015
0607b80274400e0c0b092f0a2f00002f015f010201b80104402818032617
1255153f149f14af1403601480149014d014f01405001410142014301404
14191a78a0182b4e10f45d71724bb037534bb03b515a58b90014ffc03859
3c4dfc3cfd3cf45d3c10f419e400183fed3f3cfd3c10f45d71e411123911
330f0f0f0f3130015d011523111416163332371706232226262726351123
3533352511027ac00b271c274a18627c4c7a390b098181011a0426e0fe54
822b1c1bda2a335145319501cfe0d3a4fe89>PBAAAA+Arial-BoldMT AddT42Char 
2 4958 68 <00020049ffe8042e043e0023003201714068071a081c051d161a4a1b481c
4925db10df11093619461957266619672686269219931aa61ab91bc71ac8
1b0c06060d151606191627062915591977028602a606b506c6060cbf34d9
10021d243231112c0d24402b2e3424402228342440191d346f24fc240224
461db8ffc040300e0f343d1d01001d101db01df91d041d1d2c013300400e
0f340f001f0002005521401c113f21401b103f2140181a3421b80274b504
070c0d0a2cb8ffc0b31c113f2cb8ffc0b31b103f2cb8ffc0b3181a342cb8
02744040140b1e3126082909280d591f0c9f0c021f0c01ff0c010c400e16
340c1a4f340134600001008e300101013329215f1701df17014f175f176f
17031719336941182b4e10f45d71724dedf471ed5d4e105df62b5d71724d
edf4e4fd3c003fed2b2b2b3f3c3ffd2b2b2bf45d2be412392f5d712bb106
02435458b22f1d017159edb10602435458b90024ffc0b71b1d3454246424
025d2b595d2b2b2b111239030e103c3c3c313001715d005d710127363633
321616150314161721262726270606232226353436363736373534262322
060106060706151416333237363736350165ff2bd2cfbcb84b031b25feea
0b10070348a45da4bd569b92c54c506f4b54015e36ea243758444c453310
0b02e22e9a945989b7feb88c854c1c3719084646b2885a8d4b1c25201c51
453bfed2123218273c3b563226372465>PBAAAA+Arial-BoldMT AddT42Char 
2 7292 76 <00020093000001ac05ba000300070077b90009ffc0403f110a3f40095009
028009b009c009d009ef09051f0960097f09a009b0090503060700050403
0f00014000d000e00003005d02010006050607040a0207260104b8ffc040
092124340419083f3c182b4e10f42b3c4dfd3c003f3c3f3c3f3cfd5d713c
0305103c3c103c3c313001715d722b1311211101112111930119fee70119
04b60104fefcfb4a0426fbda>PBAAAA+Arial-BoldMT AddT42Char 
2 5736 70 <00010055ffe8043f043e001900e14051580f59125916680f691269167d18
79199702970cc610c618d710d618e906e908e913e915f80613381338154a
124a164618590c690c073a1237163718037705770f8705860f8919a812a7
16b912b616090eb8ffc0b3181b340eb8ffc0b51214340e330db8ffc0b319
1e340db8ffc0b30f11340dba0104000a02744012110b0040181b34004012
1434003390010101ba0101000402744020170701401214340121002f0d40
1214340d214f0e010e1a1b072114191a5841182b4e10f44ded4e10f65d4d
ed2bf4ed2b003ffdf45de42b2b3ffdf42b2be42b2b3130005d7101715d01
052626232206151416333236370506062322001110003332160431feeb0e
634f697d7f6b50661501142bf4cde9feeb0116edc2e502ec32535491aabd
9c5b6f2fbec20126010401070125a700>PBAAAA+Arial-BoldMT AddT42Char 

2 0 3 <> PBAAAA+Arial-BoldMT AddT42Char 
2 3840 49 <000100980000052305ba000901ce400e0903060819031708041208020303
b8ff00b3120b3f03b8ffc0b35b5d3403b8ffc0402a535434033207081407
0708030802020703090402020907080304405b5d340440535434043206cf
050105b8028b4019400b500b600b03700b800b02a00bc00b02200b300b02
0b0809b8ffc0b35b5d3409b8ffc0400e53533409320120003000c0000300
b8028bb30a3175182b4e10f45d3c4dfd2b2b3c4d105d5d7172f65d3c4dfd
2b2b3c003f3c3f3c011112393900123939872e2b2b2b2b877dc4b1060243
5458b90003ffe040090e273408200e273403b8ffc0b7090d340840090d34
002b2b2b2b5931304358b90003ff80b60b3508800b3503b8ffc0403d1a2e
3408531a2e34050316033203400304460385089008a008b208e40306c403
cf08da080320032f0834033b084f0892039f08a003af08b003bf080b07b8
ffc04009333534024033353407b8ffe0400d2f323402202f323402071435
07b8ff974009212e340254212e3407b8ffc040461e203402541e20340802
070718020317072c0227073b0233074e0240075c0256070914021b074d02
45079a07ab07cb02d902e802e707f9020b270228074a0778078807ac0206
015d7172722b2b2b2b2b2b2b2b2b005d5d71722b2b2b2b59005d33112101
11211121011198012002580113fed7fdb105bafc2d03d3fa4603bcfc4400
>PBAAAA+Arial-BoldMT AddT42Char 
2 7796 82 <00020052ffe8049a043e000d001900974048e801e708f713f71504c702e8
05021219051909025910561356165918970298069808970cb809d502db05
dc09d50ce705e706e80d10a708cb02cc06c308c60c057508890684080311
b80274b20a0b17b80274401404071439071a601b701b021b0e2100191a58
41182b4e10f44ded4e1071f64ded003fed3fed313000715d015d71435840
09691066126616691804015d59005d015d13341236333200151400232224
26251416333236353426232206528afd9cf10134fec9ec92fef78a012096
6e6e95956e6e9602228c01068afec7eff1fec384ffa89ea8a8a09ca8a800
>PBAAAA+Arial-BoldMT AddT42Char 
2 6052 71 <00020054ffe8046105ba000f001c0090402d125906590a59125616561859
1c98079909f80909701e801e023a03340c3a1534194a03440c4a15441999
090914b80274b2050b1ab80274400e0b070e0f0001000a17290e0d2601b8
0129400f0f001a8f1e011e102108191d583c182b4e10f44ded4e1071f63c
4dedfd3ce6003f3c3f3c3fed3fed3130005d01715d4358400d6906690a69
1266166618691c065d592121350606232200111012333217112101141716
3332363534262322060461fefb41b15ab7fefbfec2b2820119fd122f447a
6188846764879c5b5901270108010e0119940210fc70aa4c6ea5a4b7a19f
>PBAAAA+Arial-BoldMT AddT42Char 
2 6292 72 <00020041ffe80427043e0014001c01a3b90010fff840460b3999099a0d96
10a805a70abb09bb0db81a0808140148024706460a4f1ea80db606b61ac7
0ac80cd60ad80cf807f70d0d1c0f1c15401b1d3415400e11340f15bf15cf
150315b8ffc0b30f1e3f15b8ffc0b30e173f15b8028d400c0f0e12500e60
0e020e181201b8ffc0b6191b3401331200b8ffc0b31d203400b8ffc0b322
293400b8ffc0b32b2d3400b8ffc0b3181c3400b8ffc0400f0e0f34a00001
0000100002005f1212b80274b3040b1218b8027440240b070021012f1521
4f0e010e1a2f1e5f1e6f1e9f1e041e0f2108400d0f3408191d6941182b4e
10f42b4ded4e105df65d4dedf4ed003fed435c584014184028143f18401e
0f3f18401b103f18401c113f2b2b2b2b593ffd435c58b90012ffc0b32814
3f12b8ffc0b31e0f3f12b8ffc0b31b103f12b8ffc0b21c113f2b2b2b2b59
f45d712b2b2b2b2b435c58b90000ffc0b2123900b8ffc0b2173900b8ffb0
b3090a3e00b8ffc0b241213f2b002b2b2b59e42b1112395d435c5840140e
400f1e3f0e401c113f0e401b103f0e400e173f002b2b2b2b592f3cfd2b2b
722b2b3c0111333130015d71005d2b010506062320272635100033320003
211616333236132626232207061702fa011836e9affeeb85690114d3ed01
1206fd40038261425a270378565c3c3c0101522f9aa1b591dd0108012bfe
c7febd7d8b48016c7a7f43437300>PBAAAA+Arial-BoldMT AddT42Char 
2 3244 48 <000100910000061905ba000c0218400b0b032608260b0304030103b8ff80
40091c3a340a203a3b3409b8ffe0b33a3b3409b8ffe040a41c2e340a201c
2e340609080ae309ec0a0404090a0a13021c0410091f0a23022c0420092f
0a6702680465096a0a77027804a409aa0ab509ba0af609fa0a169f049009
9f0ac609c90ad702d804d609d90ae702e804e509ea0a0d7709780a83028c
0483098c0a900207580b65026a046709680a760279040744024b0444094b
0a57085709580a07180a2f0e34023a0434093b0a3f0e0703020c04060909
0a15021a04170907b10602435458401f0204030a09050c070732060e0c32
0000031003020850080d340b50080d3403b8ff80400e0b0d3408400e2734
0b400e273403b8ff9c40100e2734030b08030100040102070a0008003f3c
3c3f3c111217392b2b2b2b2b2b5d012fed10d4ed111217391bb8ff3b402d
030a09200408090932030414030304020b0a0a320302140303020b080303
0c0402020c0a0a090907081f0e010eb8010db307060504ba02380005ffc0
b35b5d3405b8ffc0401753543405320740077f080108bd7f030103bd0b20
0b0c02b802384012010000405b5d34004053543400321f0c010cb8010db3
0d3175182b10f471ed2b2b103cee103c1a1910fd71fd713c1a1810fd2b2b
ee103c10e471003f3c103c103c3f3c12173987052e2b877dc4872e182b87
7dc42b593130014bb0135358b90008ffe0b10b20383859015d5d5d5d5d5d
71722b2b2b2b002b715d331121010121112111012101119101bb010a0107
01bcfeedfeddfee3fede05bafc1803e8fa460482fb7e0482fb7e>PBAAAA+Arial-BoldMT AddT42Char 
2 5484 69 <00020087ffe8049405ba000f001c009db90012fff840310b39371b471b02
125606560a56165618591cf7070635043b0d3b13351b45044b0d4b13451b
940799090a0c0e010201001ab80274b2050714b8027440130b0b0f000a17
21081a701e011e10290203260fb80129400c01700080000200191d3f4118
2b4e10f4713c4dedfd3ce64e1071f64ded003f3c3fed3fed3f3c31300071
5d015d4358400b6606660a66166618691c055d59005d2b33112111363332
1211100023222627151314171633323635342623220687011982b2c2fefe
fdb95bb140123449795d838467658605bafdf094fee7fef9fef0feda5b59
9c022aa54f709fabb6a19d00>PBAAAA+Arial-BoldMT AddT42Char 
2 7454 79 <00010093000001ac05ba00030053b90005ffc04029110a3f400550050280
05b005c005d005ef05051f0560057f05a005b0050502010003000a020326
0100b8ffc040092124340019043f3c182b4e10f42b3c4dfd3c003f3c3f3c
313001715d722b3311211193011905bafa46>PBAAAA+Arial-BoldMT AddT42Char 
2 3152 47 <0001009d000004a505ae0005003d401a5007010201020403250500080405
1a0702032001200030000200b8028bb30631b9182b4e10f45d3c4dfd3c4e
10fe3c003f3c4dfd3c3f3c3130015d3311211121159d012802e005aefb49
f700>PBAAAA+Arial-BoldMT AddT42Char 
2 8036 86 <00010030ffe80410043e002a02c240c00611062308271711172398129814
9727952a09071446140212bb0db90ec721e523f80df62206290d550d650d
950b9712a722b90c07412340244426672264268712871486228324093726
4506460b4a0d4f0f462142220722242726370c352135223523352407060a
05110921180d270c22222223072422402c730c781479157629752a881584
2a9a15952ab422b4230d80018f178c18992aa92ab02c0617211640212334
16401c1f341f1601df16011633082150258f25022540181d34251a2cb8ff
c04017110a3f502c01302c012f2c012c1e213010011033012100b8ffc0b3
0f093f00b8ffc0b3110a3f00b8ffc04009090d3400192b78b8182b4e10fc
2b2b2b4dedf471ed4e105d71722bf62b714dedf471722b2bed00b1060243
54584035060101060116012622362146215401591764016917f6010a0117
02041a21220228130d0c02281a5f04010446280b501a011a4613073ffd5d
3ffd5d1112173911121739111217395d711bb90022ffcbb3282a3421b8ff
cbb3282a3422b8ffe0b31e243421b8ffe0b31f243422b8ffe0b3191a3421
b8ffe0401b191a346b0d0136224622980d9422c422d4220621220c0d0404
1a00b8ffc0b5191b34003301b8ffc0b3172d3f01b8ffb0b3090a3e01b8ff
c0b322253401b8ffc0401d1a1c3400013001400150010460018001f00103
00011001500160010401b8ffc0b313163401b80101404d0004015f04f004
020446280b1640191b3416331740172d3f1740090a3e174035373417402b
2e34174025293417401a1c340f171f175f176f170417551a402224340f1a
01501aff1a021a4613073ffd5d712bf45d2b2b2b2b2b2be42b3ffd5d71f4
2b5d71722b2b2b2be42b111217395d712b2b2b2b2b2b59313001715d0071
7171715d5d435c58b90024ffc940090b123f0f280b123f21b8ffecb60d39
0c140c3921b8ffecb20c3922b8ffeab10b39002b2b2b2b012b2b5900715d
132516163332373635342726272427263534363332161705262623220706
1514171604171615140623222630011a126e636d3725141549feac5b7eda
e5dad428fef7115f586f30201c2601c15958f4efd9fd012f2b5255281c2f
201514114b3e56998abc8e8b313e421f16231e151c664a4b8692d2b0>PBAAAA+Arial-BoldMT AddT42Char 
2 7562 81 <0001009100000459043e0016009f4018071317135a08680804b804013408
34104408440fe9100506b80274401d11070e0d060c0b0b01000a02012616
0040202434af0001ff0001001a18b8ffc040162224349018a018027018f0
1802ef1801180a0b260c0eb80129b20d0d0cb8ffc0400f202434a00c01f0
0c010c19173f3c182b4e10f471722b3c4d10ed10fd3c4e105d71722bf671
722b3c4dfd3c003f3c3c103c3f3c3fed3130005d01715d21211134262623
2206061511211121153633321e02150459fee724513949742bfee701058b
d35d9a4f1f021eac65385084b2fe1f04269cb44368847b00>PBAAAA+Arial-BoldMT AddT42Char 
2 6816 74 <00020054fe510460043e0023002f014e4062771d871d02120c0d7031860d
8031042001230223033001330233034001430243035b0f59145925562956
2b592f6b0ff811f813123b0d33163b28332c4b0d44164b28442cf00cfd17
0a8e0c010c0b0c0d0b2a0c0d270e1617152d0d0c171604182401b8ffc0b5
191b34013300b8ffc0b30e113e00b8ffc0b30b0c3e00b8ffc0b3282a3400
b8ffc0b323253400b8ffc0b331343400b8ffc04009151b34600001005f05
b80274b21f0f27b80274b20e0a2db80274400b15071819062a290b261a18
b80129400919191a1a8f31013101b801b8400a00332421121930583c182b
4e10f44dedf4ed4e1071f63c4d10ed10fde4003f3c3fed3fed3ffdf4722b
2b2b2b2b2bb10602435458b90000ffc0b30e113400b8ffc0b2090c342b2b
59e42b01111217390011123939111239390708103c313000715d015d7143
58400d690f691469256729662b692f065d59005d17051617163332373637
3635350623222726351000333217352111140e0223202635341314163332
36353426232206790141081d28566e3725130d7ec0d67d620101bfc58001
073e70bb8ffef2e2fc8360678e88686583462738151e211631235e9bacb5
8fd5010b011aad95fc47bcba6a3cb98e0e0283a99da19ea5a09d>PBAAAA+Arial-BoldMT AddT42Char 
PBAAAA+Arial-BoldMT /CharStrings get begin
/g87 87 def
/g68 68 def
/g76 76 def
/g70 70 def
/g3 3 def
/g49 49 def
/g82 82 def
/g71 71 def
/g72 72 def
/g48 48 def
/g69 69 def
/g79 79 def
/g47 47 def
/g86 86 def
/g81 81 def
/g74 74 def
end
PBAAAA+Arial-BoldMT /Encoding get
dup 43 /g87 put
dup 44 /g68 put
dup 45 /g76 put
dup 46 /g70 put
dup 47 /g3 put
dup 48 /g49 put
dup 49 /g82 put
dup 50 /g71 put
dup 51 /g72 put
dup 52 /g48 put
dup 53 /g69 put
dup 54 /g79 put
dup 55 /g47 put
dup 56 /g86 put
dup 57 /g81 put
dup 58 /g74 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MIXTJF+Arial-BoldMT*1 
[32{/.notdef}rp /g54 /g20 /g25 /g24 /g23 /g22 /g21 
/g19 /g28 /g27 /g26 /g87 /g68 /g76 /g70 
/g3 /g49 /g82 /g71 /g72 /g48 /g69 /g79 
/g47 /g86 /g81 /g74 197{/.notdef}rp]
MIXTJF+Arial-BoldMT nf
MIXTJF+Arial-BoldMT*1 [7.98 0 0 -7.98 0 0 ]msf
108.36 28.6197 mo
( +,+-./0123415-63/01237-8+39-9:/0123)
[5.32357 2.65813 4.43773 2.65813 2.21929 4.4991 2.21928 5.76242 4.87657 4.92126 60.719 6.66006 
4.87656 4.92126 2.2193 2.2193 4.43771 2.2193 5.76241 4.92126 4.86136 51.7184 4.86136 2.2193 
4.43771 2.65811 4.43774 4.87659 2.2193 4.92126 4.86133 2.2193 5.81903 4.87659 4.92126 0 
]xsh
gsave
123.48 18.3 mo
145.86 18.3 li
145.86 0 li
123.48 0 li
cp
clp
123.48 18.36 mo
146.04 18.36 li
146.04 0 li
123.48 0 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 91.86 170.1 ]ct
[22.56 0 0 18.36 31.62 151.74 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 47 
/H 39 
/M[47 0 0 -39 0 39 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
!irB%rMot#X8T+'X/`2!WiH#u(TOI7Wi;qqWN*,$XKeq1YckC7YHP(2Xo=[eQ2d3JQirbBQ'@R4QQDEW
Pa%GtP*2&rSX>n>SXc=BURIdES"6"FV50l]V>[8,Vl-DhUnaZZUnsrbUSFQXUS4?RU845DPaJ#1R@K\<
R%'M2R[AYTI=-EkJVA`1Lkpb9I<p$^I=?`rI!TpZH?3q?Fa\^OG)LfqJUE`&J:)WkF0)FCWiH'!!36!u
"0/B#X8T'uX8]+!X8T%1X08S*YcY%3Xf\Y.Z*:I5R$df<!1<YM!L8oKQ2R!GQOT4FQ^=51S"H1>T:DF>
rLa^iVP^2cUnsrcUnsrcV50l\qP4%c&#H(sUSOcTQC+51R%0S4Qi3HeQ\C'@I=6QqK7/3"JUW#nFaX.6
s*Xfo(4L[XH@:?lCNb>UH%C9fD2*k$L2F#nri?%!$*(#+X/`2!WN*#tWW0!tWrT1!WtMG6XKAV+XKJY+
YHb:8Z)j@\R/E<KQ2[!KQ^.N6!L9#NQ2[*aQ'Ii-S",q:SXZ+=TUqdKR]!'\VZ!@hUC*`iTqnHXTqS3U
V#I+lUnso_U]-V^R?s9LR[BJ1SXZ1@Q\pTOJc1$.H?ssdH?XLQI=-0YF*2eWrd5B-IXZZjG&_eRDg$SQ
G'oF&K8X[IXT,?pWWK6$WrAt;WiE%sW2ZesW2?YtXfSS)XfSq;Z`C13XdPTER/N?OPl6mHPlI$GPT,jN
PE_>tPED<'S!ob6S=?@NUR@RCS>W9^VPX9f!2BFerh9OjUS=HUrh9XkTV/!RUS4:YQk5ULR$j>8TqI[;
S=,7lKnFjRI/nKiHN&+0I!U!XF*2\NF)Pu<H?sRFEHZVGBlSHBTVdugDh366X9P`+WiN/#WrB$qWt2;4
WiE%uWMunuX/`,"Xf_T'#ct5A]<nN;YHIhks-NJF!1<_Qs-WeP#aUjGR?s2-S!s>E$CdWeWhbrKS=QRU
rh][kpS7ST".G^JRf8fcS!]P0R$O#(R%("OTa[*MR@8qfKnFr)I!U2=HN&:5G'S@[H#mtBDf'90H$O=A
Dg?D>Bl/$Dc-<+pCOCU/X8/b&X/`5$XK8P*X/`/tWtMM8X/`8'X/i>%XKoOQ\?2s<XS\=lQ'@Q!Pa%Gu
Q^=)-rgF(ZQ^4&,R$j?SR@0G2R[KS4R$sbNXf@h]S=BJS%AfkqU8+KXU8+KZV4=(TScYFORe`H`R$a5+
Q^!l/WMu_]S!fZBJM2J#H?X[]GB\@\I=??dI"$HdDejWAG'SF]H#mtHD/4'&EKo55Zu^bFG,hUCX/l6"
#-"T#W2Zbr!36%%#d(21XK8P*XKDK'&Zr.8WN<5$X0fRR\?N<CX-JtKQN3<MPQd87Pa%H"rL<kWrL3bU
rgNhU(7CMXS!TP=XK8CnUR[aIUSO`_UnaZYrLj:eUSRjVrg3\Ppm;PXPF%Z"Q_CCXUn"*GQ[0-hI=?Wn
H?XLQEH-&BH@>d?*dW!NEGooAG&qYCG'S7JAT)j)D5Q(B\q-,oD5jP9r2L+&W2HPlW2Zf$YH@f*)m-3B
X/rA$WN3/'X/N,&W2mD?]st;RXfI\NQ2[*OQ'@L2Op7,7Q(OY<S,Si`S!f\5R?s8.R[]]UQC=A1RAm9h
Wh6,WRA-FNrhKstU7e0OT:hmPURdmBr0S@fQ^<u#P*VK&Q'.N'P*VoCWMQ/ZR$Ml=I/\OBH?X:ECMRd,
FaA[jH?O:JF*;>9DeW`mCNFc8@<$a)CTlIH["FinC]17DX/i8#W2co!W2Q_tYd(F7&$2t<Y,e\,WiE2&
X0AY)WrB(+\\5\dYcY(-Pa)-3.[QKcQ'[c"PEhN-TV%aDS=Z:>R[TV2R[]_<R@'A2R[U7XXK%n^SX6(F
rM'[pUnOQ[US4?UVZ*,0R@'D3R[0>.Pa%Q&QCX>+PaIf)VQ$PkS=#b/GB\@ZI!d>jI;sR^HuX(NKnG26
H?O[dIVX"GB4l:/CPHV;B6J35^>%,DJU)]Upo4t)VPpJmWN34eD/4`lW3<;+Y,hQ$&#Q8%WN3(tX1Q$V
[]cd7WVD\jP*(rmPE_?&Ip#fiKpJ="St2;KQNrb>PF%]*PaMcWXK/7hR[f`>U*ZG&Tq\6SUR?R7=)EYS
S!]\6Q]dPqOcb`hQ'[W!W2Z_jR@'D*pie$"B5r'6F*r?b!s0)o@=WNOIViV,A6N5?ASH!dCX1YZWdJf4
AGrP,W=Z#/X/`2#XK%_'1+Y@QA:gKUVQ9Ztql:%#XM)9Y[&pC1WVMbpP*_Q$PaIi)KiKKE/2pFCNK]g#
S"-";r0[kTS#i]lV4*gAQhd@&TV\N\U8FiaIo7O6-o=_6Ko;%TOctujQ'Rc&QB7K5WMcGWQ'da5GPuXc
D17*AH?Y!tI51j%!#P_I6;qH/BPM9nBkqR$CK>W5g;]\)Bm+%dX8Jt3VQHu"X0J[g;*I-=8MVhV4C!N2
WW'%1XK8:oVPg]5]t(GMWiW5tPpMZZOdVW%R%BRk5r(/Z3[Z+&0M?;@R%0_;R[TJ&Pa.oCXJqn^!goIE
qkFq$U7J6]Tr+odM*EXH4#eK-.4n,+Jr]hp%[WNENKKBpWMu_cQ^!l%rd=]k$$UT+N/ht3V0Xlj!#-&0
@;p:,Df8fV>$d?IgV/hhB6IqdX8T%5W2Z_pY,dLS1ce`fNdk7r2Dd<V>($sOWiN>)WMcf)]tLq[XK&D'
q3NFkP`q?#Qub;<0M$#,CeHT9.P*GMC5JFJS=5e0RAI!dWM#]IS!j5OrM1d5TqJ-ZVLV&X-U;'W@6uFh
+XAU*@!RTpR@'/#QD(:WUn*j:R$[c#rI"ofF)Q2bK-C<p!!3KI%/Kr=$8>UuHuW\'CT#qAZ%d10H#9U_
WiH#u.&a)FYG[1S/ji?@H]XPLF%Se^4?c&%;2:L8Xf8A2]tLhUX/W5%Q'M65.$Kj]RZ_SQ+?)P^BRPPV
@6QV*1,CdM6?7[BS<oYDXK87fR?sD2US@mdUo"'f/"rW5Wh4W1.kW_L?>t%#=>VWZ.4Zr)3c]e6R?El3
WMuSYQ]mf&I!g?jIf=m%EGpDnCE!*N":6/!'F":40c)QJH=Ug"e_?aBD.S!.W2Q\qX/`5$WN<4uJP.sh
5"JRSAp/]UA5l&e5rpqa2FW'+Vl$H)]tCVNWi3"uPEV5qQ2[+ZPaIl"Bf[[t1H\&t<Ffra;ari-2)$U7
.Q;(+PaAGPX.YlJQC=/6Tq\9VUnsr_VPou,6o7"V1-7cq=^bc34Y\T@-R9ue2eeD:P,P@ZSX#G&R$2N0
Fa&4]IXuWqNaEFq!!!$$"Ukk7!$)MR>%GM)d>M^O@W>tVVPpGmWiE,#XJ:#.2F'c&r^@r%;,gM*;+!`A
770L-2/oUuXLl3YY,J=tX/M/CP*;,qrg,1(N*nFi0/bmQ3BB>j7Rg<C2`EfY2`WTA>a_%MX/r@mQC!i(
QCXV?Tq\<X1SptHQu"r@3^>DR0/,4D4ZuCu/h\q4/h\t/?'UeEW2Z_aP*1rnP%SKGEHQSUIY!AW$L7[K
"_i%$cJ?`o@:WVY@B?]8X0Ab+Xh(!36pX+*7nH097oDoRB4>+A6V0sC5rDf>[&U[O^&tmGXJu2q>+;1R
R@g":S#qNE2`3HO4$#;M1-%'B6pWmg/M&_90-ru@S!U(UXf7_WQ^!c#R%9V0QB[DlQ[)+R.k<&"2`*0@
1b:=M7R0!i4?u1n,!ga@Nh32JV3[I3rg!k6L3%'VE*d4M0_>>H!<E2r!"Lu'?DcN4]k_Ot?t*ZKXT#=P
Y-YU(E^`#P4[)8#7Rfd;:3<,)N+Pm]7R9==H*Ff_]t_=kWN3%sVkoiNrgO+^USrlS3\^Oi$op(%0JG4>
:Nq4u6T=rs%R"0dT:DsaXf.SSR$O&'rKmhPPaS(d<\>[L.4HSn0JkU</20nAIV;J=5W_"f4Bmf1PbY1T
UQUq-R$a4]EHuhCDN:MC"SD`t!?s0,!W)jP#%;n#^>%DDA8>gkBkFHJYH=k/YG55f1cINX3^5Ga84>p7
@uZ:V9h@o<5"BmXX/W3"]*,=5WN*!GXJq\XSt)4@T8uT'.P3D00K(:41Gg^:7;QI%/i#.3.5kd`S=,rI
X$*2@Q^F20Q^F,/R?*VuLd<X9,:=c]-RCB&/LW#7AS+Ln2E`fT5\b_?S=us_X/2)EPa7Z"G&MnW@s<,d
o)Jjn&.AU;!.FnU,_:,lg"P/J?=[\aDe6&TZ*1I>Ro;I03'BDa2ENiX5=J"(5Yk<E6W-]A8nF!LWM-B+
]=Y5BW2Zi!WLTWSS>)d56SpDJ1c-g:0e+_+1bU7)1GpO-3Ai<B:3hM\O.<;PX.PWBQ^O;/R@Tn:R$iFh
.O?;g.3foZ-mU5p/L_nk0f^^<5!^qi>CD9sOeAbUWhPfBP*VGtHA76'JW;PN!'pZ32fhoKjP&:N?t!S]
De,uTYctI4EAg*I6:*dl1ce#b3^,r"6UF7/9i+/7>D.NaRZsJV\$`-.V5:/lX.,cS&"fV^>q.]h2`EKC
/MK"4-iP_@.Ochp/iP7-5\te'RZjAHX/_eYQ'I](R$aG7S=,=>-N,J"-QjER1+=[M-ljrl3'9)N;0[tc
Vk:&iXK87fQBm`"Nd6P6JW<_6kl:i&-UMrZ$BsK&duA*QA7]I`riH=+V.qnVr]r&!3]/iX4Z>Gb4?c2$
4@)P+4@!bAIu]tdUq*t=V5'rbWN*%iS!on2<[p$+2)m9@/ho%/.4ceo/1Mhi.kN&$:igoASXl[]X/__Y
QBdf(R$j>/RYari1Ft(-.O?8],;(>n-6a]P.4?Mm1bpgF@"='(X/iP*XKA1eR$Wu#NWj`SF+-mckl=9V
+X9X5KX0IfaFJ2CAn5O`YcP"3P<L6]4$5\j4Zkef2D[EV1G_*M92/&J=)EPCJr#MOT<b_qStW'^Xf\[t
R[p(#1*&>/1B'*D1,1L6-nHtp+snHf1G:IF=_Mf5(7(GcX08V&Q'dl-R[TY8Q^XIj0,ZVqr@''@,9nT_
.jc5U+WN6n3&=-5Fa9[_ZFdcKY-+LhTTtY%O+qS%K.#m`,R"eu6t1D0`SB(CCi+92B4k_ZXgGL)?:.%?
4?c)#76W^q2E?4H1H7]_9ggs#@uQ\.Mi*FSTs:klS"Q^\Yck1%S#)s89/SO[1,LpN3A`BE.kE4p-7gJu
/06*.G'nA#RZjDFYH+7WQ^=84S!on8TqQs-1,1.*.4d)(-6Y#j.3olU-Qt8t-n&)AM0ub<V74(9Y,.\X
TU(h+OcOdWTJGd4B)s,0*I)O)MT4E%I9^H1G&D&-YctL>TP\U_;aiW&4@27n4[;7l0JYmc8hiDDLkLSH
MMmR[R@0M3S"6=RYcXptT;8-==^+rr3@ud;2`<?H2DZs0,V:l2+!t$+E,^E"SY2jZX!jR-Od)'"S!oV5
S=uL,<`i?a0-_Se/12Vo0JF^h)^[3n*@k*4F*rcB[hHHk\?hm"Q^a5(Oc>!ER#sW9"9\&l.fpP')`)hh
MP[bdO_n?.A8?'q=08[3Z(u5M@VB4L5rUYZ2EEl\3^#Sg4[_(c=auBcOI:lYMiEj`R@9bAVlR#)XdkoT
TTWJW:K:7\2(^@2/MSt50J+h*.Np*&Ble?>Mj'<fR$s\:R['8+SXc5LR5UY-M-*VJ9Lh,o,9e3O.k<.s
,U4T]+!X0bHZt.(Wi;hr['-X+U7@jAP`q2TI$0Uc"9AK'!:Tsu$Qg<879EPkBmtheE,KOlEDUI_YH>"4
WH`,jDf]l-<(oY?1G1784[2(j/5^kVOGoHnOH,HeR@KtFUnjugX/`:lS=Z@?@oZH5@9uf#5;t8L.jHQ#
1b'jm3b3P[G_(tUN<bQ0Q^O81R[H=+R@'G2R@Bb-?rBj$=AqaP1FaRp+WqjQ-7'iR2e7#[I#=,YSXGt=
U7\-OT:D@8P`^?>J:h/6!<E<,"S)OI$6LK:2,[.A92f59EclPKF)Pc*B<\S@Xfd=uF(f<&Anbp_8O#-d
/N,C@3)+OZQ'+"gR[T>#Q'Rl-St;[OVkp8fWh>rPS=FJ)?r^<0<E<-o4ukGF,qLMh-9#.QJ9ZQuO,f<c
Q2R""Q^F,)P`qH)S!]V-CKt+<:/"8R90Fp].O#cQ*#p(X<d/k@KTD:fTqA'PT`1DiS=5b+OH,'GEI)F7
"U4c(!!)`n5m/>Z-SRk^;-."5BP;$hC2I`s>$,+8YH4h/NdGeuG\^o)Bk:[S<_,A8/L`c/N0]WkR[oq>
T;&*UU8"?VV5^EmVD"R5R[]jmAmTFf>#eU(<)?=`4Z>&?*\1`AH$t.$OcG?[OckliOH5QiQ^3l"PFX\&
Q^F"Y@p<JJ:J+8R7R9I02CKac'-^XpH$=n!P`h&gPEhDsPEM2sP*1rhOFr(%G'4o6"V1h>rW2`n('bR"
,VMM`9LhiY>[1<0;d<dB@Tlf7ri@0CYEjlZHY[,'ARAtb>@_)D<^8fNP*D2pR\$.BT:\3=Tq\?ZV50re
Wi;qqR[]b8T7V#cBNe85<)6Iu;-6Xh7l;kfH$adcKp%[_NfK0]OckroPEhK%Q^3s9Qo:4WCKOk=84lHA
7869J8j><`,Wfm_G^5.-Q^*YoOckomQBmf%PE_8oP&YYbH$:hR":,&/!WE'%!WW6$!;um]*?QLR4]>Wd
:/4_d<a&mA?=IJYAR],LX/rD*US*BG6U"LZ='KKIB4>4]<E==/Q("A>S=?+OXK/G&XKA]*W%4jFW2H&O
R[Te/N,hQM1e1D79NtG";,U@^6=5(dIZ0;KNfoQfOckusR[a;BrKdMLrg*YML`qFg67s]L76Wk.8l/2L
7Q3>+EH-G\OcGTiM26tENK0-brK@/K#AJ$nDf\N9'`%e3!WW9&r;[B4+<W7$;+s_d;,9qa>%2,Zra@$^
CMdjgX/i5&Y-XmfC/AAS>#SgLE*lXU<*":,QD:IUQ^+*?WWTB(WiH0"VuEP?V5L5[R@0D3S>20r=[Gtg
91;ZhA5Gor77(F,I>=5RM277TO-#P(QN`Y>P`q>srg,[3QBIJrR>>lZ2apG+2aLVM8j,O#3E9p:KoVFS
MN`jOLl.1PNK'*`OHGluRVutWA8Z4;8g=B;!!<-"!<r`*!!*6B(a2+Q>s:AK91hiU>[CZ9?<UB5Anu1[
W2fir/$#bNVkAunBj=V7>'"L\;.,!?Sti-YVPTrYU8FicV5'faVl-DhVl,cFR/WEsR@BP.N-A`28jYd7
?W]]]9l>H;OHGZhOc><\PEhApOH>cnrKI\TOckrmP*;6"P*1\DG%4NG6paLR=[k_QD175!NfT9^Mi*IT
P*(fcNfoS(OUdOZ@V97_ASlU$?:>nA!W<!@"p4i*!>6qJ;,gOt<(B>M=C,02;Gpq0>Zt<9?E's*X8](9
Wi2u!Whu&#84GX@CiF0,M4UE9V5UGmU8.[`"/_uqWrB!sW<8KSR@4&@)46_XR@'1h>W=\q6s*\q=`]I[
OHGisQ&h%*OTUf4Q^IZ:+d8.VQ'7ApP`h;tP`UE$3]J`]=^>-5FGPj7O-5ckN/`ksNs(Q-PE_:0Oq3af
B5;3mA7]C_Bkq?^/d;1R$3LG6!uaEq;,q%="("Yu<;ol#<aK?MAc6-@AZW!4Wu7n7VQ6\oWNEA#QZH,4
EH5`3Q_gIPV5^PqrhB^pV5'lbWN3&tW<0)gRf8]mQ^*c&Q^*o-S<8A06;(Tj;d=m9OH>TkR[=#8#Eb.1
Od29$R/NBOR/WE[QBRJnQ]mSqR@0+d&R\"$?!^K9J<,_MNfo`mNfB%tNae'4PEhArP*2#nEGo]2CLpgS
D.R$aH@/^G"onW,"T\c[<DlUlA8c$W:Jk(j;H7%7BkM!fA7]DUXK/G(X/DenWMcSiW2HJhQ'@8M??)X8
V5'lbWMuegU8=`aV5'lcW;WUqW1'/,R@9S4Q'%E"Q'%8rQ'%;^Is59n?&b)2OHGfpQ^!GiOctukOHGip
Q'@MuQC.Z<+IJFWNg#ZiO-#NfNfejAG@4-NMij'\O-5]iOc#*YOHBI%rfSUjOcklKDf'E4BjObMAR8A;
@9uo:/hJ1M!!Pkr<Dlh'ARo%79N;I&<`Dsr@UWSJ>[Ck<WsYr1XJr(nWN2qnVZ*M0USsrPMNY'<Vl?Yo
Vl?boVPpGjV5'gbW;idqW;`4aRKo1DOdDK$Od#d1(6FiDIrp+-PE_E#QBdf*Od)/tP`_&hrg*SLrg!tX
Q'[l)PECohQBI;jrfRACP)XnnFa]U<Oo:FIPF%>mP*1t,Nr"nqCM@L$F)PVn<FflO<EN[=@SpQ2//fsU
<a90G@:!M`<E`g>>#\Bt@U`bP?=@<BWN*##XT#7+XK/7rW2Z_mT`1f&Vl$SmVlQr#VlHr%XK/:sVPgDo
X8T%'X-]0?R@9S4$CR<NR?Wo$Q^3hprf\%]Paml$R@9P/R%0V6R?j&#Q'[o,rKn4cP*;,sR$a5*QC*u#
OHPfjOGj+"'U"THNfo`rQ'.B"R$X)$OH>WhQBhE5.$\=SB5MX.D/!d*CKstMAR\\1<`W=/>'a.SD0'Dt
B7+];Bjk%C?=a.QC&MZGBrJ$1X8T+@Xf\Y*XfJ>#VPpAgVPC2bU8P&mVl-PrX/W"nV5L<lWs,N'X/hPQ
rg<hVR[a;F*1<7aR?O)(QBRGpOI;)hQ'n&*Q'e#.Q^!VpQ'_K<*LN4^R?Ec!QC!r*R$X2-Q^=))OI2/n
OH,E_Q&CSgP*_JtP*D<"PECoeP*;5uQ'@MuQ==E>CMe!0G&MGCD/XK0=E.MR=B&C#Bh(j'D/3HaB5_Wu
>ZFd1ASl3sB4kpoJ,~>

%%EndBinary
grestore
np
grestore
328.92 7.91998 mo
350.04 7.91998 li
350.04 2.69998 li
328.92 2.69998 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 91.86 170.1 ]ct
[21.12 0 0 5.22 237.06 162.18 ]ct
snap_to_device
<<
/T 1
/W 44 
/H 11 
/M[44 0 0 -11 0 11 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Z*CR>ZEpmD['R*G[C3QR]tV1m]=b_a[(3WLYdV!CYH+V"WNWP,WiE"qZ*CR>ZEpmDZa7!F[C3QR]tV1l
\@T5\\[f/X]!\5lJsrjAY,\;!X/`+sZ*CR>ZEpmDZa7!F['mHQ]"5G_\[o5RZa[EJS:js#4)U=lX/2qu
X/i5!Z*CR>ZEpmDZa7!E['d?O\\,Sd[C<WV\#l9W<@oUW1F$t>YH"e,X/i8#Z*CR>ZEpmDZa7!E['d?O
\$`KH[^ifIRX@CL/2T=I4?>9=T!G)kWiE)!Z*CR>ZEpmDZEgdB['d?O[^NWS\?;->5qO304$"r?1.!?=
J>9<FWiE)"Z*CR>ZEpmDZEgdBZaI6MXL>R4NG(C!.5O(K0ISJ1/1ND*3JF0(Vl6SpZ*CR>ZEpmDZEgdA
Za@0L\>>9n2(gX@2_6-s.PWM&0JGFG/NnfjVl6PoZ*CR=Z*CR=Z`paA[(!HDKMsEU2)@*K0eb42.4H_r
1,:F43@6kJY,e:tZ*CR=Z*CR=ZELUDZD<+?0deM.0f:d;0eb42.4H_r/1E>(.l/Y-OK#R]Z*CR=Z*CR=
ZF$j/G>:=X1+4_21,_'C1GUU8/M/P+/1E>(.l&S+5EM\@~>
<~WiE)!WiN2$X/i;%X/i;&Y-4t0Y-+n.X/rG*Xf\_/Xfek5ZEgdC['[0GWiE)!WiN2$X/i;%X/i;&Y-4t0
Xf\\+XK8P+Y-"IZKWM;]YdCpH['[0GWiE)!WiN2$X/i;%X/i;&Yct@9YHP.6YHP.5Uk2T+5Ad:$YdC[@
ZEgdAWiE)!WiN2$X/i;%X/i;&Yct@9YHP.4YHagR;_]mb3%K$TYHkF=ZEga?WiE)!WiN2$X/i;%X/i;%
Yct@9YHG%4TQs$_2*4&i4ZbQAY->7:Yct:5WiE)!WiN2$WiE)"X/i;%Yct=7YHF41689uJ5s[Fa2*riL
J[DVcZ*CI7WiE)!WiN2$WiE)"X/i;%XKAY*Nat@*0K;?a4#Ao^0.o+:4bp8FYHP(1WiE)!WiN2$WiE)!
X/i;%YH3^c2_d6O4#/<:2EWuV1,:jQ1I6euYHP+2WiE)!WiE)!X/`2#X/i;"HV5h?1c%'N1GU^>1G^jE
1c6sB4YB!_Xfeh/WiE)!WiE)!WiE,$Wh+Ap/g`&%0f1d@1GU^>1G^jE0.o+:0fUmER'3]rWiE)!WiE)!
WiN.eBgam4/g`&$0/>=61GU[=0JG490/,7<1-.3L7@C?^~>
<~Xf\_-XK8M)XK8M)XK8M)Vl-MmW2ZerX/i8#X/i;#Xf\e+W2-5aUS=ZaXf\_-XK8M)XK8M)XK8M)Vl-Mm
VPgDmX/i8#WN2nRMRBRbW2$&]US=ZaXf\_-XK8M)XK8M)XK8M)Unjc\VPg>gVPgDlTn$&u7Wu5=Wi)bm
Vl-JlXf\_-XK8M)XK8M)XK8M)USaoaUnt#hW2,i1;(a=V4tqA^Wi)bmVl-JlXf\_-XK8M)XK8M)XK8M)
V50rbVl?YoS9I4K0fV9Z9M.^#\>cX2X/iD+Xf\_-XK8M)XK8M)XK8M)V5:)gWMYeo5;"355!CbS6W,p'
N2inZX/iD*Xf\_-XK8M)XK8M)XK8M)Y,eS-Q>8rE2Ej](5s%8#5X%Xt7?4aZYHP17Xf\_-XK8M)XK8M)
XK8M)WND%`4#K/c5r^SR4@;=o6ps[:3^f"1YHP17Xf\_-Xf\_-XKAV+XK8M+OBab-6UF=:779U577BX6
8OGd)75.)rXf]"7Xf\_-Xf\_-XKAS*XJ^G14Z#,^5XS%*779U577BX66p!jt3BK#UT<>0#Xf\_-Xf\_-
XfSXsDb3&H4#8fY4[DCp6:!t)5s[q.5W;%h2`EBF6C5!\~>
<~aiV]Kbg"J[d*L%be(31*g"bE=hW!A?d+m@!c.q+$f$V^`c.:Lmc-4;NaiV]Kbg"J[cd0qae(31*g"kQ<
e(E@*gt^W>in0GY0X0*PeBPeUccjPRaiV]Kbg"J[cd0qadam((e^`'ng#(K,dbWj.LF<0'!"Yj^dDXJX
cHa\XaiV]Kbg"J[c-=MZdaZn%ceI=,bgYG.ho'^d!<<*"!!!eJf$2ajcd0n^aiV]Kbg"J[c-=MZd+$\"
gXaZth;R/2EZ+oX!!!!!!!!!6_q`/Wcd0q`aiV]Kbg"J[bfn;Ud*pRuf\"p9iP8D&!!!!!!!!!!!!!!!
/]62^cHab_aiV]Kbg"J[bfn;UcdUIsbMD$_8I,:r!!!!!!!!!!!!!!!!&ha;bKS;ZaiV]Kbg"J[bfn;T
cdLCriO1rP!!!!!!!!!!!!!!!!!!!!!!"q-bKS5Xb0%lLb0%lLcc=5Td+HgX/HGhO!!!!!!!!!!!!!!!
!!!!!!!!!pe^;Cbb0%lLb0%lLbf.i[b`3\D!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!@EmTJb0%lLb0%lL
bL":K%KHJ/!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*I:f~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
328.92 13.14 mo
350.04 13.14 li
350.04 7.91998 li
328.92 7.91998 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 91.86 170.1 ]ct
[21.12 0 0 5.22 237.06 156.96 ]ct
snap_to_device
<<
/T 1
/W 44 
/H 11 
/M[44 0 0 -11 0 11 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~YcP%0VQI,$WK^sZ4$5M^/O3--4=i!:/hSe1/hJS'0IeV-/gVbm+Yo:^Xf8A.[BlQmB2:HA3&rlQ0/l*Y
2_Qa8.kE8(/1W2!.kWG'+WqsU*"GZEWNNP2TT3eV4ZYYf4?#2[0eY(00JP12.4Qhu.k2tr.Ouef,UaH4
%gsPKY,e.Q@PTVu5s[^s2)7$N0e=b&/1rM(.Olr!.k2qo,qLMc&eGWe#QRW!Z(?&+4>fN$5<h=n3B&fN
/h\n2.OZ_q.k</$.OZSg*ul1=(CLBL!>CHpXe'2j;,9Y;8Obs-5!_:e/i#=>.3p2g.k<(u,pFEP'b1W]
"onW-8Va47Wht8>9L2$14Zt_Z2*F)\0JP75-m^2g-mg5`*uYq0$kWsL!!Gf<QCaeJVQu=n;*@345"%k*
4[1q\1bL4'-7C8h,U+?P)&*Vl%Kc_75^JZ^R%^(GUTpVL83fm75sR[u4?>J^1,1F5.4-;a+<MO:%h&[G
!!"'YPa\&4TW+c`Wi<%hIni:#5sR[u4?>J^/M&A",Tn0M(_R8d$jH_5*GCM#R%'V;Su8KcWiNJ+O^CIC
5sRXt4?>J]/M&A",Tn0M&Io-N!Wj]GN0TZpR%0Y7Su8Kc~>
<~Yd(I<Z*1:2X--^L2E*KK0L/B,4>/<B0JG490JG+21,1I@1bUI</39K-Z*Ua?Y-4dh?qN4.1c7!@0fVB]
3&**@/h\n40.nh-/i5=;.P!))-lc!bYck76WJk=R3]K#W2)-gA1GLO:1,CU;/1iJ,/hJV)/M8J!.PDqW
)]1'+YHXdX>r45p4Ztha0.\b51G::10/,(3/M/S-/hJS'.5*7t)]Th;'`q15XJ9W!3]'#i3]]2V0eb42
0JP=:/LrA(/hSe0/Lr7u+s8$R*Z#D##9K#/XJ92e9M.N'69dIf2`W`I0Jk^E/1;qu/hS_,.46Dd)ANu&
&.&[V6]8"IX/gG77Qimq2E!6?/Mo::1,C[>.k)qu.k2tp,U"3J'c\"r!Ye:TVR3S2X/h7b9KG6u2`s5_
1c6s92)$R1.P!#!-mp>d+<).6(CpNT1jl!uX0]%6WiN1O6Tdh!3]T/X1GLR:1c$j>/1N%q-7'fS(_mVl
#Rr2$T<#$"\@&]NX/i:qGXsn^3]T/X1GLR:0J>".-mg2a*uYn0'bC]U+D@%:W3*;3[C*?IXK8M)N`\G-
4$#>Z2)?s@0J>".-mg2a)&Eqq":H\TP,+nNW3ED)[C*?I~>
<~VPU,cWMlo'ZCbu,8P2NB794#2;FElB77B[877BR16o[=l3\)[6-o\-.V50oaWMm%kC/[G^7S#p67SZr_
:.@Z@6UX@36pj:,5<D(f0./2",Ss@\WMlboVMT1_770X>:.e,P84H!97n?':5sdq+6UF('6:3ml2`)iq
*ucoHW2Z>?>VS0&8P)WJ7n#pB845a06q'O26:+%,6UF"$4[_Ui-6OER(^X<LXK?P569@tE9heS`:ej\U
77Kd969db&6UO7/69dUq3]AlK/K>H<$mM[TXfQ/$<Du^X=&W-t<EN0l77g3E5s.:r6UO1+4ZbV^0e4Up
*Y&Vo:6r<#Z*f0[;b9h\:JX_W:fpgs7n?-=5<V1p5<_4k3&E<A,9e<@#nBOQUp.50['#j/=@H"_:f^h%
=BSQq91;-05!M7q4?GP^1G1.+,n^Uu6@,9(WNWe:\$!/u:e4bb;c6Xq=&`*r8Ou<=5s@Cm3B/lK.OQA[
$je@uQ^!`)T;&6^Z*LX?LK.,M;c6Xq=&`*r779I,4?5A[1+Xh$-Qs?B-tf'@T9bn9SYE$[YHP%2RUSuc
:JOng;c-@d779I,4?5A[.k)_a'cK8KStiEYTUD+1SYE$[~>
<~d)O8K]ZS^?aBSoL!!!!!!!!$#!!!!!!!!!!!!!!!!!!!!!!!!!!!%Vsah>RBgt&T5#64`(!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!#J_T^QXSi[5Y!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!#0c,Y>i!rr<$!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!&Fe=.!L!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$?Tba/P7!<<*"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!(5#Iaho2#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!=LV:UK`7Icf!<<*"!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$$$OS&2q[^=C%R!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!-AU8ZpZc^5(aiMVq,6.]D!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!lYPKnYYcVoZs&aN<)U:BCLr
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#<.U0ZLQR::VoZs&~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
328.92 18.3 mo
350.04 18.3 li
350.04 13.14 li
328.92 13.14 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 91.86 170.1 ]ct
[21.12 0 0 5.16 237.06 151.8 ]ct
snap_to_device
<<
/T 1
/W 44 
/H 11 
/M[44 0 0 -11 0 11 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~V5pZ"T7Td65s%4n2`j&N/1`:s*>]A#"pP&-$VuSDPaIr0R$O),VP^8iVlZl!VNbge83T4#1G^m=,UOi]
'atEZ!<NTlFd&,SQ^F/,Q^F86VP^8iX0&A#YG-qT:-Um'/h8M$.MiI%%0ch6!'5IfPa.T$Q'@JsQ'n2:
USO`_X/rA%YHs[E;*?iu/L2P`%hf`j!<EQaDhaF=Pa%K#Pa%H!R\$4HUSO`_XK8Y/X0S^m@R)Y)/05ZD
'++d@"Xn&APEM/pQ'RYsO-#NjR[]e9StD[LXK8\2W3*;&K2sWV,8Uq"!W`9B?&+T-P*D<!P`q>sOd)9'
R[Te@StD[LY-,"4XKJh2S9-G+((LZW!$c07Pa@`%QBmf"PE_B)QC+,0R[Te?SXuIGYct:4YHb4.Z\LCQ
%1!4FC5%t@QC+).P`q;rR@Th8SXc.=T:hgHSXuIHYck13Yct=5Yb>P5"q=7dR$a80R$a2)Pa.T(S=cLN
S=H+?SXuFESXuIHYck13Yct=5WOA*l:PkR/R@9Y9R$X,)R$sS>TqS0SS=H+?SXuFESXuIHYHFt/Y-5"0
Vm`RsSsl(6QBmf"P*;,rQ^OJ?U7n9TSt;OGT:hjMT:hmP~>
<~Vl?YpUNo="3]&`R0JkR5.Olko+<DC<&/,HR)H)TkR@pIUTUh^NXf\_-W2Z_pVN>1P5W:V[/M/S&,:+W]
)ANi#$P!q.GFt_&T:hmNT:r0`Xf\_-X/i8#X/UbH7liUf.OQYj/0#?>((^ZN$U/m&T;/?^UnOEQUoU`(
YHP.5X/i8#X/h_18N8I_.3TiU()\/1#QPDaCl+aXTqJ9]U7n<YXg#%6YHP.5XK8M)X/i:j><FMm.N]QF
*Z#=o&MIdXTq@sMUSXZRW3!>7[^NWQ[C!<JXK8M)X/i>&I8DLF,8q7,%gE:b>`,,JSti9]T:M[OYdCmJ
[^NTN[C!<JYHP+3YHP(0TPQ;*)\`kp""n>MTr=ocVPU#YSY<!c\@AuU[^NTN[C*EMYHP.5Y-+k-X+E/H
'+YQ_>_o2TVQ6l%U7\$PX0Ab.[C3NP[C!?M[C*ELYHP.5Y-+k-XJfA8%223fW2HSpXK/7pT;/?eYHY14
[^NWP[C*EM[C*ELYHP.5Y-+k-X0.a`8VEb,WN<>.XJi"nWi`M0Yct:5[^NWP[C*EM[C*ELXK8M)X/rA&
Wi`4pU7Id?WMlYfT:i!YWiWG.YHY77[C*EL['[3I['[3I~>
<~]=#&P_3A,/;b^1i9i+\S:JX_O4"r<8*>]7l'Ms^^TrYK)X/;o#ZE^[=\?r]O]!-B[>#80s8P)TC7S-08
1aaXs(D7ZMFe,:sWN3)"WN<D4Z*CR<Z*1OAYe$<1>>7a^69[[s6o-,;,TRF*%n;8IVlZbkXfA:sXgGRD
ZEga>Z*:O?YcbNk>t[UW5r^h]/2&\,'Fu3HH'YP;WMlViWiE,([C3EJZEga>Y-+k.Z*(F4BLk9O3%ZX/
+rV%&'JsctYcan&XKSXuVlR,2Za-mBYck44Y-+k-Z`gO<NEnV*0de4g&IT!sAX0=%X0]+7VkpAqYHtUA
ZEpd<Yck44W2Q\qWiE/&Y]i#S,97X;"".W8Su/BZYck+)UoCi6[C!6FZEg^;Yck44W2Q_rWi<,)Y)PLc
*#9;*?%JK<UoCGrWi)_q['mTXYd(L<Y-+q3Yck44W2Q_rWN!#%Y-qpV'HC&?T:_dOWiDqjVl[/2[^EQN
Yct@9Yck76Yck44W2Q_rWN!#%ZDs[$<g:%uTqnTaWhuSfZaI9LZa7*JYct@9Yck76Yck44Xf\b.YHG(5
[B$aL]t1qg\@8lNY-,.@\@T)SZa7!EYct@8YHG%2YHG%1~>
<~`6?HQ]Ia*a!!!!!!!!!!!!!!!!!!!!!!!!!!!,01Bo/^_M0O`B`lH0Ba3DcOa(u(_!!!!!!!!!!!!!!!
!!!!!!!!!!'l8S8K8GMAK8l\6a2c9CbK\/Ne%n<N!!!!!!!!!!!!!!!!!!!!!!"3OI#O2EObA"-OfQ78
`lH0BbKS2Qe(C$.!<<*"!!!!!!!!!!!!!!!&3kZ.JprK;L4kGSZG=Ds`lH0Bb0/5YbLad^"98E%!!!!!
!!!!!!!!@!NeVq1N0o95L7,-V_SjC2`lH0Bb0&5^`m*#Q/-,_N!!!!!!!!!!"$h:#I@-grHujn(Up@hT
_nsC7`lH0Bc-=\`aj&;[QOs2t!!!!!!!!9fE0693S=#1XEIt1,^qmt-`5K^=a2lBEd*U%]d+$:YfJ3F,
!!!!!">+_PM4:B;L3\!(XM2BUa2Q!:ai_`Fa2lBFdE]t\dF-@bd^0,W!!!!iKnG/GT:M!kI#Of*]YVS.
`l?$=a2l?Ca2lBFdE]t\dF-@baPLV3!'-X3N1$QAT94tcVm=(T`5KX7`l?$=a2l?Ca2lBFd*BhYd*^1`
a5+nIYb%GEWi;YRL5;:rY.)6d`Pf^6`l?$=a2l?Ca2lBF~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
229.68 18.72 mo
250.74 18.72 li
250.74 .059967 li
229.68 .059967 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
229.68 4.73999 mo
250.8 4.73999 li
250.8 .0599976 li
229.68 .0599976 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 91.86 170.1 ]ct
[21.12 0 0 4.68 137.82 165.36 ]ct
snap_to_device
<<
/T 1
/W 44 
/H 10 
/M[44 0 0 -10 0 10 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~CMIKpAS#@]B4PUfE--8EBP;'mAnPahBP;-rDJsH4FEMbNH$XmfH@:9nC1gjV=^509?<^]AA7T1X@q0"Y
@U`eU@:<VUB4tsmCM[j,EccJJG^4U`=]J?q;c?Um;,L4k>?P$+<`W:'=^#!4?=%#J@q91aAS,XlD/aN9
F`qtS;,L:k<)?1V4?u>,:/4PW;,U:j<E<1&?=%&LA7fIfBkhF#E,p&CF*2YM<`Dpg69@1a5!_\18Ol3;
84Q9G:Jb"i=]o';@:EbZBkhF#E-$,DFEMeP:JXSI2E!ii>[1W@<`2[e7Rp'D:Jb"j;,L@q>?kNC@q91c
CMds.FEVkQ8Pi8S4Zl/.<E2sk6p!Fi5<qS)9MJ>[:Jb"k>?kNB@:E_YBkqO%EccJK=(?&T:d@65;c?Od
5WLkd4[)/!8P;fS<)d%*?t!MR@q9.bCMds.E,p&C9O)X[?r'BZ4$ZP83AW]U4$>hp77U*M;GpRu>[:]D
?smGSAnc$sE,p&D9N>kJC1(.92`O<&84#Em2`X9)@U`G4;GpRu>[:]D?smGSAnc$sE,p&D~>
<~?!LZ@?!UiGA78\L?t<\PA7T.YAS,OdBP;-rD/O?6F*)MIG^=acH@10k>Zk*+;cQq&>?Fg)<E;pk?XI,G
@:<SQ@U`eXAnYsrC27X(EH?5EGBeF]<)H@f;d!7*>$>$3>$4j'>?b?;?!^iD@:<PP@qB7bAS,UjCi=<5
FED\N:/4Sb<)ujk84uZR:JX_Z<``@)=^,-9@U`bTAS,RgBPD3tDfKi?EccGI=&r:":ej\Z=B]!;?X6f<
=Bes6?!^c@?XI5N@U`hYBPD3tDfTo@F*)SL;Gp:`7S6Q`F*)MDCM$s_='Jj4?!^cA=]ns6>[:ZC@q91b
C2@d+F*)SL;HR+(;H.(BGB\.HAmSYF=Bes6>@(WC=Bej2>?kK@@:E_YBPM=!EH?5F?>4J!@TZiGF`h_@
@U3/B='A^0=^>9=>[CZB?XR>P@q9.aC2@d+DfKi?<+:0)E+NTg?=Rnk>ut35<EWF+<a&a9>?tE<>[:ZB
?XR>RAnYppDfKi?<*XHnHZa@D>$GZYBk1LK;H@"8E-#Sp>?tE<>[:ZB?XR>RAnYppDfKi?~>
<~7n-!=91qoN:J=DM8k2995!D7u5X7S"7Rfp?:/=Y^='/U/>[:]E?!h#K7RKF'5XIk-7mo^,5W^k[3]]De
4?P_g5X7V&84cBF:f1+i<EE=+>?kH@4#f8\6:==577BR4779@%3]]>a4?Yhj5s[k+6:4.092&)W;H-Xr
=BSg42)RKX6U3jt1,_'Q3]]2W2E*QS3BB5`5s[k,6UX@4:/=\a<)m"%<`iL.3]T5_3BB2[8PDfQ:/";J
7Qj"'5X@Y#6:*t(5X@V":/=\a<*!(&='/X12)R6H0/c*dAS,F[>#nQp76Nn%5X@Y$4$,Jb4$5Pc8P2ZO
:f:4k='8^21cdf`3'L#AB4kpe>#J3i8jYs:91DK>5<:qd3]fA`7n?3F:/Fec<EE=,5tb3X8O>mGAS#I]
<_uXd83oU38OZ-86p3ju5!M1n8P2WN:f:4k<)m"%2apq^=AVgi:K(b4:eFSV7R0:-76sF26TdUo4$5Pb
7Rp!A9MSD]<)m"&2a12N@:3DE8kWE!?!(#l6Tmn<?s6Dj6TdUo4$5Pb7Rp!A9MSD]<)m"&~>
<~!<E3%!<E3%!s/K(!WiE)!<E3%!<E3%!WiH+"9\i2#7(VC$k3^Y%1a$`!<<*"!!!!!!<<*"!!!!!!!!!!
!!!!!!<E3%!WiH+"9\i2"pYG@$OdIT!!!!!!!!$#!!!!"!!!!!!!!!!!!!!!!!!!"!<E6'!WrN-"9eu6
#RLhH!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$#!<N<(!sA`0"U52;"pbMB!!!!!!!!!!!!!!"!<<*"
!!!!!!!!!!!!!!!!<E3%!sA`0"U52;#7(YE!!!!!!!!!!#7(P=!s&E'!!!!!!!!!!!!!!!!!!!!!WiH+
"9\l3#71_F!!!!!!!!!##6tG7!<<*"!!!!!!<<-#!!!!!!!!!!!<E6(!sA`0"pYGA!!3<,!!!!""pP54
!<<*"!!!!!!!!!!!!!!!!!!!!!WiE*"9\l3"U52;!!*H>"T\W(!!*0(!!!!!!!!!!!!!!!!!!!!!!!!!
!<E3&!s8Z/"U52<!!!05$3p_8!!!$%!<E0#!!!!""pG#-!!!!!!!!!!!<E3&!s8Z/"U52<~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
229.68 9.41998 mo
250.8 9.41998 li
250.8 4.73999 li
229.68 4.73999 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 91.86 170.1 ]ct
[21.12 0 0 4.68 137.82 160.68 ]ct
snap_to_device
<<
/T 1
/W 44 
/H 10 
/M[44 0 0 -10 0 10 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~91i2qBOOq>4@)G,77'0u8iSn-;FNrJ912*C='&=#@:a.cAnGh"GC"[d;G9nmB4bIN:.[rG5WM5/6o6SU
2a1;W8Q&Yj:JXkjAS5[e@U`tfG'JC`>Z=L!CNXW.@9$)u6T@J5=%>/-5t4C<:0:[q7SH`_>[1K:>$Y]V
DfU&I?!L<*@WQ^1@Tl`/8j>O.:/OkZ3Ailc:Jjtg=^YH6>[1E7>$u)aDK0iE>[_#E@<@'QGB%A'=&_gQ
3C?P<:J!o86U""@@UWD8=&i0t<Es'LCMdp->@M,N?Yaq;J:)KN?t!505;kW"?sZSa76X+9>$G9@@:*;E
>[V#ODK'H2?XI5OAnc@9Knk5%CLppV:/+MY9M/2c7n#j66V1?d=]\^-?=IMXDJj-$A6`AMCM@R+GCY<p
E+<9^@9m,>9L)!@6q^9E6qU<R=&i=*@;0XuE,TE&@UW\RA7]IjE--;JG&_5$@q&eH;bp"R8Q/hn9hA&U
:/Y2&Chdj:RY#-c@UW\RA7]IjCi433F*)>4An>IW=]SHs7o<Dk=&i3o:K(4p@;1=[RY#-c~>
<~<)[(CIscHcA8#drC1^jZDIR.$Hu<bFDe!-eChI9f=C#ENCi!s+CMdp+>#e^?ItE3!G&V>:ARB%hBO4nN
@:t1`CiFK5ART(Z>[ClPBP;*pC2@^(?<:-9FbPR!HZa1A@T[,cJ8JRuBl7m3FFes\@V0@j@:Wq^B5DF'
Bl%a/?X?lBCkI\&I!]pRBO>([G'\CM@p`b^G'S7QFa8"A@:NeZB5_g2BPVO+>@1`@@Wd6[I!p3XCi<li
>\eA-G^=FHDJF*CMMlk$Ec>o5E,or:C2@j1>$tfH?u(%DL5LV.G(+OI@:*GiNg>3+E,'3:J:iE-IXHB`
GBIh=DJsK6?!UcE?=7PkJVT&5I=-<bCiaZCFaJe%H['[REHm(pKRnZ,It)Z^EH-&@@TloC@UNY\F+9(+
K6_ZjJqeo3F`;DOGCY0dEd2qXJ:E''KSP))F)l>B?sd2F>[:`HCiauWN/`F9KoLkAIXl`cI>X/DI<]s^
G'\\"ObeLGVh]86?sd2F>[:`HBPhm?LldRPLldRRL5CY8H\[W@MM?V)GC+[iK85brVh]86~>
<~1,2'sAS5Rh>[V,T@9li/CKk(bG%YB,CKaY>=AMU[69de%4Zu)#8k`#W3&<ZoA8Q7&DJ<`r>ZFs=AQMf5
>%)iKBP2!c:e45M7R07'3]]Gl8P;fT6p3b(?>sk%Eb8il=\i=BG\1&]Ao)@*E-?J6<Dm((;bU"W6p3b'
7S-Q[779O1<c</-F),Q(?WC6:DK9l7?X$oPF)>c*BOt^S<(ftU6pX437S$HY7S??B:1%s\Ci=0*CM73W
<*jH^G&qS7DJ<p4LjX/PCM@3[:eaY\:f:Y/78$?I9ibtHFF/:RF`qh7=]8ODNfe]qE+s',HujFVG'%M.
<_uF_;cI+39he5Q9MJSqBQ\ZHG^Fsb@q0FpF**+tH?X@HC2nZYNJW(#C0Xb<>?b]O;+a8N:JFVd>]+tA
IX$<kH?OdaF(fWFG(+dYCN=Q?Lkg@rDIZsW?!LuQ:JOJQ8P;cR=(H8rL5h+<I=?iqH[0pYI#F)AG&_JC
I=comHXpArL2CI6:JOJQ8P;cR;dX9]K92@VJ:WT/KS,&2HA@K=KRnDfItMu_D.@L=L2CI6~>
<~!!!!&%1*7E!<E6'!<E3$!s&E-$3C86"9AN(!s&E&!!!$$!<E6(!sAc3!!!!$$kNjS"p4o.!<<-(!WW3#
!<E]k!X/f3!<<-#!<E3%!<E3&!sA`2!!!!!#8e6f%0cn:!<<-,$j$D0!WrQ0"q1tD!<E9)!W`?'!<E6(
!WrW4!!!!!";W+"%g`IE!<E3%"pkS<!<<-%#R:S=#7(P9!W`<&!<N<)!WrT2!!**#!Xfql',1o^"pG&.
!!*90#mUP6!WiH6*>]%c#6k;5!WrN-"9\r:!!*-%!<j)W+=8'<$kNaH!<<-++!_3p!s/N0%h9*b&.T!N
"9\f/"U,,:!<E3%!WiQ9(aUOK'bh5f!sAf5#6tbY#R1D6!X9/T(D@8d$O6h=#6tPA!W`9&!s/Q/$5k?G
*=r_o'G1uh#6G#9"UYS?!sT&<&eGK]&.]0V#R:YB!W`<&!<E6("q27h.kMeP(E"&#$OR.B#o+Kq#mLV@
#n.=\+:no">TF(W!W`<&!<E6(":#DP,r71s)BKt9'GD)f#S@sm'bLfY$4R=M%hBso>TF(W~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
229.68 14.1 mo
250.8 14.1 li
250.8 9.41998 li
229.68 9.41998 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 91.86 170.1 ]ct
[21.12 0 0 4.68 137.82 156 ]ct
snap_to_device
<<
/T 1
/W 44 
/H 10 
/M[44 0 0 -10 0 10 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~@:<PO@:Nk\C2@p8J;9)FF`DD;AmehDB5:O8>[(K1>#\6nApo]*S9Jgc@U`bS@Uit]BPMF,H@^j.I<TaL
B4G@W>@UE'=]8U2>$+s<GCu!BO)]/]A7K(X@Us%^AS,[pFEr=dKn"GlEG]K)?sHc=>#ej4=CH)mJr>eV
L3.cjAS#C^@q9._AS,XlE--;LH$F[]GB%D1Bk([^>[:K.?uUODK8YnXObA@8BP(gdA7]@bBk_9sD/jZ@
FaSdpK7.r`EGfZ0CMIHrJr>SKOHZ**UmmR'C2%?nAS#IeC2.L!Ci497GC"^gJ:;olE,9<.E+j'5NK&mV
O-5m$WMH&LCMIQqAnGXgBk_9qC2@d,H[L0gJ:iQ/H[0XWG]J.]S=Q.6Pa@l2X/D_eChm`uAnGXgAnGXe
BPM@#F`qqQH[UEoJ:DZaGC>$mS=Z::Pa7f5WMQ>aChm`uAn>RdBk_6pC2@a+F*2VLH$apdH[U?iG^t?r
St2=7PEqZ2W2?AcEcGu5CMR^$Bk_6pC2@a+FEM\IF`hnNFF&CbH\$a!SXc+3PEhN-W2?Ac~>
<~@:<PO@:Nk\Bkq^4ItirEJ:iH-K8"l0SApG,P*(fRJU26TJXN4,TQG9r@U`bS@Uit]B5)7)H%C^,Mi<CF
KSYMILS0-INeWUTJ:;p&S#WB[Nc')fA7K(X@Us%^AS,XoF*N+`MiNRMLQ%.PLPpkGJp`<*E-mD0WNE+l
K5Z-dAS#C^@q9._AS,UjDf^)HI"d?;OHGK\Q'I]!Knb2%H&n`&Z)st!Ndue3B4b^cA7]@bBP;'oCiFH;
E-HkmPEq;lOd),nO,npLNh*8VZF$a6U6^moBkV-kAS#IdBk_9rCMn-4EclebNgQ6*O-,NjR#?m#Tr+oo
Yd:C,W1ofGC2%?nAnGXfBP;'mBkqU)EcZDQKohXnS=,J,R#diDR[g"EVQ6\iWMQ/TCMINqAnGXfAnGXe
B5)-tCi+-9Iu08SUna*<Q(P@eR\$7LV5UDmW1ocPCMINqAn>RdBP;$lBkqO'C2@g4I>3]ES"QOJQ`%3u
St)@EUo:5hV50]QEH#f2C2.KuBP;$lBkqO'CM[m2G^tL*Od`&>S?''*S=5q=U8=`^V50]Q~>
<~7n6'>7nH?I:Jk+r@:sCpKS,&5KRS>pS]HV)Q'@_lG]@A2I?L%cKje:n84Z6@84cHJ9i"\h>[qD]OGf$N
Kn>)7L7EU<OGB<nG]n7^Q_U1<G?eTf8kDQE84lNK92&,[='T-BLkLM5JUW9*J:)ZqJ9cs)Cj1](V5Kf@
C0>+\91qlK8P2WL92&)W<**7.H@(@#M1gS5O,&aOK8"r$Fc3#uY,@_JEbK9%9h\2P8kViO:/4P\;H-_#
BlA9HJpr/oIt!*&LPLM<PbbRmZ([J?H?+%?:JOVX91qrQ:JXb_;,^IqC2J->It36,I=$O#Ob8UmWNNM4
YG%28IsQE_:esh[9MA,S:/4PZ:Jk%i?XRJYDfgAUJ:2]pLk(\dXg#"0Umd9oH['j^;,C"^9MA,S9MA,R
9i"Va>$GEECN"B@L5())L6/@2Xg>@9U6psqH?OR[;,C"^9M8&Q:/4MY:Jk"h=B]*@Bl.p6ItNZ6LmP*A
Z`pO0U6gjmG^"L\<E)mo:f'tb:/4MY:Jk"h=^#0>AS5jsG(,@,NLQuKYcXq&T9Y=dG^"L\~>
<~!<E3%!<N<)"9\o:&fW&D+sA-P)\s"q2iACQ+Wr!=%LE7B(IMbL;[`p:!<E3%!<N<)!sAc4%29a&2_ZX&
*#]b9(GuO-)\OD>%LW[`6udH`/dDdq!WiB'!<N<)!WrQ/#7M.W1b^I,+s8$Q(DIAt&doNk#7r.NEf,!?
)@$lh!WiE)!WiE*!WrN-"U>AC*$?^a0Ie:e/0cPc'c.Jg%4bb8P)OHf.i''<!s8T+!WiH+!s8W."9f#:
%2C'?1bU7#-7(/f-7'QQ5AH^iWL/3K8i/(<"9S`.!WiH+"9\i1"9eu6%hfm-/MT.B,9S0_2BO8VH&eJi
TpC".=\:q6"9\f/!s8W-!s8W-"9\l3$k*[]*%*O'1+jb*2'thCL6%LRKRdc4<D,bH"9\f/!s8W-!s8W-
!sA`0#6tSG'ce\R69uqJ0h-eDL74ctIW]L9;FWr@"9\f/!s/Q,!s8W-"9\i2"pYGD',_r>0KMZa1g,Zq
R#cuPHuiq)9h@fA"pG/5"9\i1!s8W-"9\i2"pYDA%h]Zq+tlDP5@fe4O+r+-FDG8`9h@fA~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
229.68 18.72 mo
250.8 18.72 li
250.8 14.1 li
229.68 14.1 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 91.86 170.1 ]ct
[21.12 0 0 4.62 137.82 151.38 ]ct
snap_to_device
<<
/T 1
/W 44 
/H 10 
/M[44 0 0 -10 0 10 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~E,]]3Chmd#Bk_<tCM[j)E,fo?GC"^gLQ%@\R@^.LV5:#aU7n6PSt2CAEH#l7Chmg$C2.O"Ci+$,EH6)A
G'SIaL5CnPQ'e,8U8"BUTV%gHSXc4>EcQ/=DJa3*Ci!s*DJj?2F)uDEG'A7YJVAo=NffWqSt;RHSt;LD
SXl:@FEDSEEH#f5E,]c8E,fl;F`__IF`r"TIY!0-Ll@I]R@9V8S=H+>S=H+=GBS.PFE;JCF)uDDF)l;A
G'8"NF`qtRH@CEuLPh1WR$jD5SXuFESXl=BH?sj]GBS.QG'8"NFEDVGG'8%PG'A4XH@CEtKnt_NQ'[o.
S=Q4AS=Q4BIXQWlH?sj]GB\4RG'.qLG'8%PG^4U`I"-^!Jq]&?Pa7]*S=H.@St;RIJ:E&tI=-?eG^+FU
G'8"NG'8%QH$XmgIXm!#JUrN1PE_B#R[]e9St;UJJUr?$IXQWlI!U'_GBe@XH?smbI=?ZqIXcp#KSG8<
OHG`lR$sP8SXuLJKnP,3Jq8K'J:DupI!g<iH?smbI=?ZqIXcp#KSG8<OHG`lR$sP8SXuLJ~>
<~Df9N0CMIQtBP;*pC27X%DfB];G'\RdLQ%C_S>3$aTV.sMSXZ%7Q^3o$E,TZ4CMITuBk_<sCM[g)E,fl=
Fa/7]L5CqRQCO\GS=H+=R[BG-QBd]!EH,r9DJX*'CMRa&DJj?1EcQ2AFEVqUJVAo=O-5m#Q^=),Q^=#'
QBd]!F)uAAE,TW3Df9Q4DfBZ7FE;MEFEMePI=R!*LlIR`OHG`kPa%DsPa%DrG'.nKF)l8?EcQ2@EcH)=
FEDVHFEMbNH@:?tL5M(XOckooQ^F/-Q^=&*H$OXYG'.nKFEDVHF)uDCF`heJF`r"TH$t3qKntbPNfT?f
QC!r)QC!r*I=-EhH?jaZG'8"NFEDVGF`hhLGBeF]H[^NtJq]&@Nf]HiQ^F2/R[T_9IsuipI!^0bGB\4Q
F`__IF`hhMG^=adI=Hg!J:WE0N/`p_Pa7W$R[Tb;JUi6!I=-EhH[9p\G'A.TH$O^_I!pHmI=?]uKSG8<
MMmFSPEhK%R@9Y;KnP,3Jq8H%IsuclH[C*eH$O^_I!pHmI=?]uKSG8<MMmFSPEhK%R@9Y;~>
<~<)cdo;,C%a:/4S]:f1+g<)ck!>$YNEBPVR/G^P'pPEV/lOH,<ZMi!:H<)cgq;,C(b:JXe`;,U:j<)lq"
=^59@B52:&F*E"]O,o?^NJrdPM2@%E<E3!t;c6Ih;,L4h;c?Uo<`W7&=^#'9@qKFjD/aWBL5(G;L4t>7
KnP)2='&F&<)cdp<)cgr<)cgr=BAR*=BSj5?t*\[Bl%a0J:W<)K7ef/K7ef.>$5!1=&r=$<`W7%<`N."
=]nj/=BSg3?!q/RB52@*G'8+VH[C*dH?spb>[1N<>$5!2=]nj/='&I(=]nm1=^#'8>[V#PAnc+$F*)SM
H?spbH?spb?sd8I?!LW=>$>'3=]ed-=]nm1>?kH@?=@>SA7fRmCi433F)uGFF`hkO@:<SP?X@#C>?b96
=]nj/=]nm2>[:]F?t!PT@Uj"`CM[m-EH6)?F`hnP@q&kT?sd8I?<pf?>$G39>[1Q@?XR;N?t!MTAS5[j
BkhF#E,fr?FEMePAn>ObA7K(W@:<ML?=$rF>[1Q@?XR;N?t!MTAS5[jBkhF#E,fr?FEMeP~>
<~"U,&4"9\i1!s8Z/"9\i1"U,)8$4ROZ*$Qmi4\AgdE,]]0ARAVA;GU"["U,&5"9\i1"9\i1"9\i2"U5/9
#n.:T)'1%R1-A*)@:<SO>?4Wt:JFJR"pP57"U"r2"9\i1"U,&5"pP8:#mq+N'Gqi7-7^u;9MA2V9M.lH
8Ol6<#6tG;"U,&5"U,&5"U,&5#R:S>#RLkI&/,j!*@!'i5!MA%7Rfd66psF0$4."E#6kA:"pP89"pP89
#mgkC#RLhG%1j3i)^$O^1Gh$Q5=%S$4Zu"o%1N^R$4."F#mgkC#6tJ<#mgnE#mq(M%1j0g(`akP/2/n@
4?Ynn4?Ynp&.]9]%1N^R$47(G#m^eA#mgnE$OdIT%M9Bi'c7u:-RgZ'2)dKS3]fJg&eP]e%h9$X$O[:J
#mgkC#mgnF$k3^Z&/#Zk',29',UOrm0f1^D3]fMj'GD)k&.]9]%LigS$4@4M%1NaV%hK<b&.oQj(E"25
+X/0[/i#:C3'0;i(`*u('bh;o&ePWa%LrsZ%1NaV%hK<b&.oQj(E"25+X/0[/i#:C3'0;i~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 ]]
] del_res
/MIXTJF+Arial-BoldMT*1 uf
/MIXTJF+Arial-BoldMT uf
/PBAAAA+Arial-BoldMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
